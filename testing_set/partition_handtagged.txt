Partition_VB MATH_NNP where_WRB MATH_NNP consists_VBZ of_IN all_DT masks_NNS in_IN MATH_NNP ending_VBG in_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN two_CD sets_NNS :_: MATH_NNP consists_VBZ of_IN all_DT vertices_NNS incident_NN to_IN some_DT variably_RB indexed_JJ end_NN ;_: and_CC MATH_NNP consist_NN of_IN all_PDT the_DT rest_NN ,_, namely_RB those_DT vertices_NNS incident_VBP only_RB to_IN ends_NNS of_IN index_NN 1_CD ,_, the_DT interior_JJ vertices_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP many_JJ sets_NNS MATH_NNP of_IN size_NN MATH_NNP and_CC let_VB MATH_NNP be_VB a_DT base_NN for_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP according_VBG to_IN the_DT types_NNS of_IN their_PRP$ corresponding_NN faces_NNS ._.
Partition_VB the_DT set_NN of_IN split_NN faces_NNS into_IN four_CD sets_NNS :_: EE_NNP ,_, EO_NNP ,_, OE_NNP ,_, and_CC OO_NNP ,_, where_WRB face_NN MATH_NNP is_VBZ assigned_VBN to_IN a_DT set_NN according_VBG to_IN the_DT values_NNS of_IN MATH_NNP and_CC MATH_NNP :_: CASE_NNP :_: Both_DT MATH_NNP and_CC MATH_NNP are_VBP even_RB ._.
Partition_VB MATH_NNP into_IN infinite_JJ sets_NNS MATH_NNP and_CC let_VB MATH_NNP be_VB the_DT bounded_VBN linear_NN operator_NN that_WDT maps_VBZ MATH_NNP to_IN the_DT MATH_NNP unit_NN vector_NN of_IN MATH_NNP when_WRB MATH_NNP ._.
Partition_VB the_DT image_NN MATH_NNP into_IN finitely_RB many_JJ pieces_NNS of_IN diameter_NN MATH_NNP each_DT and_CC let_VB MATH_NNP be_VB the_DT family_NN of_IN preimages_NNS of_IN those_DT pieces_NNS under_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP of_IN all_DT isometric_JJ embeddings_NNS of_IN MATH_NNP into_IN MATH_NNP into_IN two_CD disjoint_NN subsets_NNS MATH_NNP in_IN such_JJ a_DT way_NN that_WDT whenever_WRB an_DT injection_NN MATH_NNP is_VBZ in_IN MATH_NNP ,_, the_DT `_`` flip_NN '_'' injection_NN MATH_NNP is_VBZ in_IN MATH_NNP ,_, and_CC vice_NN versa_NN ._.
Partition_VB MATH_NNP to_IN the_DT intervals_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP each_DT of_IN length_NN MATH_NNP ._.
Partition_VB the_DT universe_JJ MATH_NNP in_IN MATH_NNP disjoint_NN sets_VBZ MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT congruence_NN class_NN of_IN MATH_NNP modulo_FW MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP so_RB that_IN MATH_NNP consists_VBZ of_IN all_DT MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP so_IN that_IN MATH_NNP implies_VBZ MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP has_VBZ NAME_NNP support_NN on_IN the_DT region_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP subsets_NNS :_: MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP subintervals_NNS ,_, each_DT of_IN which_WDT has_VBZ equal_JJ length_NN ,_, that_DT is_VBZ ,_, let_VB MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP subintervals_NNS of_IN equal_JJ length_NN ,_, that_DT is_VBZ ,_, let_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN infinite_JJ sets_NNS MATH_NNP and_CC apply_VB the_DT selection_NN principle_NN to_IN MATH_NNP and_CC the_DT covers_NNS MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT MATH_NNP with_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP and_CC MATH_NNP an_DT arbitrary_JJ partition_NN of_IN MATH_NNP ._.
Partition_VB the_DT tripletons_NNS of_IN such_PDT a_DT drawing_NN into_IN 27_CD classes_NNS according_VBG to_IN the_DT layers_NNS to_TO which_WDT the_DT incident_NN low_JJ ,_, middle_JJ ,_, and_CC high_JJ edges_NNS belong_VBP ._.
Partition_VB the_DT tripletons_NNS of_IN the_DT drawing_NN into_IN two_CD classes_NNS according_VBG to_IN whether_IN they_PRP are_VBP inside_JJ or_CC outside_JJ MATH_NNP ,_, and_CC apply_VB REF_NNP with_IN MATH_NNP and_CC MATH_NNP to_TO find_VB a_DT drawing_NN of_IN MATH_NNP in_IN which_WDT all_DT triples_NNS are_VBP inside_JJ MATH_NNP or_CC all_DT triples_NNS are_VBP outside_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN subclasses_NNS MATH_NNP such_JJ that_IN for_IN each_DT MATH_NNP there_EX is_VBZ some_DT MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP â€“_NNP equivalence_NN classes_NNS ,_, so_RB MATH_NNP ._.
Partition_VB the_DT variable_JJ set_NN MATH_NNP into_IN MATH_NNP equal_JJ size_NN sets_NNS MATH_NNP ,_, where_WRB MATH_NNP ,_, MATH_NNP ._.
Partition_VB each_DT block_NN arbitrarily_RB into_IN two_CD pieces_NNS of_IN size_NN MATH_NNP ._.
Partition_VB the_DT unfilled_JJ gridsquares_NNS of_IN the_DT bucket_NN into_IN connected_JJ regions_NNS (_( where_WRB two_CD gridsquares_NNS are_VBP connected_VBN if_IN and_CC only_RB if_IN they_PRP share_VBP an_DT edge_NN )_) ,_, counting_VBG the_DT four_CD gridsquares_NNS containing_VBG the_DT current_JJ piece_NN as_IN unfilled_JJ ._.
Partition_VB the_DT tree_NN MATH_NNP into_IN disjoint_NN sets_NNS MATH_NNP to_TO be_VB specified_VBN below_IN ._.
Partition_VB all_DT MATH_NNP 's_POS into_IN MATH_NNP groups_NNS MATH_NNP so_IN that_DT for_IN each_DT group_NN ,_, MATH_NNP ._.
Partition_VB the_DT sequence_NN MATH_NNP into_IN MATH_NNP equal_JJ parts_NNS ;_: call_VB these_DT parts_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT path_NN MATH_NNP into_IN open_JJ ,_, closed_VBD and_CC half-open_JJ subintervals_NNS so_IN that_IN the_DT MATH_NNP subinterval_NN is_VBZ sent_VBN to_IN the_DT MATH_NNP open_JJ cell_NN ,_, MATH_NNP ,_, in_IN MATH_NNP that_IN MATH_NNP passes_VBZ through_IN ._.
Partition_VB MATH_NNP into_IN parts_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP in_IN MATH_NNP many_JJ intervals_NNS of_IN length_NN MATH_NNP each_DT ,_, and_CC let_VB MATH_NNP be_VB such_JJ an_DT interval_NN ._.
Partition_VB MATH_NNP in_IN MATH_NNP many_JJ intervals_NNS of_IN length_NN MATH_NNP each_DT and_CC let_VB MATH_NNP be_VB such_JJ an_DT interval_NN ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP is_VBZ a_DT subset_NN of_IN either_DT MATH_NNP ,_, or_CC MATH_NNP ,_, for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP cubes_NNS of_IN sidelength_NN MATH_NNP ._.
Partition_VB now_RB the_DT compact_JJ set_NN MATH_NNP into_IN sets_NNS MATH_NNP of_IN diameter_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ intervals_NNS of_IN length_NN less_RBR MATH_NNP ._.
Partition_VB the_DT finite_JJ sequences_NNS MATH_NNP of_IN MATH_NNP according_VBG to_IN which_WDT interval_JJ MATH_NNP belongs_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP segments_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN each_DT MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT sequence_NN into_IN maximal_JJ contiguous_JJ subsequences_NNS ,_, such_JJ that_IN within_IN any_DT of_IN the_DT subsequences_NNS each_DT segment_NN belongs_VBZ to_IN the_DT same_JJ component_NN ._.
Partition_VB MATH_NNP into_IN flawless_NN and_CC defective_JJ indices_NNS MATH_NNP :_: MATH_NNP consists_VBZ of_IN indices_NNS MATH_NNP such_JJ that_IN MATH_NNP has_VBZ cyclic_JJ arc_JJ fixators_NNS ,_, and_CC MATH_NNP ._.
Partition_VB the_DT set_NN of_IN these_DT squares_NNS into_IN four_CD classes_NNS depending_VBG on_IN the_DT parity_NN of_IN the_DT MATH-_NNP and_CC MATH_NNP coordinate_NN of_IN their_PRP$ lower_JJR left_VBN corner_NN (_( after_IN multiplying_VBG these_DT coordinates_NNS by_IN MATH_NNP )_) ._.
Partition_VB the_DT spatial_JJ part_NN MATH_NNP of_IN the_DT attractor_NN according_VBG to_IN the_DT hyperplanes_NNS collection_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT (_( possibly_RB infinite_JJ )_) sequence_NN of_IN consecutive_JJ ,_, contiguous_JJ subsets_NNS MATH_NNP ,_, such_JJ that_IN the_DT first_JJ and_CC the_DT last_JJ REF_NNP have_VBP length_VBN at_RB least_RBS MATH_NNP and_CC at_IN most_JJS MATH_NNP ,_, and_CC the_DT rest_NN have_VBP length_VBN MATH_NNP ._.
Partition_VB the_DT rows_NNS and_CC columns_NNS of_IN MATH_NNP by_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN blocks_NNS MATH_NNP ,_, as_IN described_VBN before_IN ;_: since_IN MATH_NNP has_VBZ no_DT oriented_VBN cycles_NNS this_DT can_MD be_VB done_VBN with_IN MATH_NNP operations_NNS ._.
Partition_VB MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB the_DT MATH_NNP are_VBP disjoint_JJ NAME_NNP sets_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC the_DT rest_NN ,_, which_WDT will_MD be_VB denoted_VBN by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, where_WRB MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT slit_NN into_IN MATH_NNP equal-length_JJ intervals_NNS with_IN the_DT MATH_NNP endpoints_NNS MATH_NNP ._.
Partition_VB space_NN into_IN a_DT lattice_NN of_IN axis-parallel_JJ hypercubes_NNS (_( that_DT is_VBZ ,_, MATH_NNP )_) with_IN side_NN length_NN MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT values_NNS of_IN MATH_NNP for_IN which_WDT MATH_NNP ._.
Partition_VB the_DT MATH_NNP pairs_VBZ into_IN classes_NNS according_VBG to_IN their_PRP$ slopes_NNS ._.
Partition_VB each_DT given_VBN coset_NN as_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ either_CC empty_JJ or_CC of_IN the_DT form_NN MATH_NNP ,_, and_CC MATH_NNP is_VBZ either_CC empty_JJ or_CC of_IN the_DT form_NN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP is_VBZ a_DT MATH_NNP matrix_NN ,_, MATH_NNP is_VBZ a_DT MATH_NNP matrix_NN ,_, MATH_NNP is_VBZ a_DT MATH_NNP matrix_NN ,_, and_CC MATH_NNP is_VBZ a_DT MATH_NNP matrix_NN ._.
Partition_VB the_DT entries_NNS of_IN MATH_NNP in_IN MATH_NNP into_IN pairs_JJ MATH_NNP or_CC MATH_NNP in_IN an_DT arbitrary_JJ way_NN and_CC let_VB MATH_NNP be_VB the_DT resulting_VBG set_NN of_IN pairs_NNS ._.
Partition_VB MATH_NNP in_IN such_JJ a_DT way_NN that_IN if_IN MATH_NNP ,_, MATH_NNP then_RB MATH_NNP for_IN each_DT MATH_NNP such_PDT that_DT MATH_NNP ._.
Partition_VB them_PRP into_IN pairs_NNS ,_, so_IN that_IN the_DT left_NN most_RBS letter_NN of_IN each_DT of_IN the_DT words_NNS in_IN a_DT pair_NN is_VBZ the_DT same_JJ up_RP to_IN inverses_NNS ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP subsets_NNS of_IN size_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN MATH_NNP subintervals_NNS MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP can_MD be_VB obtained_VBN from_IN the_DT trivial_JJ partition_NN (_( every_DT block_NN consists_VBZ of_IN exactly_RB one_CD element_NN )_) by_IN performing_VBG MATH_NNP times_NNS the_DT following_JJ operation_NN :_: we_PRP select_VBP two_CD blocks_NNS and_CC merge_VB them_PRP into_IN a_DT single_JJ one_CD ._.
Partition_VB MATH_NNP can_MD be_VB represented_VBN like_IN this_DT in_IN MATH_NNP different_JJ ways_NNS which_WDT correspond_NN to_IN the_DT cyclic_JJ rotations_NNS of_IN the_DT sequences_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN several_JJ groups_NNS of_IN coinciding_VBG points_NNS of_IN sizes_JJ MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ as_RB in_IN REF_NNP ._.
Partition_VB the_DT original_JJ vertices_NNS of_IN MATH_NNP into_IN MATH_NNP sets_NNS ,_, each_DT with_IN MATH_NNP vertices_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP copies_NNS of_IN MATH_NNP and_CC possibly_RB one_CD or_CC two_CD leftover_JJ vertices_NNS ._.
Partition_VB MATH_NNP into_IN subsequences_NNS MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB the_DT base_NN MATH_NNP according_VBG to_IN the_DT first_JJ return_NN time_NN to_IN MATH_NNP ,_, that_DT is_VBZ ,_, let_VB MATH_NNP ._.
Partition_VB the_DT bases_NNS MATH_NNP according_VBG to_IN MATH_NNP ,_, so_RB for_IN a_DT word_NN MATH_NNP the_DT set_NN MATH_NNP consists_VBZ of_IN points_NNS whose_WP$ MATH_NNP name_NN is_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP is_VBZ a_DT MATH_NNP multi-wavelet_NN of_IN order_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN open_JJ subsets_NNS MATH_NNP ._.
Partition_VB the_DT perimeter_NN of_IN MATH_NNP into_IN curves_NNS of_IN length_NN MATH_NNP ,_, and_CC assign_VB each_DT point_NN of_IN the_DT perimeter_NN of_IN MATH_NNP to_IN the_DT nearest_JJS such_JJ curve_NN of_IN MATH_NNP (_( REF_NNP ,_, bottom_RB right_JJ )_) ._.
Partition_VB MATH_NNP as_IN MATH_NNP for_IN some_DT MATH_NNP ._.
Partition_VB MATH_NNP by_IN a_DT dyadic_JJ decomposition_NN of_IN the_DT range_NN of_IN values_NNS of_IN MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN finitely_RB many_JJ subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP is_VBZ a_DT constant_JJ set_NN MATH_NNP for_IN MATH_NNP ._.
Partition_VB sum_NN REF_NNP in_IN two_CD pieces_NNS :_: MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN lattice_NN open_JJ cubes_NN of_IN diameter_NN equal_JJ to_IN MATH_NNP and_CC Euclidean_NNP volume_NN MATH_NNP ._.
Partition_VB the_DT graph_NN of_IN MATH_NNP into_IN such_JJ cells_NNS to_TO find_VB the_DT desired_VBN piecewise_NN terms_NNS ._.
Partition_VB the_DT cover_NN MATH_NNP into_IN MATH_NNP families_NNS MATH_NNP such_JJ that_IN MATH_NNP consists_VBZ of_IN MATH_NNP open_JJ sets_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ intervals_NNS MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP contains_VBZ those_DT MATH_NNP such_JJ that_IN MATH_NNP is_VBZ in_IN the_DT category_NN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT polygon_NN into_IN the_DT collection_NN of_IN tetragons_NNS ,_, pentagons_NNS and_CC at_IN most_RBS one_CD hexagon_NN as_IN in_IN REF_NNP ._.
Partition_VB the_DT region_NN of_IN integration_NN into_IN four_CD subregions_NNS ,_, according_VBG to_IN the_DT index_NN MATH_NNP for_IN which_WDT MATH_NNP is_VBZ largest_JJS ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP as_IN REF_NNP ._.
Partition_VB the_DT sum_NN REF_NNP into_IN the_DT following_JJ intervals_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ pieces_NNS ,_, such_JJ that_IN MATH_NNP are_VBP constant_JJ on_IN each_DT piece_NN ;_: then_RB on_IN each_DT piece_NN MATH_NNP is_VBZ given_VBN by_IN MATH_NNP for_IN some_DT MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT integers_NNS into_IN infinitely_RB many_JJ subsequences_NNS ,_, and_CC choose_VB MATH_NNP for_IN MATH_NNP in_IN the_DT MATH_NNP subsequence_NN as_IN in_IN REF_NNP ._.
Partition_VB the_DT real_JJ numbers_NNS into_IN intervals_NNS MATH_NNP of_IN length_NN MATH_NNP and_CC let_VB MATH_NNP be_VB the_DT number_NN of_IN divisors_NNS of_IN MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP :_: let_NN MATH_NNP for_IN MATH_NNP and_CC let_VB MATH_NNP be_VB the_DT sets_NNS of_IN the_DT form_NN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP for_IN MATH_NNP such_JJ that_IN if_IN MATH_NNP then_RB MATH_NNP is_VBZ linearly_JJ dependent_JJ over_IN MATH_NNP and_CC if_IN MATH_NNP are_VBP in_IN distinct_JJ subsets_NNS MATH_NNP then_RB MATH_NNP is_VBZ linearly_JJ independent_JJ over_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD disjoint_NN subsets_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP so_IN that_IN MATH_NNP ,_, where_WRB MATH_NNP are_VBP NAME_NNP subsets_NNS of_IN MATH_NNP such_JJ that_IN MATH_NNP when_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN two_CD disjoint_NN sets_NNS MATH_NNP ,_, where_WRB the_DT elements_NNS of_IN these_DT sets_NNS alternate_VBP round_IN the_DT boundary_JJ MATH_NNP of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ._.
Partition_VB the_DT nontrivial_JJ (_( central_JJ )_) primitive_JJ idempotents_NNS into_IN disjoint_NN pairs_NNS MATH_NNP ._.
Partition_VB the_DT integers_NNS MATH_NNP into_IN sets_NNS of_IN consecutive_JJ integers_NNS MATH_NNP so_IN that_DT for_IN all_DT points_NNS MATH_NNP between_IN the_DT left-hand_JJ endpoint_NN of_IN MATH_NNP and_CC the_DT right-hand_JJ endpoint_NN of_IN MATH_NNP ,_, the_DT derivative_JJ MATH_NNP has_VBZ the_DT same_JJ sign_NN ._.
Partition_VB the_DT permutations_NNS MATH_NNP into_IN equivalence_NN classes_NNS ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ,_, such_JJ that_IN MATH_NNP consists_VBZ of_IN the_DT first_JJ MATH_NNP elements_NNS in_IN MATH_NNP ,_, MATH_NNP consists_VBZ of_IN the_DT last_JJ MATH_NNP elements_NNS ,_, and_CC MATH_NNP consists_NNS of_IN the_DT remaining_VBG elements_NNS ._.
Partition_VB the_DT players_NNS into_IN three_CD groups_NNS ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ,_, as_IN above_IN ._.
Partition_VB the_DT processes_NNS MATH_NNP into_IN three_CD sets_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP players_NNS into_IN 3_CD nonempty_JJ sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP such_JJ that_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT probability_NN space_NN into_IN MATH_NNP intervals_NNS ,_, MATH_NNP ._.
Partition_VB MATH_NNP by_IN disjoint_NN NAME_NNP sets_VBZ MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN MATH_NNP with_IN some_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN subsets_NNS MATH_NNP ,_, where_WRB MATH_NNP are_VBP all_DT members_NNS of_IN MATH_NNP that_IN lie_NN in_IN MATH_NNP and_CC do_VB not_RB lie_VB in_IN any_DT of_IN the_DT previous_JJ set_NN MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN sets_NNS MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT singular_JJ value_NN decompositions_NNS of_IN MATH_NNP and_CC MATH_NNP to_TO reflect_VB the_DT zero_CD and_CC non-zero_JJ singular_JJ vectors_NNS MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ._.
Partition_VB MATH_NNP again_RB into_IN MATH_NNP pieces_NNS MATH_NNP of_IN equal_JJ measure_NN (_( MATH_NNP )_) ._.
Partition_VB MATH_NNP as_IN MATH_NNP then_RB MATH_NNP where_WRB we_PRP have_VBP used_VBN the_DT symmetry_NN of_IN the_DT MATH_NNP block_NN of_IN MATH_NNP ,_, see_VBP REF_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP into_IN MATH_NNP by_IN MATH_NNP and_CC MATH_NNP by_IN MATH_NNP blocks_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN at_IN most_JJS MATH_NNP disjoint_NN blocks_NNS ,_, each_DT containing_VBG no_RB more_JJR than_IN MATH_NNP indices_NNS :_: MATH_NNP ._.
Partition_VB the_DT entries_NNS of_IN MATH_NNP (_( already_RB nondecreasingly_RB ordered_JJ )_) into_IN groups_NNS of_IN equal_JJ entries_NNS MATH_NNP and_CC observe_VB that_IN MATH_NNP is_VBZ structurally_RB block_JJ diagonal_JJ :_: MATH_NNP ._.
Partition_VB the_DT unitary_JJ matrix_NN MATH_NNP conformal_NN to_IN MATH_NNP ,_, and_CC rewrite_VB the_DT given_VBN condition_NN to_IN get_VB MATH_NNP which_WDT yields_VBZ the_DT following_JJ equalities_NNS :_: CASE_NNP :_: MATH_NNP ,_, CASE_NNP :_: MATH_NNP ,_, CASE_NNP :_: MATH_NNP ,_, CASE_NNP :_: MATH_NNP ._.
Partition_VB the_DT boundary_NN of_IN MATH_NNP into_IN two_CD pieces_NNS :_: MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN infinitely_RB many_JJ infinite_JJ pieces_NNS ._.
Partition_VB MATH_NNP into_IN orbits_NNS ,_, MATH_NNP ,_, for_IN the_DT left_JJ action_NN of_IN MATH_NNP ._.
Partition_VB the_DT 3-factor_CD into_IN three_CD 1-factors_NNS ;_: We_PRP use_VBP 0-labels_NNS on_IN the_DT first_JJ 1-factor_NN ,_, 1-labels_NNS on_IN the_DT second_JJ 1-factor_NNP ,_, and_CC 2-labels_NNS on_IN the_DT third_JJ 1-factor_NN ._.
Partition_VB yet_RB again_RB by_IN grouping_VBG the_DT MATH_NNP by_IN the_DT number_NN of_IN rises_NNS ,_, MATH_NNP ,_, in_IN their_PRP$ corresponding_JJ permutations_NNS MATH_NNP of_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD infinite_JJ strictly_RB increasing_VBG sequence_NN MATH_NNP and_CC MATH_NNP for_IN which_WDT MATH_NNP ._.
Partition_VB its_PRP$ vertex_NN set_VBD randomly_RB into_IN MATH_NNP parts_NNS MATH_NNP of_IN equal_JJ size_NN MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN the_DT two_CD sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT normal_JJ matrix_NN MATH_NNP conformally_RB to_IN MATH_NNP ._.
Partition_VB MATH_NNP conformally_RB to_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, in_IN which_WDT MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS ,_, each_DT containing_VBG at_IN most_JJS MATH_NNP points_NNS ._.
Partition_VB the_DT set_NN of_IN free_JJ roots_NNS into_IN two_CD sets_NNS ._.
Partition_VB the_DT leaves_NNS of_IN MATH_NNP into_IN a_DT set_NN of_IN blocks_NNS MATH_NNP ,_, such_JJ that_IN MATH_NNP contains_VBZ the_DT first_JJ MATH_NNP leaves_VBZ on_IN the_DT MATH_NNP axis_NN ,_, MATH_NNP the_DT next_JJ MATH_NNP leaves_VBZ ,_, and_CC so_RB on_IN ._.
Partition_VB it_PRP into_IN MATH_NNP horizontal_JJ and_CC MATH_NNP vertical_JJ strips_NNS of_IN sizes_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT subsets_NNS MATH_NNP (_( REF_NNP )_) ._.
Partition_VB the_DT set_NN MATH_NNP into_IN the_DT disjoint_NN sets_VBZ MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN those_DT elements_NNS of_IN MATH_NNP which_WDT modulo_NN MATH_NNP are_VBP contained_VBN in_IN MATH_NNP but_CC which_WDT are_VBP not_RB in_IN MATH_NNP ,_, and_CC where_WRB MATH_NNP are_VBP the_DT remaining_VBG elements_NNS of_IN MATH_NNP not_RB contained_VBD modulo_JJ MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS MATH_NNP with_IN MATH_NNP diagonal_JJ blocks_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP congruent_NN axis-aligned_VBD rectangles_NNS of_IN extents_NNS MATH_NNP ,_, each_DT for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP convex_JJ regions_NNS of_IN diameter_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN two_CD subfamilies_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN subfamilies_NNS MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP for_IN MATH_NNP ,_, MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT permutations_NNS of_IN the_DT candidates_NNS into_IN MATH_NNP sets_NNS MATH_NNP where_WRB MATH_NNP contains_VBZ the_DT permutations_NNS that_WDT have_VBP the_DT first_JJ candidate_NN ,_, MATH_NNP ,_, in_IN the_DT MATH_NNP position_NN ._.
Partition_VB MATH_NNP as_IN follows_VBZ :_: for_IN each_DT MATH_NNP ,_, let_VB MATH_NNP is_VBZ the_DT largest_JJS irreducible_JJ graph_NN in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP for_IN every_DT MATH_NNP and_CC MATH_NNP for_IN every_DT MATH_NNP ,_, and_CC note_NN that_WDT by_IN the_DT observation_NN above_IN ,_, MATH_NNP for_IN every_DT MATH_NNP ._.
Partition_VB the_DT 4-sets_NNS according_VBG to_IN the_DT size_NN of_IN their_PRP$ intersection_NN with_IN the_DT 3-set_CD ._.
Partition_VB MATH_NNP into_IN parts_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, each_DT of_IN size_NN at_IN most_JJS MATH_NNP ,_, and_CC colour_VBZ the_DT edges_NNS between_IN the_DT parts_NNS as_IN above_IN :_: colour_NN 1_CD between_IN MATH_NNP and_CC MATH_NNP ,_, colour_NN 2_CD between_IN MATH_NNP and_CC MATH_NNP ,_, and_CC colour_NN 3_CD between_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP of_IN near_JJ equal_JJ size_NN ._.
Partition_VB the_DT nodes_NNS of_IN MATH_NNP into_IN disjoint_NN sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT sum_NN MATH_NNP into_IN two_CD parts_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP ,_, with_IN MATH_NNP all_DT those_DT elements_NNS MATH_NNP with_IN MATH_NNP but_CC MATH_NNP ,_, and_CC MATH_NNP all_DT remaining_VBG elements_NNS ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP and_CC for_IN each_DT MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN boxes_NNS of_IN size_NN MATH_NNP ._.
Partition_VB the_DT edge_NN set_VBD MATH_NNP into_IN no_DT more_JJR than_IN MATH_NNP subsets_NNS MATH_NNP ,_, such_JJ that_IN no_DT two_CD edges_NNS in_IN MATH_NNP share_NN a_DT vertex_NN ,_, for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT edge_NN set_VBD into_IN two_CD matchings_NNS ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT nodes_NNS of_IN MATH_NNP into_IN groups_NNS MATH_NNP where_WRB MATH_NNP contains_VBZ all_DT nodes_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT first_JJ MATH_NNP terms_NNS of_IN MATH_NNP into_IN MATH_NNP consecutive_JJ blocks_NNS of_IN length_NN MATH_NNP ,_, leaving_VBG a_DT remainder_NN block_NN of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN those_DT vertices_NNS of_IN MATH_NNP that_DT have_VBP indegree_VBN at_RB least_JJS MATH_NNP ._.
Partition_VB the_DT corresponding_JJ matrix_NN MATH_NNP conformably_RB as_IN follows_VBZ MATH_NNP then_RB from_IN REF_NNP we_PRP have_VBP MATH_NNP and_CC MATH_NNP implying_NN that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN its_PRP$ connected_JJ components_NNS ,_, that_DT is_VBZ ,_, write_WRB MATH_NNP where_WRB each_DT MATH_NNP for_IN MATH_NNP is_VBZ the_DT sum_NN of_IN all_DT of_IN the_DT prime_JJ divisors_NNS in_IN some_DT connected_JJ component_NN of_IN MATH_NNP ._.
Partition_VB an_DT ancestral_JJ selection_NN graph_NN MATH_NNP into_IN disconnected_JJ subgraphs_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN equivalence_NN classes_NNS MATH_NNP according_VBG to_IN this_DT definition_NN ._.
Partition_VB MATH_NNP into_IN classes_NNS MATH_NNP such_JJ that_IN MATH_NNP iff_FW MATH_NNP ._.
Partition_VB MATH_NNP into_IN equivalence_NN classes_NNS MATH_NNP such_JJ that_IN MATH_NNP are_VBP in_IN the_DT same_JJ equivalence_NN class_NN iff_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN ``_`` prefix-levels_NNS ''_'' MATH_NNP ,_, where_WRB MATH_NNP is_VBZ in_IN MATH_NNP if_IN and_CC only_RB if_IN there_EX are_VBP MATH_NNP proper_JJ prefixes_NNS of_IN MATH_NNP in_IN MATH_NNP ._.
Partition_VB the_DT components_NNS of_IN MATH_NNP into_IN the_DT minimum_JJ number_NN of_IN parts_NNS such_JJ that_IN all_PDT the_DT components_NNS in_IN each_DT part_NN have_VBP the_DT same_JJ labelling_NN and_CC determine_VB the_DT same_JJ set_NN of_IN points_NNS ._.
Partition_VB the_DT positive_JJ integers_NNS into_IN disjoint_NN subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN an_DT infinite_JJ sequence_NN of_IN disjoint_NN non-empty_JJ subsets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP into_IN appropriately-sized_JJ sets_NNS as_IN before_RB ,_, uniformly_RB at_IN random_NN ._.
Partition_VB the_DT resulting_VBG graph_NN with_IN at_IN most_JJS MATH_NNP cliques_NNS and_CC REF_NNP is_VBZ satisfied_JJ ._.
Partition_VB MATH_NNP into_IN these_DT kernel_NNS classes_NNS MATH_NNP and_CC notice_NN that_WDT ,_, for_IN every_DT MATH_NNP ,_, the_DT equality_NN MATH_NNP holds_VBZ if_IN and_CC only_RB if_IN MATH_NNP and_CC MATH_NNP come_VBP from_IN the_DT same_JJ class_NN ._.
Partition_VB the_DT locations_NNS MATH_NNP into_IN intervals_NNS MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT transient_NN states_VBZ into_IN two_CD clusters_NNS C1_NNP and_CC C2_NNP ,_, such_JJ that_IN each_DT transient_JJ state_NN in_IN C1_NNP can_MD go_VB with_IN non-zero_JJ probability_NN to_IN at_RB least_RBS one_CD of_IN the_DT absorbing_VBG states_NNS and_CC ,_, with_IN probability_NN 1_CD ,_, the_DT transient_NN states_NNS in_IN C2_NNP can_MD not_RB reach_VB an_DT absorbing_NN states_NNS ._.
Partition_VB the_DT paths_NNS of_IN MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, where_WRB path_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sub-segments_NNS MATH_NNP ,_, each_DT intersecting_VBG MATH_NNP of_IN the_DT above_NN lines_NNS ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT values_NNS of_IN MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT punctures_NNS on_IN MATH_NNP into_IN MATH_NNP groups_NNS according_VBG to_IN the_DT stories_NNS in_IN the_DT limit_NN and_CC order_NN the_DT punctures_NNS within_IN each_DT group_NN according_VBG to_IN their_PRP$ height_NN in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP contiguous_JJ blocks_NNS of_IN size_NN MATH_NNP each_DT (_( we_PRP can_MD safely_RB ignore_VB the_DT rounding_NN to_IN integers_NNS if_IN MATH_NNP is_VBZ large_JJ enough_RB )_) ._.
Partition_VB the_DT steps_NNS into_IN blocks_NNS of_IN MATH_NNP consecutive_JJ steps_NNS each_DT ._.
Partition_VB MATH_NNP conformally_RB to_IN the_DT partition_NN of_IN MATH_NNP in_IN REF_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN subblocks_NNS conformally_RB to_IN the_DT partition_NN of_IN MATH_NNP into_IN subblocks_NNS ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT tour_NN segment_NN it_PRP is_VBZ from_IN :_: MATH_NNP where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN red_JJ points_NNS from_IN tour_NN segment_NN MATH_NNP ._.
Partition_VB the_DT points_NNS in_IN MATH_NNP according_VBG to_IN the_DT segments_NNS of_IN MATH_NNP they_PRP come_VBP from_IN :_: MATH_NNP such_JJ that_IN MATH_NNP is_VBZ the_DT set_NN of_IN points_NNS labelled_VBD type_NN MATH_NNP from_IN tour_NN segment_NN MATH_NNP ._.
Partition_VB the_DT segment_NN MATH_NNP into_IN MATH_NNP segments_NNS MATH_NNP of_IN equal_JJ lengths_NNS ,_, and_CC set_VBD MATH_NNP ._.
Partition_VB MATH_NNP and_CC let_VB MATH_NNP and_CC MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT following_JJ subsets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP greedily_RB from_IN left_JJ to_IN right_NN into_IN blocks_NNS MATH_NNP ,_, such_JJ that_IN each_DT MATH_NNP is_VBZ a_DT sequence_NN of_IN order_NN MATH_NNP ;_: in_IN other_JJ words_NNS ,_, when_WRB scanning_VBG MATH_NNP from_IN left_JJ to_IN right_NN ,_, start_VBP a_DT new_JJ block_NN MATH_NNP only_RB if_IN an_DT additional_JJ symbol_NN would_MD cause_VB MATH_NNP to_TO contain_VB an_DT alternation_NN of_IN length_NN MATH_NNP ._.
Partition_VB the_DT MATH_NNP blocks_NNS of_IN MATH_NNP from_IN left_JJ to_IN right_NN into_IN MATH_NNP layers_NNS MATH_NNP of_IN at_IN most_JJS MATH_NNP blocks_NNS each_DT ._.
Partition_VB MATH_NNP from_IN left_JJ to_IN right_NN into_IN blocks_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP from_IN left_JJ to_IN right_NN into_IN subsequences_NNS as_IN follows_VBZ :_: Let_NNP MATH_NNP be_VB the_DT longest_JJS prefix_NN of_IN MATH_NNP that_DT is_VBZ MATH_NNP formation-free_JJ ._.
Partition_VB MATH_NNP into_IN blocks_NNS MATH_NNP ,_, where_WRB each_DT MATH_NNP starts_VBZ with_IN a_DT terminal_JJ occurrence_NN and_CC contains_VBZ exactly_RB MATH_NNP terminal_JJ occurrences_NNS (_( except_IN for_IN MATH_NNP ,_, which_WDT might_MD contain_VB fewer_JJR terminal_NN occurrences_NNS )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP and_CC thus_RB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP classes_NNS ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD computable_JJ ,_, infinite_JJ ,_, disjoint_JJ subsets_NNS ._.
Partition_VB the_DT segments_NNS of_IN MATH_NNP into_IN bends_NNS such_JJ that_IN each_DT bend_NN in_IN MATH_NNP has_VBZ a_DT MATH_NNP marking_NN for_IN a_DT vertex_NN ._.
Partition_VB MATH_NNP so_IN that_IN within_IN each_DT partition_NN element_NN orbifolds_NNS have_VBP the_DT same_JJ number_NN and_CC type_NN of_IN cone_NN points_NNS ,_, number_NN of_IN reflector_NN circles_NNS ,_, number_NN and_CC type_NN of_IN reflector_NN crowns_NNS ,_, and_CC underlying_VBG space_NN homeomorphism_NN type_NN ._.
Partition_VB the_DT support_NN of_IN MATH_NNP as_IN MATH_NNP such_PDT the_DT MATH_NNP radius_NN of_IN each_DT set_NN is_VBZ less_JJR than_IN MATH_NNP ._.
Partition_VB the_DT support_NN of_IN MATH_NNP into_IN MATH_NNP subsets_NNS such_JJ that_IN MATH_NNP radius_NN of_IN each_DT one_CD is_VBZ smaller_JJR than_IN MATH_NNP ._.
Partition_VB the_DT particles_NNS into_IN three_CD classes_NNS ,_, with_IN thresholds_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN cubes_NNS MATH_NNP of_IN side-length_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP rectangles_NNS of_IN equal_JJ width_NN ._.
Partition_VB the_DT unit_NN square_JJ MATH_NNP into_IN a_DT MATH_NNP square_JJ grid_NN of_IN cell_NN length_NN MATH_NNP ._.
Partition_VB these_DT MATH_NNP vectors_NNS into_IN MATH_NNP groups_NNS of_IN orthogonal_JJ vectors_NNS ,_, MATH_NNP with_IN one_CD positive_JJ vector_NN and_CC one_CD negative_JJ vector_NN in_IN each_DT group_NN ._.
Partition_VB MATH_NNP into_IN blocks_NNS containing_VBG ,_, respectively_RB ,_, MATH_NNP and_CC MATH_NNP columns_NNS ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP for_IN every_DT maximal_NN linear_JJ part_NN MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ those_DT elements_NNS of_IN MATH_NNP which_WDT sit_NN on_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP sets_NNS of_IN size_NN at_IN most_JJS MATH_NNP each_DT â€“_NN we_PRP will_MD call_VB these_DT sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT orbits_NNS of_IN the_DT action_NN of_IN the_DT additive_JJ subgroup_NN MATH_NNP :_: MATH_NNP where_WRB MATH_NNP is_VBZ some_DT choice_NN of_IN representatives_NNS ,_, one_CD for_IN each_DT orbit_NN (_( MATH_NNP for_IN each_DT MATH_NNP so_RB we_PRP have_VBP a_DT one_CD MATH_NNP element_NN orbit_NN )_) ._.
Partition_VB MATH_NNP where_WRB the_DT set_NN of_IN representatives_NNS MATH_NNP contains_VBZ as_IN many_JJ of_IN the_DT MATH_NNP as_IN possible_JJ ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP such_JJ that_IN at_RB least_RBS half_NN of_IN the_DT edges_NNS of_IN MATH_NNP cross_VBP MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN two_CD sets_NNS of_IN equal_JJ cardinality_NN ,_, one_CD called_VBD ``_`` positive_JJ ''_'' and_CC the_DT other_JJ ``_`` negative_JJ ._. ''_''
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP with_IN MATH_NNP for_IN MATH_NNP and_CC MATH_NNP containing_VBG the_DT rest_NN of_IN the_DT elements_NNS ._.
Partition_VB MATH_NNP into_IN six_CD sets_NNS :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB these_DT dependent_JJ sets_NNS into_IN those_DT that_IN contain_NN two_CD neighbours_NNS ,_, one_CD neighbour_NN and_CC no_DT neighbours_NNS of_IN MATH_NNP ._.
Partition_VB the_DT vectors_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC the_DT matrix_NN MATH_NNP according_VBG to_IN the_DT sparsity_NN pattern_NN in_IN MATH_NNP :_: MATH_NNP ._.
Partition_VB these_DT terms_NNS into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, with_IN MATH_NNP containing_VBG the_DT terms_NNS that_WDT are_VBP MATH_NNP or_CC MATH_NNP ,_, and_CC MATH_NNP containing_VBG all_PDT the_DT other_JJ terms_NNS ._.
Partition_VB MATH_NNP into_IN intervals_NNS whose_WP$ endpoints_NNS are_VBP given_VBN by_IN MATH_NNP as_RB well_RB as_IN by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ definable_JJ parts_NNS MATH_NNP such_JJ that_IN MATH_NNP is_VBZ injective_JJ on_IN each_DT set_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP subsets_NNS of_IN size_NN MATH_NNP as_IN follows_VBZ :_: set_VBN MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB the_DT set_NN of_IN all_DT MATH_NNP into_IN equivalence_NN classes_NNS ,_, where_WRB MATH_NNP is_VBZ equivalent_JJ to_IN MATH_NNP if_IN there_EX exists_VBZ MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT family_NN MATH_NNP into_IN two_CD parts_NNS ._.
Partition_VB the_DT edges_NNS of_IN the_DT bipartite_JJ graph_NN MATH_NNP into_IN MATH_NNP matchings_NNS ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN the_DT graph_NN MATH_NNP into_IN the_DT sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT multiset_NN MATH_NNP into_IN a_DT union_NN of_IN disjoint_NN orbits_NNS ,_, counting_VBG multiplicities_NNS ,_, say_VBP MATH_NNP ,_, where_WRB MATH_NNP means_VBZ MATH_NNP copies_NNS of_IN MATH_NNP ._.
Partition_VB the_DT box_NN MATH_NNP into_IN squares_NNS with_IN side_NN length_NN MATH_NNP and_CC let_VB MATH_NNP denote_VB the_DT collection_NN of_IN all_PDT the_DT squares_NNS which_WDT are_VBP adjacent_JJ to_IN the_DT boundary_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subintervals_NNS MATH_NNP and_CC let_VB MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN two_CD interior-disjoint_JJ intervals_NNS :_: MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT arcs_NN of_IN MATH_NNP into_IN MATH_NNP classes_NNS MATH_NNP where_WRB for_IN MATH_NNP every_DT arc_NN MATH_NNP belongs_VBZ to_IN a_DT strongly_RB connected_VBN subdigraph_NN MATH_NNP that_IN includes_VBZ the_DT vertex_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP many_JJ subsets_NNS MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP as_IN follows_VBZ :_: MATH_NNP are_VBP the_DT pairs_NNS where_WRB both_DT end-points_NNS are_VBP added_VBN to_IN MATH_NNP ,_, MATH_NNP are_VBP the_DT pairs_NNS where_WRB exactly_RB one_CD end-point_NN is_VBZ added_VBN to_IN MATH_NNP ,_, and_CC MATH_NNP are_VBP the_DT pairs_NN where_WRB neither_DT end-point_NN is_VBZ added_VBN to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, MATH_NNP that_IN are_VBP MATH_NNP positive_JJ and_CC pick_JJ MATH_NNP if_IN MATH_NNP ._.
Partition_VB the_DT basis_NN of_IN differential_JJ forms_NNS MATH_NNP via_IN pole_JJ order_NN MATH_NNP along_RB MATH_NNP as_IN before_RB ,_, MATH_NNP ._.
Partition_VB the_DT set_NN of_IN fully_RB commutative_JJ elements_NNS MATH_NNP into_IN long_JJ elements_NNS and_CC short_JJ elements_NNS ._.
Partition_VB the_DT vertices_NNS of_IN our_PRP$ ordered_JJ graph_NN MATH_NNP into_IN MATH_NNP intervals_NNS of_IN MATH_NNP consecutive_JJ vertices_NNS each_DT ._.
Partition_VB the_DT above_IN determinants_NNS into_IN 4_CD submatrices_NNS respectively_RB ,_, as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB the_DT nodes_NNS of_IN MATH_NNP into_IN groups_NNS MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT coefficient_NN matrices_NNS of_IN the_DT state_NN equation_NN above_IN as_IN MATH_NNP where_WRB MATH_NNP is_VBZ MATH_NNP ,_, MATH_NNP is_VBZ MATH_NNP ,_, and_CC MATH_NNP is_VBZ MATH_NNP ._.
Partition_VB the_DT indices_NNS of_IN the_DT differences_NNS in_IN the_DT above_JJ summation_NN into_IN three_CD sets_NNS :_: MATH_NNP which_WDT corresponds_NNS to_IN indices_NNS where_WRB both_DT MATH_NNP ,_, MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN measurable_JJ subsets_NNS MATH_NNP such_JJ that_IN the_DT restrictions_NNS MATH_NNP are_VBP isomorphisms_NNS of_IN MATH_NNP onto_IN MATH_NNP scaling_VBG the_DT measure_NN by_IN the_DT factor_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP of_IN measure_NN MATH_NNP such_JJ that_IN MATH_NNP is_VBZ an_DT isomorphism_NN of_IN MATH_NNP onto_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN factors_NNS of_IN MATH_NNP into_IN three_CD sets_NNS :_: CASE_NNP :_: MATH_NNP ,_, containing_VBG those_DT factors_NNS which_WDT are_VBP on_IN the_DT main_JJ diagonal_NN ,_, which_WDT have_VBP the_DT form_NN MATH_NNP for_IN some_DT MATH_NNP ;_: CASE_NNP :_: MATH_NNP ,_, containing_VBG those_DT factors_NNS which_WDT are_VBP immediately_RB below_IN the_DT main_JJ diagonal_NN ,_, which_WDT have_VBP the_DT form_NN MATH_NNP for_IN some_DT MATH_NNP ;_: and_CC CASE_NNP :_: MATH_NNP ,_, containing_VBG the_DT other_JJ factors_NNS ,_, which_WDT have_VBP the_DT form_NN MATH_NNP for_IN appropriate_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB a_DT real_JJ number_NN ._.
Partition_VB the_DT sets_NNS MATH_NNP into_IN those_DT for_IN which_WDT MATH_NNP on_IN the_DT one_CD hand_NN and_CC those_DT for_IN which_WDT MATH_NNP on_IN the_DT other_JJ hand_NN ._.
Partition_VB MATH_NNP into_IN cells_NNS MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN cells_NNS MATH_NNP with_IN center_NN MATH_NNP ,_, coset_NN MATH_NNP ,_, and_CC base_NN MATH_NNP by_IN using_VBG REF_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ parts_NNS where_WRB MATH_NNP is_VBZ constant_JJ ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ parts_NNS where_WRB MATH_NNP is_VBZ constant_JJ for_IN some_DT sufficiently_RB large_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, the_DT first_JJ consisting_NN of_IN those_DT subgraphs_NNS that_WDT contain_NN MATH_NNP ,_, the_DT latter_NN of_IN those_DT that_DT do_VBP not_RB ._.
Partition_VB the_DT subgroups_NNS MATH_NNP into_IN MATH_NNP ._.
Partition_VB the_DT sequence_NN MATH_NNP into_IN two_CD sequences_NNS which_WDT converge_NN to_IN MATH_NNP from_IN opposite_JJ sides_NNS REF_NNP and_CC consider_VB them_PRP separately_RB ._.
Partition_VB MATH_NNP into_IN a_DT dyadic_JJ grid_NN (_( for_IN example_NN ,_, by_IN first_JJ breaking_VBG up_RP MATH_NNP into_IN two_CD hemispheres_NNS ,_, and_CC identifying_VBG those_DT hemispheres_NNS with_IN a_DT dyadic_JJ cube_NN by_IN some_DT bilipschitz_NN map_NN )_) ._.
Partition_VB MATH_NNP into_IN the_DT following_JJ three_CD sets_NNS :_: CASE_NNP :_: MATH_NNP ._.
Partition_VB the_DT permutation_NN MATH_NNP into_IN MATH_NNP shuffled_VBD upsequences_NNS using_VBG REF_NNP ,_, resulting_VBG in_IN a_DT string_NN MATH_NNP of_IN length_NN MATH_NNP over_IN alphabet_NN MATH_NNP which_WDT indicates_VBZ for_IN each_DT element_NN of_IN the_DT permutation_NN MATH_NNP the_DT label_NN of_IN the_DT upsequence_NN it_PRP belongs_VBZ to_IN ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN if_IN MATH_NNP then_RB MATH_NNP is_VBZ MATH_NNP thick_JJ with_IN respect_NN to_IN MATH_NNP ,_, breaking_VBG ties_NNS arbitrarily_RB if_IN MATH_NNP can_MD belong_VB to_IN multiple_JJ MATH_NNP ._.
Partition_VB the_DT time_NN interval_NN MATH_NNP into_IN MATH_NNP such_JJ that_IN on_IN each_DT subinterval_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP by_IN defining_VBG MATH_NNP ._.
Partition_VB the_DT support_NN of_IN MATH_NNP into_IN a_DT finite_JJ number_NN of_IN sets_NNS MATH_NNP of_IN diameter_JJR smaller_JJR than_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN intervals_NNS MATH_NNP such_JJ that_IN MATH_NNP on_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT following_JJ sets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP randomly_RB into_IN MATH_NNP bins_NNS ,_, that_DT is_VBZ ,_, MATH_NNP ,_, with_IN MATH_NNP (_( say_VBP )_) ._.
Partition_VB the_DT MATH_NNP edges_VBZ on_IN MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP with_IN MATH_NNP ,_, so_IN that_IN the_DT edges_NNS on_IN MATH_NNP can_MD be_VB partitioned_VBN into_IN kites_NNS and_CC 4-cycles_NNS ;_: this_DT is_VBZ easily_RB done_VBN ._.
Partition_VB the_DT curve_NN as_IN follows_VBZ :_: set_VBN MATH_NNP ,_, and_CC for_IN MATH_NNP let_VB MATH_NNP provided_VBD this_DT time_NN is_VBZ well-defined_JJ ._.
Partition_VB the_DT indices_NNS MATH_NNP into_IN sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP by_IN choosing_VBG for_IN each_DT vertex_NN uniformly_RB at_IN random_NN a_DT side_NN ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP time_NN steps_NNS into_IN MATH_NNP disjoint_NN intervals_NNS of_IN length_NN MATH_NNP ,_, and_CC consider_VBP the_DT path_NN of_IN the_DT source_NN agent_NN during_IN one_CD such_JJ interval_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN each_DT MATH_NNP has_VBZ exactly_RB MATH_NNP elements_NNS and_CC MATH_NNP has_VBZ less_JJR than_IN MATH_NNP elements_NNS ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP equal_JJ subintervals_NNS with_IN endpoints_NNS MATH_NNP and_CC set_VBD MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ the_DT variables_NNS of_IN the_DT NAME_NNP of_IN depth_NN MATH_NNP in_IN the_DT DAG_NNP of_IN NAME_NNP ,_, and_CC MATH_NNP contains_VBZ the_DT other_JJ variables_NNS (_( in_IN ``_`` higher_JJR ''_'' NAME_NNP )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN the_DT involutions_NNS and_CC MATH_NNP consists_NNS of_IN the_DT non-involutions_NNS ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN subintervals_NNS MATH_NNP of_IN length_NN MATH_NNP ._.
Partition_VB them_PRP into_IN subsets_NNS according_VBG to_IN the_DT component_NN of_IN MATH_NNP to_TO which_WDT they_PRP belong_VBP ._.
Partition_VB each_DT plane_NN into_IN regions_NNS along_IN lines_NNS of_IN intersection_NN with_IN all_DT other_JJ planes_NNS ._.
Partition_VB MATH_NNP into_IN subsets_NNS for_IN each_DT value_NN of_IN MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT cube_NN MATH_NNP into_IN a_DT MATH_NNP grid_NN ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP rectangles_NNS MATH_NNP such_JJ that_IN the_DT perpendicular_JJ projection_NN of_IN any_DT rectangle_JJ MATH_NNP ,_, MATH_NNP ,_, on_IN MATH_NNP has_VBZ diameter_NN at_IN most_JJS MATH_NNP and_CC its_PRP$ MATH_NNP dimensional_JJ volume_NN is_VBZ MATH_NNP ;_: see_VB REF_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP (_( MATH_NNP ,_, respectively_RB )_) gathers_NNS the_DT trees_NNS in_IN MATH_NNP whose_WP$ center_NN of_IN symmetry_NN is_VBZ a_DT vertex_NN (_( an_DT edge_NN ,_, respectively_RB )_) ._.
Partition_VB this_DT event_NN with_IN respect_NN to_IN the_DT number_NN of_IN transitions_NNS MATH_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP conformally_RB as_IN MATH_NNP ,_, and_CC note_NN that_WDT all_DT entries_NNS of_IN MATH_NNP are_VBP nonzero_JJ ,_, MATH_NNP ._.
Partition_VB MATH_NNP along_IN the_DT ordering_NN induced_VBD by_IN the_DT bandwidth_NN labelling_VBG into_IN sets_NNS MATH_NNP of_IN sizes_JJ MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP along_IN the_DT ordering_VBG (_( induced_VBD by_IN the_DT bandwidth_NN labelling_VBG )_) into_IN sets_NNS MATH_NNP of_IN sizes_JJ MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB any_DT matrix_NN MATH_NNP according_VBG to_IN the_DT eigenvalue_JJ multiplicities_NNS of_IN MATH_NNP ,_, as_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP containers_NNS into_IN two_CD sets_NNS :_: set_VBN MATH_NNP has_VBZ the_DT containers_NNS with_IN at_RB least_RBS MATH_NNP objects_NNS ;_: set_VBN MATH_NNP has_VBZ the_DT containers_NNS with_IN fewer_JJR than_IN MATH_NNP objects_NNS ._.
Partition_VB the_DT buyers_NNS to_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP such_JJ that_IN buyers_NNS in_IN MATH_NNP have_VBP a_DT higher_JJR payoff_NN at_IN MATH_NNP ,_, buyers_NNS in_IN MATH_NNP have_VBP a_DT higher_JJR payoff_NN at_IN MATH_NNP and_CC buyers_NNS in_IN MATH_NNP have_VBP the_DT same_JJ payoff_NN at_IN both_CC MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT buyers_NNS to_IN MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC partition_NN the_DT goods_NNS to_IN MATH_NNP ,_, MATH_NNP ,_, MATH_NNP as_IN in_IN the_DT proof_NN of_IN REF_NNP ._.
Partition_VB the_DT path_NN into_IN subpaths_NNS that_IN consist_NN of_IN either_CC a_DT sequence_NN of_IN non-horizontal_JJ steps_NNS ,_, or_CC a_DT horizontal_JJ step_NN ,_, its_PRP$ matching_JJ step_NN ,_, and_CC all_DT steps_NNS in_IN between_IN ._.
Partition_VB neighbors_NNS arbitrarily_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP classes_NNS MATH_NNP indexed_VBP by_IN the_DT elements_NNS of_IN MATH_NNP where_WRB MATH_NNP means_VBZ that_IN MATH_NNP and_CC MATH_NNP are_VBP nonadjacent_JJ ._.
Partition_VB the_DT plane_NN into_IN squares_NNS of_IN side_NN length_NN at_IN most_JJS MATH_NNP with_IN rational_JJ vertices_NNS ._.
Partition_VB MATH_NNP into_IN groups_NNS MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ all_DT leaves_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP vectors_NNS of_IN MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ MATH_NNP vectors_NNS ,_, note_NN that_IN MATH_NNP makes_VBZ this_DT valid_JJ ._.
Partition_VB the_DT set_NN MATH_NNP in_IN blocks_NNS of_IN length_NN MATH_NNP yielding_VBG MATH_NNP blocks_NNS ._.
Partition_VB MATH_NNP into_IN the_DT ball_NN MATH_NNP and_CC MATH_NNP balls_NNS of_IN the_DT form_NN MATH_NNP for_IN MATH_NNP with_IN MATH_NNP and_CC MATH_NNP a_DT generator_NN of_IN the_DT ideal_JJ MATH_NNP ,_, MATH_NNP ,_, and_CC where_WRB necessarily_RB MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT set_NN of_IN limit_NN ordinals_NNS in_IN MATH_NNP into_IN MATH_NNP many_JJ stationary_JJ sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP into_IN two_CD sets_NNS of_IN size_NN as_IN equal_JJ as_IN possible_JJ ._.
Partition_VB MATH_NNP into_IN infinite_JJ sets_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB the_DT support_NN of_IN MATH_NNP into_IN two_CD and_CC three_CD dimensional_JJ regions_NNS ,_, MATH_NNP ._.
Partition_VB the_DT sum_NN in_IN REF_NNP as_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP consists_VBZ of_IN the_DT odd-degree_JJ nodes_NNS ,_, MATH_NNP consists_VBZ of_IN the_DT even-degree_JJ nodes_JJ adjacent_JJ to_IN at_RB least_RBS one_CD node_NN in_IN MATH_NNP ,_, and_CC MATH_NNP is_VBZ the_DT rest_NN ;_: in_IN particular_JJ ,_, the_DT degree_NN of_IN each_DT node_NN in_IN MATH_NNP or_CC MATH_NNP is_VBZ at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD subsets_NNS MATH_NNP ,_, where_WRB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP as_IN follows_VBZ ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP and_CC MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP respectively_RB ,_, such_JJ that_IN for_IN each_DT MATH_NNP ._.
Partition_VB the_DT set_NN of_IN MATH_NNP sequences_NNS into_IN MATH_NNP bins_NNS ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT set_NN of_IN MATH_NNP sequences_NNS into_IN MATH_NNP bins_NNS ,_, MATH_NNP ._.
Partition_VB the_DT set_NN of_IN connected_VBN noncrossing_VBG RNA_NNP MATH_NNP diagrams_VBZ MATH_NNP of_IN degree_NN MATH_NNP by_IN CASE_NNP :_: whether_IN there_EX is_VBZ an_DT arc_NN in_IN MATH_NNP incident_NN with_IN MATH_NNP in_IN vertex_NN MATH_NNP and_CC CASE_NNP :_: if_IN there_EX is_VBZ such_JJ an_DT arc_NN ,_, by_IN the_DT vertex_NN MATH_NNP ,_, MATH_NNP ,_, of_IN its_PRP$ other_JJ end_NN ._.
Partition_VB MATH_NNP into_IN three_CD disjoint_NN sets_NNS as_IN follows_VBZ ._.
Partition_VB problem_NN ._.
Partition_VB Input_NNP :_: A_DT bound_VBN MATH_NNP ,_, and_CC a_DT set_NN MATH_NNP with_IN MATH_NNP ,_, MATH_NNP ._.
Partition_VB is_VBZ a_DT strongly_RB NP-hard_JJ problem_NN ,_, that_DT is_VBZ ,_, it_PRP is_VBZ NP-hard_RB even_RB if_IN MATH_NNP is_VBZ bounded_VBN by_IN a_DT polynomial_NN in_IN CITE_NNP ._.
Partition_VB problem_NN we_PRP can_MD derive_VB a_DT solution_NN for_IN the_DT upward_JJ point_NN set_VBN embeddability_NN problem_NN ._.
Partition_VB problem_NN and_CC let_VB it_PRP be_VB MATH_NNP ,_, MATH_NNP ._.
Partition_VB each_DT set_NN MATH_NNP into_IN subsets_NNS of_IN measure_NN MATH_NNP and_CC a_DT remainder_NN set_NN of_IN measure_NN smaller_JJR than_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP summands_NNS in_IN consecutive_JJ blocks_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN sets_NNS MATH_NNP each_DT on_IN MATH_NNP vertices_NNS ,_, MATH_NNP each_DT on_IN MATH_NNP vertices_NNS ,_, and_CC MATH_NNP on_IN MATH_NNP vertices_NNS ._.
Partition_VB the_DT set_NN MATH_NNP arbitrarily_RB to_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP of_IN respective_JJ sizes_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP still_RB not_RB in_IN MATH_NNP into_IN pairs_NNS and_CC use_VBP the_DT randomized_JJ procedure_NN of_IN REF_NNP to_IN assign_VB those_DT vertices_NNS to_IN either_DT MATH_NNP or_CC MATH_NNP ._.
Partition_VB MATH_NNP radially_RB around_IN MATH_NNP into_IN MATH_NNP cones_NNS MATH_NNP of_IN equal_JJ measure_NN ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB the_DT set_NN of_IN candidates_NNS into_IN the_DT two_CD subsets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP the_DT following_JJ way_NN ._.
Partition_VB the_DT set_NN MATH_NNP of_IN MATH_NNP lines_NNS into_IN MATH_NNP sets_VBZ MATH_NNP of_IN MATH_NNP lines_NNS arbitrarily_RB ._.
Partition_VB MATH_NNP into_IN levels_NNS MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT minimal_JJ elements_NNS of_IN the_DT subposet_NN of_IN MATH_NNP formed_VBD by_IN deleting_VBG all_DT MATH_NNP with_IN MATH_NNP (_( some_DT of_IN the_DT levels_NNS in_IN the_DT end_NN can_MD be_VB empty_JJ )_) ._.
Partition_VB the_DT poset_NN MATH_NNP into_IN sets_NNS MATH_NNP each_DT consisting_VBG of_IN MATH_NNP consecutive_JJ levels_NNS of_IN MATH_NNP (_( except_IN possibly_RB one_CD set_NN which_WDT consists_VBZ of_IN less_JJR than_IN MATH_NNP consecutive_JJ levels_NNS )_) ._.
Partition_VB the_DT groundset_NN MATH_NNP into_IN MATH_NNP groups_NNS as_IN follows_VBZ ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT first_JJ column_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT following_JJ three_CD subregions_NNS :_: MATH_NNP ._.
Partition_VB set_VBD MATH_NNP of_IN edges_NNS into_IN two_CD subsets_NNS :_: MATH_NNP contains_VBZ all_DT edges_NNS that_IN belong_NN to_IN sub-graphs_JJ MATH_NNP for_IN MATH_NNP ,_, and_CC MATH_NNP contains_VBZ all_DT remaining_VBG edges_NNS ._.
Partition_VB MATH_NNP into_IN subintervals_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT sums_NNS REF_NNP as_IN follows_VBZ ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP in_IN five_CD subsets_NNS :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT sets_NNS MATH_NNP and_CC all_DT translates_NNS ._.
Partition_VB the_DT natural_JJ numbers_NNS into_IN finite_JJ intervals_NNS ,_, with_IN MATH_NNP intervals_NNS of_IN length_NN MATH_NNP followed_VBD by_IN MATH_NNP intervals_NNS of_IN length_NN MATH_NNP for_IN every_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN paths_NNS MATH_NNP ,_, such_JJ that_IN each_DT MATH_NNP lies_VBZ entirely_RB in_IN the_DT grid_NN with_IN its_PRP$ two_CD end_NN points_NNS MATH_NNP and_CC MATH_NNP lying_VBG on_IN some_DT two_CD segments_NNS ._.
Partition_VB MATH_NNP in_IN the_DT following_JJ way_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP the_DT following_JJ way_NN ._.
Partition_VB this_DT code_NN arbitrarily_RB into_IN MATH_NNP smaller_JJR subcodes_NNS ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB the_DT family_NN of_IN all_DT sets_NNS of_IN the_DT kind_NN MATH_NNP into_IN pairs_NNS MATH_NNP so_IN that_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT finite_JJ family_NN of_IN all_DT regular_JJ cells_NNS MATH_NNP ,_, for_IN all_DT MATH_NNP ,_, into_IN MATH_NNP tuples_NNS so_IN that_IN the_DT projections_NNS of_IN cells_NNS in_IN a_DT tuple_NN on_IN the_DT MATH_NNP coordinate_NN are_VBP exactly_RB the_DT intervals_NNS MATH_NNP and_CC any_DT two_CD cells_NNS in_IN a_DT tuple_NN having_VBG as_IN projections_NNS two_CD consecutive_JJ intervals_NNS in_IN REF_NNP have_VBP the_DT common_JJ MATH_NNP dimensional_JJ face_NN in_IN a_DT hyperplane_NN MATH_NNP ._.
Partition_VB conformably_RB MATH_NNP ._.
Partition_VB MATH_NNP into_IN equivalence_NN classes_NNS MATH_NNP such_JJ that_IN MATH_NNP iff_FW MATH_NNP ._.
Partition_VB MATH_NNP into_IN equivalence_NN classes_NNS MATH_NNP such_JJ that_IN MATH_NNP iff_VBP MATH_NNP for_IN some_DT MATH_NNP ._.
Partition_VB the_DT mappings_NNS MATH_NNP into_IN equivalence_NN classes_NNS MATH_NNP according_VBG to_IN this_DT definition_NN and_CC for_IN all_DT MATH_NNP fix_VBD some_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN classes_NNS MATH_NNP such_JJ that_IN for_IN every_DT MATH_NNP we_PRP have_VBP MATH_NNP if_IN ,_, and_CC only_RB if_IN ,_, MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP sets_NNS :_: MATH_NNP ,_, the_DT set_NN of_IN indices_NNS that_WDT are_VBP `_`` ready_JJ to_IN advance_NN '_POS ,_, and_CC MATH_NNP ,_, the_DT set_NN of_IN indices_NNS that_WDT are_VBP not_RB ready_JJ to_IN advance_NN ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP each_DT of_IN which_WDT is_VBZ invariant_JJ under_IN the_DT subgroup_NN MATH_NNP of_IN MATH_NNP generated_VBD by_IN MATH_NNP and_CC has_VBZ no_DT nonempty_JJ proper_JJ subset_NN with_IN this_DT property_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS ,_, MATH_NNP ,_, where_WRB MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP as_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP are_VBP not_RB adjacent_JJ ,_, and_CC MATH_NNP and_CC MATH_NNP are_VBP not_RB adjacent_JJ ._.
Partition_VB MATH_NNP as_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP 's_POS for_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN agents_NNS ignored_VBN by_IN greedy_NN after_IN MATH_NNP have_VBP been_VBN added_VBN into_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN two_CD disjoint_JJ parts_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN groups_NNS of_IN bridges_NNS where_WRB MATH_NNP from_IN REF_NNP is_VBZ common_JJ to_IN all_DT bridges_NNS in_IN a_DT group_NN ._.
Partition_VB the_DT time_NN interval_NN MATH_NNP into_IN MATH_NNP pieces_NNS of_IN length_NN MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT time_NN interval_NN MATH_NNP into_IN MATH_NNP disjoint_NN time_NN intervals_NNS MATH_NNP ,_, MATH_NNP ,_, defined_VBD in_IN REF_NNP ._.
Partition_VB the_DT weight_NN vector_NN MATH_NNP as_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sublattices_NNS as_IN follows_VBZ :_: CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ disjoint_NN NAME_NNP subsets_VBZ MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB those_DT MATH_NNP in_IN REF_NNP for_IN which_WDT MATH_NNP according_VBG to_IN the_DT least_JJS integer_JJ MATH_NNP such_JJ that_IN MATH_NNP ;_: their_PRP$ contribution_NN is_VBZ bounded_VBN by_IN the_DT second_JJ term_NN on_IN the_DT Right-hand_NNP side_NN of_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS ,_, the_DT infinite_JJ component_NN of_IN MATH_NNP ,_, which_WDT we_PRP will_MD denote_VB by_IN MATH_NNP ,_, and_CC the_DT union_NN of_IN the_DT finite_JJ components_NNS of_IN MATH_NNP which_WDT we_PRP will_MD denote_VB by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT parts_NNS MATH_NNP ,_, the_DT boundary_NN have_VBP measure_NN zero_CD and_CC can_MD be_VB ignored_VBN ._.
Partition_VB MATH_NNP into_IN an_DT infinite_JJ number_NN of_IN infinite_JJ sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN MATH_NNP sets_NNS of_IN size_NN MATH_NNP vertices_NNS each_DT ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS along_IN a_DT MATH_NNP cut_NN ,_, and_CC continue_VB refining_VBG parts_NNS along_IN MATH_NNP cuts_NNS of_IN the_DT subgraphs_NNS induced_VBD by_IN the_DT parts_NNS until_IN no_DT part_NN has_VBZ a_DT MATH_NNP cut_NN ,_, and_CC let_VB MATH_NNP be_VB the_DT resulting_VBG partition_NN ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN MATH_NNP and_CC MATH_NNP ,_, with_IN MATH_NNP and_CC MATH_NNP having_VBG MATH_NNP columns_NNS each_DT ._.
Partition_VB MATH_NNP up_RB into_IN orbits_NNS of_IN the_DT group_NN MATH_NNP ,_, thus_RB obtaining_VBG MATH_NNP for_IN some_DT set_NN of_IN representatives_NNS MATH_NNP of_IN each_DT orbit_NN ._.
Partition_VB MATH_NNP up_RB into_IN orbits_NNS of_IN MATH_NNP :_: MATH_NNP for_IN some_DT set_NN of_IN representatives_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN orbits_NNS of_IN MATH_NNP :_: MATH_NNP for_IN some_DT set_NN of_IN representatives_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN subprojections_NNS MATH_NNP below_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB the_DT MATH_NNP dimensional_JJ AUSO_NNP into_IN two_CD MATH_NNP dimensional_JJ hypercubes_NNS MATH_NNP and_CC MATH_NNP where_WRB the_DT direction_NN MATH_NNP separates_VBZ the_DT two_CD (_( REF_NNP )_) and_CC MATH_NNP starts_NNS in_IN MATH_NNP ._.
Partition_VB MATH_NNP in_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT monomials_NNS of_IN MATH_NNP into_IN two_CD sets_NNS MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN those_DT monomials_NNS that_WDT are_VBP not_RB divisible_JJ by_IN MATH_NNP and_CC MATH_NNP consists_NNS of_IN those_DT monomials_NNS that_WDT are_VBP divisible_JJ by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP of_IN power_NN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN three_CD intervals_NNS each_DT of_IN size_NN as_IN equal_JJ as_IN possible_JJ ,_, and_CC let_VB MATH_NNP be_VB the_DT first_JJ interval_NN and_CC MATH_NNP be_VB the_DT last_JJ interval_NN ._.
Partition_VB MATH_NNP into_IN measurable_JJ sets_NNS MATH_NNP such_JJ that_IN for_IN each_DT MATH_NNP there_EX is_VBZ some_DT MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP so_IN that_DT for_IN each_DT MATH_NNP there_EX exists_VBZ MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subintervals_NNS whose_WP$ lengths_NNS equal_VBP the_DT measures_NNS of_IN the_DT atoms_NNS of_IN MATH_NNP ._.
Partition_VB the_DT plane_NN around_IN MATH_NNP into_IN MATH_NNP equally_RB spaced_VBD cones_NNS ,_, of_IN 60_CD degrees_NNS each_DT ._.
Partition_VB these_DT MATH_NNP transmissions_NNS arbitrarily_RB into_IN MATH_NNP groups_NNS of_IN MATH_NNP transmissions_NNS each_DT ._.
Partition_VB MATH_NNP into_IN two_CD sequences_NNS MATH_NNP of_IN equal_JJ sizes_NNS (_( we_PRP can_MD throw_VB one_CD element_NN from_IN MATH_NNP to_IN ensure_VB parity_NN )_) ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP similarly_RB ,_, as_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN two_CD clusters_NNS MATH_NNP and_CC MATH_NNP of_IN sizes_NNS MATH_NNP and_CC MATH_NNP ,_, respectively_RB ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP equal_JJ subintervals_NNS and_CC note_VBP that_IN since_IN only_RB minimal_JJ paths_NNS with_IN distinct_JJ (_( red_JJ )_) weights_NNS are_VBP considered_VBN ,_, there_EX is_VBZ a_DT threshold_JJ MATH_NNP above_IN which_WDT each_DT interval_NN can_MD contain_VB at_IN most_RBS one_CD minimal_JJ path_NN ._.
Partition_VB the_DT first_JJ MATH_NNP columns_NNS into_IN consecutive_JJ groups_NNS of_IN MATH_NNP columns_NNS ._.
Partition_VB S_NNP into_IN blocks_NNS ,_, each_DT of_IN which_WDT correspond_NN to_IN a_DT different_JJ communication_NN transcript_NN ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN the_DT union_NN of_IN MATH_NNP intervals_NNS MATH_NNP with_IN MATH_NNP as_IN above_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP cubes_NNS of_IN side_NN length_NN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP and_CC hence_RB MATH_NNP ;_: note_NN that_IN this_DT really_RB is_VBZ a_DT partition_NN of_IN MATH_NNP ,_, as_IN the_DT fact_NN that_IN MATH_NNP forces_NNS all_DT four_CD elements_NNS to_TO be_VB distinct_JJ ._.
Partition_VB MATH_NNP ,_, where_WRB for_IN each_DT MATH_NNP ,_, the_DT multiset_NN MATH_NNP has_VBZ exactly_RB two_CD elements_NNS ,_, neither_CC contained_VBD in_IN MATH_NNP ,_, that_DT sum_NN to_IN MATH_NNP (_( the_DT complimentary_JJ submultiset_NN MATH_NNP is_VBZ unrestricted_JJ )_) ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN four_CD subsets_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN two_CD disjoint_NN sets_NNS MATH_NNP and_CC MATH_NNP so_RB that_IN if_IN MATH_NNP then_RB its_PRP$ succesor_NN under_IN MATH_NNP is_VBZ in_IN MATH_NNP and_CC if_IN MATH_NNP then_RB its_PRP$ succesor_NN under_IN MATH_NNP is_VBZ in_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP as_IN MATH_NNP so_IN that_IN the_DT vertices_NNS MATH_NNP on_IN the_DT bottom_NN edge_NN are_VBP at_IN the_DT ends_NNS of_IN Horizontal_NNP strands_NNS of_IN MATH_NNP and_CC the_DT vertices_NNS MATH_NNP on_IN the_DT bottom_NN edge_NN are_VBP at_IN the_DT ends_NNS of_IN Vertical_NNP strands_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, into_IN its_PRP$ equivalence_NN classes_NNS with_IN respect_NN to_IN connectedness_NN ._.
Partition_VB the_DT unit_NN interval_JJ MATH_NNP into_IN MATH_NNP intervals_NNS of_IN length_NN MATH_NNP ._.
Partition_VB a_DT neighborhood_NN of_IN MATH_NNP into_IN cubes_JJ MATH_NNP ,_, each_DT of_IN sidelength_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS ,_, one_CD containing_VBG MATH_NNP edges_NNS to_IN MATH_NNP ,_, MATH_NNP edges_VBZ to_IN MATH_NNP and_CC so_RB on_IN ,_, the_DT other_JJ containing_VBG everything_NN else_RB ._.
Partition_VB MATH_NNP and_CC orders_NNS on_IN the_DT classes_NNS MATH_NNP and_CC MATH_NNP are_VBP usually_RB inherited_VBN ._.
Partition_VB MATH_NNP as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS ,_, MATH_NNP ,_, such_JJ that_IN for_IN each_DT MATH_NNP ,_, MATH_NNP is_VBZ the_DT set_NN of_IN all_DT edges_NNS in_IN MATH_NNP whose_WP$ length_NN is_VBZ in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sectors_NNS ,_, MATH_NNP ,_, by_IN placing_VBG MATH_NNP equally_RB spaced_VBD points_NNS on_IN the_DT boundary_NN of_IN MATH_NNP and_CC connecting_VBG them_PRP to_IN the_DT origin_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP rows_NNS and_CC MATH_NNP columns_NNS ,_, such_JJ that_IN MATH_NNP is_VBZ partitioned_VBN into_IN MATH_NNP identical_JJ squares_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP congruent_NN sectors_NNS ,_, MATH_NNP ._.
Partition_VB MATH_NNP in_IN the_DT following_JJ way_NN :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN rectangles_NNS MATH_NNP with_IN centers_NNS MATH_NNP such_JJ that_IN given_VBN any_DT MATH_NNP ,_, there_EX exists_VBZ MATH_NNP with_IN center_NN MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT children_NNS of_IN MATH_NNP into_IN classes_NNS MATH_NNP as_IN in_IN REF_NNP ,_, and_CC label_VB the_DT vertices_NNS in_IN class_NN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT children_NNS of_IN MATH_NNP into_IN equivalence_NN classes_NNS MATH_NNP by_IN isomorphism_NN classes_NNS of_IN subtrees_NNS ._.
Partition_VB of_IN the_DT sample_NN space_NN ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN all_DT elements_NNS in_IN MATH_NNP have_VBP inner_JJ product_NN MATH_NNP with_IN MATH_NNP ,_, and_CC all_DT elements_NNS in_IN MATH_NNP have_VBP inner_JJ product_NN MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP greedily_RB into_IN contiguous_JJ subsequences_NNS of_IN edges_NNS such_JJ that_IN each_DT group_NN MATH_NNP is_VBZ maximal_JJ subject_JJ to_IN the_DT constraint_NN that_IN the_DT total_JJ clockwise_NN angle_NN around_IN MATH_NNP swept_NN by_IN the_DT group_NN 's_POS edges_NNS is_VBZ at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP moieties_NNS :_: MATH_NNP ._.
Partition_VB the_DT middle_NN nodes_VBZ into_IN two_CD child_NN subpaths_NNS MATH_NNP (_( the_DT left_JJ child_NN path_NN )_) and_CC MATH_NNP (_( the_DT right_JJ child_NN path_NN )_) ,_, where_WRB MATH_NNP is_VBZ chosen_VBN so_IN that_IN the_DT weight_NN of_IN the_DT middle_JJ nodes_NNS of_IN each_DT child_NN path_NN is_VBZ not_RB more_JJR than_IN half_PDT the_DT weight_NN of_IN the_DT middle_JJ nodes_NNS of_IN the_DT parent_NN path_NN ._.
Partition_VB the_DT vertices_NNS into_IN sets_NNS MATH_NNP as_IN follows_VBZ ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN graph_NN MATH_NNP into_IN three_CD subsets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP as_IN follow_NN ._.
Partition_VB each_DT of_IN the_DT sets_NNS MATH_NNP as_IN MATH_NNP measurably_RB ,_, so_IN that_DT REF_NNP For_IN each_DT MATH_NNP there_EX exists_VBZ MATH_NNP such_JJ that_IN MATH_NNP ;_: CASE_NNP :_: For_IN each_DT MATH_NNP there_EX exists_VBZ MATH_NNP such_JJ that_IN MATH_NNP ;_: CASE_NNP :_: For_IN each_DT MATH_NNP ,_, MATH_NNP for_IN every_DT MATH_NNP ._.
Partition_VB the_DT non-zero_JJ elements_NNS of_IN MATH_NNP by_IN pairing_VBG each_DT element_NN with_IN its_PRP$ (_( additive_JJ )_) inverse_NN ,_, and_CC let_VB MATH_NNP be_VB a_DT set_NN obtained_VBN by_IN choosing_VBG exactly_RB one_CD element_NN from_IN each_DT pair_NN ,_, giving_VBG MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN sets_NNS MATH_NNP so_IN that_DT MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB the_DT terms_NNS of_IN MATH_NNP by_IN length_NN and_CC degree_NN of_IN the_DT first_JJ factor_NN in_IN the_DT term_NN ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP of_IN roughly_RB the_DT same_JJ size_NN such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, MATH_NNP ,_, ,_, MATH_NNP of_IN size_NN MATH_NNP ,_, MATH_NNP ,_, ,_, MATH_NNP such_JJ that_IN MATH_NNP ,_, MATH_NNP is_VBZ odd_JJ and_CC MATH_NNP ,_, MATH_NNP ,_, ,_, MATH_NNP are_VBP nearly_RB equal_JJ ,_, that_DT is_VBZ ,_, MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT block_NN MATH_NNP into_IN consecutive_JJ smaller_JJR blocks_NNS MATH_NNP with_IN same_JJ size_NN MATH_NNP ._.
Partition_VB the_DT block_NN MATH_NNP into_IN consecutive_JJ smaller_JJR blocks_NNS MATH_NNP with_IN size_NN MATH_NNP ._.
Partition_VB the_DT number_NN of_IN iterations_NNS done_VBN by_IN NAME_NNP into_IN phases_NNS of_IN MATH_NNP rounds_NNS ._.
Partition_VB the_DT set_NN MATH_NNP into_IN three_CD parts_NNS ,_, MATH_NNP ,_, corresponding_NN to_TO when_WRB the_DT MATH_NNP are_VBP positive_JJ ,_, negative_JJ ,_, or_CC zero_CD respectively_RB ._.
Partition_VB each_DT tile_NN into_IN several_JJ open_JJ cubes_NNS as_IN follows_VBZ :_: place_NN an_DT inner_JJ cube_NN with_IN edge_NN length_NN MATH_NNP at_IN the_DT center_NN of_IN the_DT tile_NN and_CC place_NN several_JJ outer_JJ cubes_NNS each_DT with_IN edge_NN length_NN MATH_NNP around_IN the_DT cube_NN at_IN the_DT center_NN as_IN shown_VBN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ convex_JJ sets_NNS such_JJ that_IN each_DT partition_NN is_VBZ bounded_VBN by_IN a_DT ball_NN a_DT radius_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN four_CD (_( possibly_RB empty_JJ )_) subsets_NNS MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN two_CD parts_NNS ,_, namely_RB MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS ,_, namely_RB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT lattice_NN as_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP is_VBZ the_DT complement_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, and_CC MATH_NNP into_IN blocks_NNS conformably_RB to_IN the_DT partition_NN of_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN parts_NNS MATH_NNP such_JJ that_IN the_DT number_NN of_IN edges_NNS with_IN one_CD vertex_NN in_IN each_DT MATH_NNP is_VBZ maximized_VBN ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP vertices_VBZ into_IN one_CD part_NN of_IN size_NN MATH_NNP and_CC MATH_NNP parts_NNS of_IN size_NN MATH_NNP ,_, for_IN some_DT MATH_NNP that_DT is_VBZ divisible_JJ by_IN MATH_NNP ._.
Partition_VB MATH_NNP vertices_VBZ into_IN two_CD sets_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP vertices_VBZ into_IN two_CD parts_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP vertices_VBZ into_IN two_CD parts_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, of_IN size_NN MATH_NNP and_CC MATH_NNP respectively_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP subcubes_VBZ MATH_NNP of_IN side_NN length_NN MATH_NNP ._.
Partition_VB each_DT of_IN the_DT cubes_NNS MATH_NNP into_IN MATH_NNP subcubes_VBZ MATH_NNP of_IN side_NN length_NN 2_CD ,_, in_IN such_PDT a_DT way_NN that_IN MATH_NNP has_VBZ the_DT same_JJ position_NN in_IN MATH_NNP as_IN does_VBZ MATH_NNP relative_VB to_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP in_IN three_CD sets_NNS MATH_NNP ,_, such_JJ that_IN the_DT set_NN MATH_NNP contains_VBZ the_DT vertices_NNS MATH_NNP with_IN MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT first_JJ half_NN of_IN edges_NNS ,_, MATH_NNP is_VBZ the_DT next_JJ MATH_NNP proportion_NN of_IN edges_NNS ,_, MATH_NNP is_VBZ the_DT next_JJ MATH_NNP proportion_NN of_IN edges_NNS ,_, and_CC so_RB on_IN ._.
Partition_VB the_DT remaining_VBG MATH_NNP elements_NNS in_IN MATH_NNP ways_NNS ._.
Partition_VB these_DT into_IN MATH_NNP blocks_NNS and_CC place_NN the_DT MATH_NNP elements_NNS into_IN these_DT blocks_NNS ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP intervals_NNS of_IN length_NN approximately_RB MATH_NNP that_DT is_VBZ ,_, MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ;_: hence_NN ,_, MATH_NNP ._.
Partition_VB the_DT time_NN MATH_NNP into_IN two_CD types_NNS of_IN parts_NNS ,_, greedy_JJ parts_NNS and_CC simple_JJ parts_NNS ,_, by_IN defining_VBG times_NNS MATH_NNP as_IN follows_VBZ :_: MATH_NNP (_( Analogous_NNP partition_NN underlies_VBZ the_DT results_NNS in_IN REF_NNP ._.
Partition_VB these_DT leftover_JJ cycle_NN covers_VBZ into_IN equivalence_NN classes_NNS based_VBN on_IN their_PRP$ edge_NN sets_VBZ excluding_VBG edges_NNS wholly_RB within_IN MATH_NNP ;_: namely_RB MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB is_VBZ a_DT set_NN of_IN MATH_NNP integer_NN weights_NNS MATH_NNP and_CC the_DT question_NN is_VBZ whether_IN it_PRP is_VBZ possible_JJ to_IN partition_NN MATH_NNP ,_, into_IN MATH_NNP subsets_NNS MATH_NNP ,_, MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP and_CC for_IN all_DT MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP ,_, we_PRP can_MD transform_VB it_PRP to_IN a_DT WVG_NNP MATH_NNP where_WRB MATH_NNP for_IN all_DT MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP as_IN described_NN in_IN REF_NNP ,_, with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN maximal_JJ chains_NNS MATH_NNP ,_, say_VBP ._.
Partition_VB the_DT path_NN MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP whose_WP$ lengths_NNS are_VBP either_DT MATH_NNP or_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP groups_NNS ,_, MATH_NNP ,_, by_IN letting_VBG MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN parts_NNS MATH_NNP ,_, each_DT of_IN size_NN at_IN least_JJS MATH_NNP ._.
Partition_VB the_DT matrix_NN MATH_NNP in_IN REF_NNP as_IN MATH_NNP ,_, where_WRB no_DT two_CD columns_NNS of_IN MATH_NNP are_VBP fully_RB aliased_VBN and_CC any_DT column_NN of_IN MATH_NNP is_VBZ fully_RB aliased_VBN with_IN at_RB least_RBS one_CD column_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP and_CC MATH_NNP as_IN MATH_NNP ,_, corresponding_VBG to_IN MATH_NNP and_CC MATH_NNP ,_, respectively_RB ._.
Partition_VB the_DT set_NN MATH_NNP into_IN disjoint_NN subsets_NNS MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT support_NN of_IN MATH_NNP into_IN disjoint_NN subsets_NNS MATH_NNP so_IN that_IN MATH_NNP indexes_VBZ the_DT largest_JJS MATH_NNP elements_NNS of_IN MATH_NNP REF_NNP ,_, MATH_NNP indexes_VBZ the_DT next_RB MATH_NNP largest_JJS elements_NNS ,_, and_CC so_RB on_IN ._.
Partition_VB MATH_NNP four_CD times_NNS ,_, with_IN the_DT origin_NN of_IN the_DT grid_NN once_RB each_DT at_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP are_VBP almost_RB immediate_JJ from_IN the_DT definition_NN ._.
Partition_VB the_DT variable_JJ tuple_NN of_IN the_DT MATH_NNP formulas_NNS MATH_NNP as_IN MATH_NNP ,_, and_CC set_VBD MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, such_JJ that_IN if_IN MATH_NNP then_RB MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, such_JJ that_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT MATH_NNP measurable_JJ sets_NNS MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP by_IN setting_VBG MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP are_VBP consisting_VBG of_IN all_DT labelled_VBN and_CC all_DT unlabelled_JJ blocks_NNS of_IN MATH_NNP ,_, respectively_RB ._.
Partition_VB MATH_NNP agents_NNS and_CC items_NNS into_IN MATH_NNP blocks_NNS of_IN size_NN MATH_NNP each_DT ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT set_NN of_IN vertices_NNS which_WDT are_VBP adjacent_JJ to_IN MATH_NNP and_CC MATH_NNP â€“_NNP larger_JJR than_IN MATH_NNP into_IN disjoint_NN sets_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT sum_NN at_IN MATH_NNP :_: MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT cubes_NN MATH_NNP into_IN finitely_RB many_JJ disjoint_NN groups_NNS MATH_NNP ,_, MATH_NNP ,_, 2_CD ,_, MATH_NNP ,_, MATH_NNP ,_, so_IN that_IN any_DT ball_NN in_IN MATH_NNP can_MD meet_VB at_IN most_RBS one_CD cube_NN in_IN each_DT group_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC partition_NN MATH_NNP into_IN MATH_NNP where_WRB ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD events_NNS :_: MATH_NNP ._.
Partition_VB the_DT matrix_NN MATH_NNP into_IN blocks_NNS MATH_NNP ,_, where_WRB MATH_NNP are_VBP MATH_NNP matrices_NNS ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP to_IN augmentable_JJ types_NNS MATH_NNP and_CC non-augmentable_JJ types_NNS MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP ,_, so_IN that_DT CASE_NNP :_: MATH_NNP for_IN a_DT sufficiently_RB large_JJ constant_JJ MATH_NNP ;_: CASE_NNP :_: random_NN variables_NNS MATH_NNP are_VBP independent_JJ for_IN different_JJ MATH_NNP ;_: CASE_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ subintervals_NNS MATH_NNP each_DT of_IN length_NN MATH_NNP and_CC let_VB MATH_NNP be_VB the_DT midpoint_NN of_IN the_DT interval_JJ MATH_NNP ._.
Partition_VB the_DT incoming_JJ edges_NNS of_IN MATH_NNP into_IN two_CD subsets_NNS whose_WP$ size_NN differ_NN by_IN at_IN most_RBS one_CD such_JJ that_IN conflicting_VBG pairs_NNS are_VBP in_IN different_JJ classes_NNS ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT vertices_NNS MATH_NNP such_JJ that_IN MATH_NNP 's_POS constraint_NN is_VBZ tight_JJ ,_, and_CC MATH_NNP consist_NN of_IN vertices_NNS MATH_NNP such_JJ that_IN MATH_NNP 's_POS constraint_NN is_VBZ not_RB tight_JJ ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: -_HYPH CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP ._.
Partition_VB the_DT set_NN of_IN votes_NNS into_IN two_CD sets_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN votes_NNS that_IN rank_NN MATH_NNP first_RB and_CC MATH_NNP is_VBZ the_DT set_NN of_IN votes_NNS that_WDT do_VBP not_RB ._.
Partition_VB MATH_NNP to_TO be_VB MATH_NNP ._.
Partition_VB MATH_NNP by_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP using_VBG the_DT following_JJ procedure_NN :_: for_IN each_DT MATH_NNP ,_, independently_RB assign_JJ MATH_NNP to_IN a_DT set_NN MATH_NNP uniformly_RB at_IN random_NN from_IN MATH_NNP ._.
Partition_VB of_IN type_NN I_PRP trees_VBP :_: For_IN each_DT tree_NN MATH_NNP of_IN type_NN I_PRP ,_, define_VBP MATH_NNP to_TO be_VB the_DT union_NN of_IN the_DT set_NN of_IN vertices_NNS of_IN degree_NN greater_JJR than_IN MATH_NNP in_IN MATH_NNP and_CC a_DT set_NN of_IN at_IN most_JJS MATH_NNP vertices_NNS in_IN MATH_NNP such_JJ that_IN the_DT union_NN of_IN their_PRP$ neighborhoods_NNS contains_VBZ at_IN least_RBS MATH_NNP leaves_NNS and_CC an_DT arbitrary_JJ set_NN of_IN vertices_NNS such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD parts_NNS :_: MATH_NNP ,_, a_DT set_NN of_IN MATH_NNP leaves_VBZ in_IN the_DT neighborhood_NN of_IN MATH_NNP and_CC the_DT remaining_VBG MATH_NNP vertices_NNS ,_, denoted_VBN by_IN MATH_NNP ._.
Partition_VB of_IN type_NN II_NNP trees_NNS :_: For_IN each_DT tree_NN MATH_NNP of_IN type_NN II_NNP ,_, let_VBD MATH_NNP be_VB a_DT set_NN of_IN MATH_NNP independent_JJ leaves_NNS and_CC denote_VB the_DT neighborhood_NN of_IN MATH_NNP by_IN MATH_NNP (_( thus_RB MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN four_CD parts_NNS :_: MATH_NNP ,_, MATH_NNP ,_, a_DT set_NN of_IN MATH_NNP independent_JJ leaves_NNS that_WDT are_VBP not_RB adjacent_JJ to_IN MATH_NNP (_( there_EX are_VBP at_IN most_JJS MATH_NNP independent_JJ leaves_VBZ adjacent_JJ to_IN MATH_NNP )_) ,_, denoted_VBD by_IN MATH_NNP ,_, and_CC the_DT remaining_VBG MATH_NNP vertices_NNS ,_, denoted_VBN by_IN MATH_NNP ._.
Partition_VB of_IN type_NN I_PRP trees_VBP :_: For_IN each_DT tree_NN MATH_NNP of_IN type_NN I_PRP ,_, there_EX is_VBZ a_DT set_NN of_IN at_IN most_JJS MATH_NNP vertices_NNS such_JJ that_IN the_DT union_NN of_IN their_PRP$ neighborhoods_NNS contains_VBZ at_IN least_RBS MATH_NNP leaves_NNS ._.
Partition_VB MATH_NNP into_IN six_CD parts_NNS :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, a_DT set_NN of_IN MATH_NNP neighbors_NNS of_IN MATH_NNP of_IN degree_NN MATH_NNP ,_, denoted_VBD by_IN MATH_NNP ,_, and_CC the_DT remaining_VBG MATH_NNP vertices_NNS ,_, denoted_VBN by_IN MATH_NNP ._.
Partition_VB of_IN type_NN II_NNP trees_NNS :_: For_IN MATH_NNP type_NN II_NNP ,_, let_VBD MATH_NNP be_VB a_DT set_NN of_IN MATH_NNP independent_JJ leaves_NNS and_CC let_VB MATH_NNP be_VB the_DT set_NN of_IN neighbors_NNS of_IN MATH_NNP (_( note_NN that_IN MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN four_CD parts_NNS :_: MATH_NNP ,_, MATH_NNP ,_, a_DT set_NN of_IN MATH_NNP independent_JJ leaves_NNS that_WDT are_VBP not_RB adjacent_JJ to_IN MATH_NNP ,_, denoted_VBD by_IN MATH_NNP ,_, and_CC the_DT remaining_VBG MATH_NNP vertices_NNS ,_, denoted_VBN by_IN MATH_NNP ._.
Partition_VB of_IN path-like_JJ trees_NNS :_: If_IN MATH_NNP is_VBZ path-like_JJ ,_, then_RB let_VB MATH_NNP be_VB a_DT path_NN on_IN MATH_NNP vertices_NNS that_IN is_VBZ contained_VBN in_IN a_DT path_NN on_IN MATH_NNP vertices_NNS such_JJ that_IN all_DT vertices_NNS in_IN MATH_NNP are_VBP degree_JJ MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN five_CD parts_NNS :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, a_DT set_NN of_IN MATH_NNP vertices_NNS of_IN degree_NN MATH_NNP that_IN are_VBP pairwise_JJ of_IN distance_NN MATH_NNP from_IN each_DT other_JJ and_CC not_RB adjacent_JJ to_IN MATH_NNP or_CC MATH_NNP ,_, denoted_VBD by_IN MATH_NNP ,_, and_CC the_DT remaining_VBG MATH_NNP vertices_NNS ,_, denoted_VBN by_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP (_( possibly_RB empty_JJ )_) blocks_NNS MATH_NNP with_IN the_DT following_JJ property_NN :_: If_IN MATH_NNP ,_, then_RB MATH_NNP ._.
Partition_VB the_DT realization_NN according_VBG to_IN the_DT block-structure_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP strings_NNS MATH_NNP each_DT of_IN length_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP equal_JJ size_NN bins_NNS ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD disjoint_NN subsets_NNS ,_, MATH_NNP ,_, and_CC ,_, MATH_NNP ._.
Partition_VB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP matrices_NNS according_VBG to_IN the_DT various_JJ linkage_NN classes_NNS present_VBP in_IN the_DT network_NN as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, set_VBN up_RP a_DT bijection_NN MATH_NNP from_IN MATH_NNP into_IN MATH_NNP and_CC let_VB MATH_NNP contain_VB MATH_NNP and_CC MATH_NNP for_IN all_DT distinct_JJ players_NNS MATH_NNP and_CC MATH_NNP ,_, and_CC MATH_NNP whenever_WRB node_NN MATH_NNP has_VBZ a_DT self-loop_NN ._.
Partition_VB these_DT latter_JJ edges_NNS into_IN two_CD sets_NNS :_: those_DT with_IN a_DT black_JJ vertex_NN on_IN MATH_NNP and_CC those_DT with_IN a_DT black_JJ vertex_NN on_IN MATH_NNP ._.
Partition_VB MATH_NNP conformingly_RB ._.
Partition_VB each_DT MATH_NNP into_IN five_CD equal_JJ parts_NNS of_IN width_NN MATH_NNP ,_, and_CC index_NN them_PRP with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN ,_, for_IN each_DT node_NN MATH_NNP ,_, MATH_NNP ,_, and_CC for_IN each_DT node_NN MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT infinite_JJ set_NN MATH_NNP into_IN two_CD subfamilies_NNS of_IN the_DT same_JJ cardinality_NN ,_, and_CC let_VB MATH_NNP be_VB the_DT sum_NN of_IN the_DT MATH_NNP subfamily_RB for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ the_DT vertices_NNS with_IN degree_NN at_IN most_JJS MATH_NNP and_CC MATH_NNP contains_VBZ the_DT vertices_NNS with_IN degree_NN at_IN least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS of_IN size_NN MATH_NNP and_CC assign_VB each_DT set_NN in_IN the_DT partition_NN to_IN a_DT distinct_NN super-node_NN ._.
Partition_VB MATH_NNP into_IN three_CD subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP is_VBZ non-empty_JJ and_CC contains_VBZ at_IN most_RBS MATH_NNP incoming_JJ neighbors_NNS of_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN either_DT MATH_NNP or_CC MATH_NNP many_JJ infinite_JJ subsets_NNS MATH_NNP in_IN such_JJ a_DT way_NN that_IN there_EX are_VBP MATH_NNP many_JJ MATH_NNP in_IN total_NN ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ all_DT pairs_NNS MATH_NNP where_WRB both_DT MATH_NNP for_IN some_DT cluster_NN MATH_NNP ,_, and_CC MATH_NNP contains_VBZ all_DT remaining_VBG pairs_NNS ._.
Partition_VB the_DT sequences_NNS MATH_NNP into_IN MATH_NNP different_JJ bins_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP has_VBZ sets_NNS of_IN MATH_NNP of_IN sizes_NNS at_IN most_RBS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP qudits_VBZ into_IN 3_CD parts_NNS ,_, that_DT is_VBZ ,_, part_NN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP containing_VBG MATH_NNP ,_, MATH_NNP and_CC MATH_NNP qudits_NNS respectively_RB ._.
Partition_VB the_DT set_NN of_IN terms_NNS of_IN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ all_DT terms_NNS with_IN constants_NNS MATH_NNP and_CC MATH_NNP contains_VBZ all_DT terms_NNS with_IN constants_NNS MATH_NNP (_( for_IN Boolean_NNP formulas_NNS ,_, MATH_NNP and_CC MATH_NNP )_) ._.
Partition_VB the_DT time_NN MATH_NNP by_IN writing_VBG MATH_NNP where_WRB MATH_NNP ._.
Partition_VB into_IN MATH_NNP ._.
Partition_VB the_DT component_NN MATH_NNP of_IN the_DT domain_NN of_IN integration_NN of_IN MATH_NNP into_IN cubes_NN of_IN edge_NN length_NN MATH_NNP with_IN vertices_NNS on_IN the_DT grid_NN MATH_NNP (_( we_PRP use_VBP here_RB notation_NN from_IN REF_NNP and_CC ignore_VB incomplete_JJ cubes_NNS ,_, that_DT is_VBZ ,_, the_DT ones_NNS that_WDT intersect_VBP the_DT ``_`` skew_NN ''_'' faces_NNS of_IN MATH_NNP ,_, as_IN their_PRP$ contribution_NN to_IN the_DT integrals_NNS will_MD be_VB asymptotically_RB negligible_JJ as_IN MATH_NNP )_) ._.
Partition_VB of_IN MATH_NNP into_IN two_CD squares_NNS is_VBZ only_RB MATH_NNP ._.
Partition_VB of_IN MATH_NNP into_IN odd_JJ squares_NNS is_VBZ only_RB MATH_NNP up_IN to_IN the_DT order_NN ._.
Partition_VB the_DT plane_NN into_IN annuli_NN centered_VBD at_IN MATH_NNP by_IN tracing_VBG circles_NNS around_IN MATH_NNP of_IN radii_NN MATH_NNP ._.
Partition_VB the_DT plane_NN into_IN an_DT infinite_JJ grid_NN of_IN axis-parallel_JJ square_JJ cells_NNS of_IN side-length_JJ MATH_NNP ,_, where_WRB the_DT position_NN of_IN the_DT grid_NN is_VBZ chosen_VBN uniformly_RB at_IN random_NN ._.
Partition_VB ,_, where_WRB one_CD creates_VBZ a_DT path_NN of_IN length_NN MATH_NNP for_IN each_DT integer_NN MATH_NNP of_IN the_DT instance_NN (_( MATH_NNP is_VBZ the_DT union_NN of_IN these_DT paths_NNS )_) ,_, and_CC creates_VBZ MATH_NNP as_IN the_DT union_NN of_IN MATH_NNP paths_NNS of_IN length_NN MATH_NNP that_IN capture_NN the_DT MATH_NNP parts_NNS of_IN the_DT MATH_NNP partition_NN ._.
Partition_VB the_DT cube_NN MATH_NNP into_IN subcubes_JJ (_( formed_VBD as_IN a_DT product_NN of_IN half_DT open_JJ intervals_NNS in_IN order_NN to_IN correctly_RB produce_VB a_DT partition_NN )_) having_VBG side_NN length_NN MATH_NNP with_IN vertices_NNS at_IN the_DT appropriate_JJ lattice_NN points_NNS granting_VBG a_DT correct_JJ partitioning_NN ._.
Partition_VB the_DT sum_NN MATH_NNP into_IN a_DT sum_NN with_IN MATH_NNP ,_, two_CD sums_NNS where_WRB one_CD of_IN MATH_NNP is_VBZ zero_CD and_CC the_DT other_JJ is_VBZ nonzero_JJ ,_, and_CC a_DT sum_NN where_WRB MATH_NNP ;_: then_RB sum_NN over_IN the_DT indices_NNS MATH_NNP and_CC MATH_NNP to_TO obtain_VB MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT set_NN MATH_NNP of_IN measure_NN MATH_NNP and_CC sets_VBZ MATH_NNP of_IN MATH_NNP diameter_NN MATH_NNP ._.
Partition_VB MATH_NNP further_RB in_IN precells_NNS on_IN which_WDT there_EX is_VBZ some_DT linear_JJ term_NN MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS :_: MATH_NNP ,_, with_IN links_JJ length_NN at_RB least_JJS MATH_NNP ,_, and_CC MATH_NNP ,_, with_IN the_DT remaining_VBG links_NNS ._.
Partition_VB MATH_NNP further_RB in_IN cells_NNS such_JJ that_IN either_DT MATH_NNP ,_, or_CC MATH_NNP for_IN all_DT MATH_NNP (_( and_CC similarly_RB for_IN MATH_NNP )_) ._.
Partition_VB these_DT cells_NNS further_RB depending_VBG on_IN the_DT order_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP in_IN the_DT following_JJ way_NN :_: MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB of_IN the_DT unity_NN shows_VBZ that_IN such_JJ sequences_NNS do_VBP indeed_RB exist_VB ._.
Partition_VB of_IN the_DT unity_NN also_RB shows_VBZ that_IN there_EX exists_VBZ a_DT sequence_NN MATH_NNP ,_, MATH_NNP ,_, of_IN continuous_JJ functions_NNS with_IN compact_JJ support_NN ,_, with_IN MATH_NNP for_IN all_DT MATH_NNP and_CC with_IN MATH_NNP for_IN all_DT MATH_NNP and_CC all_DT MATH_NNP ._.
Partition_VB the_DT set_NN of_IN idle_JJ intervals_NNS under_IN schedule_NN MATH_NNP into_IN three_CD disjoint_NN subsets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_IN follows_VBZ :_: CASE_NNP :_: MATH_NNP contains_VBZ idle_JJ intervals_NNS not_RB intersecting_VBG any_DT sleep_JJ interval_NN of_IN MATH_NNP ._.
Partition_VB the_DT jobs_NNS rejected_VBN by_IN MATH_NNP into_IN two_CD disjoint_NN subsets_NNS MATH_NNP (_( jobs_NNS rejected_VBN by_IN both_DT MATH_NNP and_CC MATH_NNP )_) and_CC MATH_NNP (_( jobs_NNS rejected_VBN by_IN MATH_NNP only_RB )_) ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN subintervals_NNS ,_, say_VBP MATH_NNP ,_, where_WRB each_DT subinterval_NN ,_, except_IN possibly_RB the_DT last_JJ ,_, has_VBZ length_VBN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP of_IN cardinality_NN at_IN most_JJS MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP is_VBZ in_IN MATH_NNP if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN successive_JJ intervals_NNS MATH_NNP so_IN that_DT MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT space_NN MATH_NNP into_IN a_DT countable_JJ collection_NN of_IN NAME_NNP sets_VBZ MATH_NNP with_IN diameter_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT path_NN MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP ,_, each_DT of_IN length_NN MATH_NNP ._.
Partition_VB each_DT sequence_NN into_IN MATH_NNP length_NN MATH_NNP subsequences_NNS ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT sequence_NN of_IN MATH_NNP segments_NNS so_RB that_IN the_DT first_JJ MATH_NNP of_IN these_DT segments_NNS have_VBP length_VBN exactly_RB MATH_NNP ,_, and_CC so_RB that_IN the_DT MATH_NNP segment_NN has_VBZ length_NN in_IN the_DT range_NN MATH_NNP and_CC is_VBZ located_VBN so_IN that_IN it_PRP contains_VBZ a_DT ``_`` broken_JJ point_NN ''_'' MATH_NNP of_IN the_DT geodesic_NN that_DT is_VBZ at_IN distance_NN at_IN least_JJS MATH_NNP from_IN each_DT end-point_NN of_IN the_DT segment_NN ._.
Partition_VB MATH_NNP into_IN four_CD disjoint_NN sets_NNS MATH_NNP ,_, each_DT of_IN MATH_NNP consecutive_JJ points_NNS along_IN the_DT boundary_NN of_IN MATH_NNP ._.
Partition_VB the_DT gates_NNS of_IN MATH_NNP into_IN three_CD disjoint_NN sets_NNS ,_, MATH_NNP and_CC MATH_NNP defined_VBD as_IN follows_VBZ :_: CASE_NNP :_: MATH_NNP :_: The_DT gates_NNS having_VBG only_RB inputs_NNS from_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT matrices_NNS MATH_NNP and_CC MATH_NNP as_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS according_VBG to_IN their_PRP$ distance_NN from_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS of_IN size_NN MATH_NNP ._.
Partition_VB this_DT set_NN into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP as_IN follows_VBZ ._.
Partition_VB the_DT time_NN line_NN MATH_NNP into_IN two_CD sets_NNS ,_, MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: CASE_NNP :_: MATH_NNP ;_: CASE_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN at_IN most_JJS MATH_NNP groups_NNS defined_VBD as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB the_DT transversal_NN into_IN a_DT finite_JJ number_NN of_IN clopen_JJ sets_NNS of_IN diameter_JJR less_JJR than_IN MATH_NNP ,_, and_CC associate_VB each_DT clopen_NN set_VBD with_IN a_DT tile_NN type_NN ._.
Partition_VB the_DT set_NN of_IN vertices_NNS of_IN MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT sequence_NN outside_IN of_IN MATH_NNP into_IN four_CD intervals_NNS ,_, namely_RB MATH_NNP :_: everything_NN preceding_VBG the_DT MATH_NNP in_IN MATH_NNP ,_, MATH_NNP :_: everything_NN from_IN the_DT end_NN of_IN MATH_NNP to_IN MATH_NNP ,_, MATH_NNP :_: everything_NN from_IN MATH_NNP to_IN the_DT MATH_NNP in_IN MATH_NNP ,_, and_CC MATH_NNP :_: everything_NN following_VBG MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP ,_, each_DT with_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN order_NN MATH_NNP sequences_NNS MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP with_IN MATH_NNP infinite_JJ rays_NNS emanating_VBG from_IN MATH_NNP ,_, such_JJ that_IN the_DT angle_NN between_IN two_CD consecutive_JJ rays_NNS is_VBZ MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN four_CD subsets_NNS :_: MATH_NNP ,_, as_IN follows_VBZ ._.
Partition_VB the_DT cube_NN MATH_NNP into_IN a_DT grid_NN of_IN congruent_NN subcubes_NNS ,_, call_VBP them_PRP MATH_NNP ,_, of_IN side-length_JJ MATH_NNP ,_, where_WRB MATH_NNP is_VBZ such_JJ that_IN there_EX exists_VBZ MATH_NNP for_IN which_WDT MATH_NNP ._.
Partition_VB the_DT MATH_NNP resource_NN states_NNS into_IN MATH_NNP sets_NNS of_IN MATH_NNP states_NNS ,_, discarding_VBG any_DT remaining_VBG ones_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP for_IN MATH_NNP such_JJ that_IN all_DT elements_NNS of_IN MATH_NNP have_VBP inner_JJ product_NN MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT segment_NN MATH_NNP to_IN the_DT at_IN most_JJS MATH_NNP subsegments_NNS whose_WP$ first_JJ coordinates_NNS are_VBP MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT blocks_NNS of_IN type_NN REF_NNP into_IN classes_NNS so_IN that_IN the_DT blocks_NNS MATH_NNP and_CC MATH_NNP are_VBP in_IN the_DT same_JJ class_NN if_IN and_CC only_RB if_IN they_PRP have_VBP the_DT same_JJ distance_NN ._.
Partition_VB Instance_NNP :_: a_DT MATH_NNP positive_JJ multiset_NN MATH_NNP for_IN some_DT integers_NNS MATH_NNP ;_: Question_NN :_: does_VBZ MATH_NNP have_VB a_DT 3-partition_CD ?_.
Partition_VB problem_NN is_VBZ known_VBN to_IN be_VB MATH_NNP complete_JJ CITE_NNP in_IN the_DT strong_JJ sense_NN ,_, that_DT is_VBZ ,_, it_PRP remains_VBZ hard_JJ even_RB if_IN all_DT integers_NNS in_IN the_DT input_NN are_VBP encoded_VBN in_IN unary_JJ ._.
Partition_VB MATH_NNP into_IN about_IN MATH_NNP squares_NNS of_IN the_DT form_NN MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN segments_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN ``_`` segments_NNS ''_'' of_IN 5_CD nodes_NNS each_DT ._.
Partition_VB any_DT MATH_NNP according_VBG to_IN the_DT partition_NN in_IN the_DT basis_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS as_RB equally_RB as_IN possible_JJ :_: MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP many_JJ classes_NNS ,_, each_DT of_IN cardinality_NN MATH_NNP (_( this_DT is_VBZ possible_JJ ,_, since_IN MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN square_JJ cells_NNS of_IN area_NN MATH_NNP for_IN some_DT value_NN MATH_NNP to_TO be_VB specified_VBN later_RB ._.
Partition_VB the_DT values_NNS occurring_VBG in_IN MATH_NNP into_IN an_DT increasing_VBG sequence_NN of_IN non-empty_JJ intervals_NNS MATH_NNP ,_, MATH_NNP ,_, ,_, MATH_NNP ,_, such_JJ that_IN if_IN MATH_NNP and_CC MATH_NNP ,_, then_RB some_DT element_NN of_IN MATH_NNP lies_VBZ between_IN them_PRP in_IN value_NN ._.
Partition_VB MATH_NNP as_IN follows_VBZ ._.
Partition_VB the_DT fundamental_JJ domain_NN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ,_, and_CC MATH_NNP is_VBZ its_PRP$ complement_NN ._.
Partition_VB MATH_NNP with_IN MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP is_VBZ disjoint_NN from_IN all_DT other_JJ elements_NNS of_IN MATH_NNP ,_, MATH_NNP there_EX exists_VBZ MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP meet_VBP at_IN a_DT single_JJ vertex_NN ,_, and_CC MATH_NNP there_EX exists_VBZ MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP meet_VBP at_IN two_CD vertices_NNS ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP consists_VBZ of_IN the_DT elements_NNS of_IN MATH_NNP that_DT correspond_NN to_IN isolated_VBN nodes_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP as_IN in_IN the_DT proof_NN of_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP are_VBP those_DT vertices_NNS coming_VBG from_IN oriented_VBN components_NNS and_CC MATH_NNP those_DT coming_VBG from_IN non-orientable_JJ components_NNS of_IN MATH_NNP (_( orientability_NN of_IN the_DT pieces_NNS in_IN MATH_NNP can_MD be_VB algorithmically_RB checked_VBN from_IN their_PRP$ triangulations_NNS )_) ._.
Partition_VB the_DT vertices_NNS in_IN MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, MATH_NNP ,_, with_IN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP (_( here_RB we_PRP are_VBP only_RB considering_VBG edges_NNS of_IN a_DT color_NN from_IN MATH_NNP )_) ._.
Partition_VB the_DT set_NN MATH_NNP into_IN sets_NNS MATH_NNP with_IN MATH_NNP for_IN every_DT MATH_NNP ._.
Partition_VB the_DT extended_JJ NAME_NNP generator_NN with_IN respect_NN to_IN MATH_NNP to_TO get_VB MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP for_IN MATH_NNP ,_, and_CC MATH_NNP and_CC MATH_NNP ,_, and_CC we_PRP used_VBD REF_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN subsets_NNS such_JJ that_IN each_DT set_NN contains_VBZ vertices_NNS with_IN exactly_RB the_DT same_JJ colors_NNS ._.
Partition_VB MATH_NNP as_IN MATH_NNP so_IN that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP that_IN are_VBP pairwise_JJ disjoint_NN intervals_NNS of_IN the_DT order_NN MATH_NNP so_IN that_DT MATH_NNP for_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS each_DT of_IN length_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP so_RB that_IN MATH_NNP is_VBZ alternating_VBG if_IN MATH_NNP ,_, and_CC parallel_VB to_IN the_DT boundary_JJ MATH_NNP in_IN MATH_NNP if_IN MATH_NNP ._.
Partition_VB this_DT sequence_NN into_IN blocks_NNS of_IN the_DT form_NN MATH_NNP ,_, where_WRB MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT location_NN of_IN the_DT endpoint_NN of_IN the_DT first_JJ such_JJ block_NN of_IN odd_JJ length_NN ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP ,_, each_DT consisting_VBG of_IN the_DT vertices_NNS of_IN one_CD isolated_JJ red_JJ cycle_NN ._.
Partition_VB MATH_NNP into_IN infinite_JJ sets_NNS MATH_NNP ._.
Partition_VB the_DT subspaces_NNS of_IN MATH_NNP into_IN orbits_NNS under_IN the_DT action_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN matchings_NNS MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP so_IN that_IN MATH_NNP is_VBZ a_DT scalar_JJ and_CC ,_, hence_RB ,_, MATH_NNP is_VBZ of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP is_VBZ of_IN size_NN MATH_NNP ,_, and_CC conformably_RB ,_, MATH_NNP ._.
Partition_VB the_DT supporting_JJ graph_NN into_IN MATH_NNP star_NN forests_NNS ._.
Partition_VB MATH_NNP is_VBZ defined_VBN as_IN follows_VBZ ._.
Partition_VB the_DT interval_NN ,_, MATH_NNP ,_, into_IN MATH_NNP uniform_JJ subintervals_NNS ,_, MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB arcs_NN of_IN MATH_NNP into_IN cycles_NNS and_CC paths_NNS as_IN follows_VBZ :_: if_IN we_PRP have_VBP an_DT arc_NN MATH_NNP ,_, then_RB we_PRP say_VBP that_IN the_DT next_JJ arc_NN on_IN the_DT path_NN or_CC cycle_NN is_VBZ the_DT arc_JJ MATH_NNP that_DT is_VBZ the_DT next_JJ arc_NN incident_NN to_IN MATH_NNP accommodating_VBG a_DT nontrivial_JJ symbol_NN in_IN clockwise_NN order_NN ._.
Partition_VB MATH_NNP into_IN ``_`` equivalence_NN classes_NNS ''_'' MATH_NNP in_IN the_DT following_JJ sense_NN :_: any_DT two_CD vectors_NNS in_IN the_DT same_JJ class_NN are_VBP identical_JJ ,_, that_DT is_VBZ ,_, they_PRP have_VBP the_DT same_JJ value_NN on_IN each_DT attribute_NN ,_, while_IN any_DT two_CD vectors_NNS from_IN different_JJ classes_NNS differ_VBP on_IN at_RB least_RBS one_CD attribute_NN ._.
Partition_VB the_DT matrix_NN as_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT MATH_NNP the_DT diagonal_JJ element_NN of_IN MATH_NNP satisfying_NN by_IN construction_NN MATH_NNP ._.
Partition_VB ,_, then_RB MATH_NNP can_MD be_VB made_VBN the_DT unique_JJ winner_NN in_IN MATH_NNP ,_, and_CC if_IN MATH_NNP ._.
Partition_VB ,_, then_RB MATH_NNP can_MD not_RB be_VB made_VBN a_DT winner_NN in_IN MATH_NNP ._.
Partition_VB ,_, then_RB MATH_NNP can_MD be_VB made_VBN the_DT unique_JJ winner_NN of_IN the_DT initial_JJ round_NN ,_, and_CC thus_RB the_DT unique_JJ winner_NN of_IN the_DT overall_JJ election_NN ._.
Partition_VB ,_, then_RB MATH_NNP will_MD never_RB make_VB it_PRP to_IN the_DT final_JJ round_NN ._.
Partition_VB MATH_NNP into_IN units_NNS ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS MATH_NNP so_IN that_IN MATH_NNP consists_VBZ precisely_RB of_IN the_DT integers_NNS appearing_VBG in_IN MATH_NNP ;_: by_IN hypothesis_NN ,_, this_DT is_VBZ a_DT NAME_NNP partition_NN of_IN MATH_NNP ._.
Partition_VB the_DT elements_NNS of_IN MATH_NNP according_VBG to_IN their_PRP$ first_JJ components_NNS ,_, MATH_NNP that_DT is_VBZ ,_, MATH_NNP is_VBZ the_DT set_NN of_IN all_DT tuples_NNS MATH_NNP whose_WP$ first_JJ component_NN is_VBZ MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB the_DT non-Hamiltonian_JJ cycle_NN cover_NN MATH_NNP into_IN cycles_NNS MATH_NNP such_JJ that_IN each_DT MATH_NNP is_VBZ a_DT simple_JJ cycle_NN ._.
Partition_VB MATH_NNP into_IN disjoint_NN strips_NNS MATH_NNP with_IN width_JJ MATH_NNP ,_, which_WDT are_VBP all_DT orthogonal_JJ to_IN MATH_NNP with_IN respect_NN to_IN the_DT dot_JJ product_NN MATH_NNP in_IN REF_NNP ,_, that_DT is_VBZ ,_, MATH_NNP is_VBZ given_VBN by_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN with_IN subintervals_NNS MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB the_DT matrices_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT components_NNS of_IN MATH_NNP into_IN two_CD parts_NNS MATH_NNP and_CC MATH_NNP to_TO minimise_VB the_DT maximum_JJ number_NN of_IN vertices_NNS in_IN MATH_NNP in_IN one_CD of_IN the_DT parts_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC define_JJ MATH_NNP ,_, MATH_NNP ,_, MATH_NNP as_IN before_RB ._.
Partition_VB MATH_NNP into_IN a_DT disjoint_NN union_NN of_IN MATH_NNP non-empty_JJ sets_VBZ MATH_NNP ,_, and_CC denote_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN pairs_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN sets_VBZ MATH_NNP satisfying_VBG MATH_NNP ._.
Partition_VB the_DT carvemark_NN of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP by_IN taking_VBG MATH_NNP equal_JJ to_IN MATH_NNP with_IN MATH_NNP substituted_VBN by_IN MATH_NNP ,_, and_CC taking_VBG MATH_NNP equal_JJ to_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB the_DT open_JJ interval_JJ MATH_NNP into_IN open_JJ subintervals_NNS MATH_NNP for_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT set_NN of_IN secrets_NNS ,_, MATH_NNP ,_, into_IN countably_RB many_JJ positive_JJ sets_NNS MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN two_CD pieces_NNS MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP and_CC MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP is_VBZ scalar_JJ and_CC MATH_NNP is_VBZ square_JJ of_IN size_NN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN rows_NNS and_CC the_DT set_NN of_IN columns_NNS into_IN consecutive_JJ sets_NNS of_IN size_NN MATH_NNP ,_, and_CC consider_VBP the_DT MATH_NNP matrix_NN MATH_NNP obtained_VBD by_IN contracting_VBG these_DT intervals_NNS of_IN size_NN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN rows_NNS of_IN MATH_NNP into_IN intervals_NNS of_IN size_NN MATH_NNP ,_, and_CC the_DT set_NN of_IN columns_NNS of_IN MATH_NNP into_IN intervals_NNS of_IN size_NN MATH_NNP ,_, and_CC contract_NN these_DT intervals_NNS to_TO obtain_VB a_DT MATH_NNP matrix_NN MATH_NNP ._.
Partition_VB the_DT MATH_NNP columns_NNS into_IN two_CD intervals_NNS of_IN MATH_NNP columns_NNS ._.
Partition_VB the_DT MATH_NNP matrix_NN MATH_NNP into_IN MATH_NNP matrices_NNS MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP arbitrarily_RB ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD subfamilies_NNS MATH_NNP so_IN that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP according_VBG to_IN whether_IN MATH_NNP is_VBZ labelled_VBN MATH_NNP or_CC not_RB as_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP as_IN MATH_NNP with_IN MATH_NNP and_CC consider_VB the_DT right-hand_JJ sum_NN above_RB decomposed_VBD as_IN MATH_NNP ._.
Partition_VB the_DT ground_NN set_VBD MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS of_IN size_NN MATH_NNP ._.
Partition_VB the_DT processes_NNS in_IN MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN disjoint_NN pieces_NNS MATH_NNP ,_, such_JJ that_IN for_IN each_DT MATH_NNP ,_, we_PRP have_VBP MATH_NNP and_CC MATH_NNP is_VBZ connected_VBN ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN disjoint_NN connected_VBN blobs_NN with_IN each_DT blob_NN of_IN size_NN between_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subwords_NNS of_IN length_NN at_RB least_JJS MATH_NNP each_DT ;_: say_VBP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS :_: MATH_NNP ,_, containing_VBG only_RB counting_VBG constraints_NNS and_CC MATH_NNP containing_VBG only_RB table_NN and_CC negative_JJ constraints_NNS ._.
Partition_VB is_VBZ well-known_JJ to_TO be_VB MATH_NNP complete_JJ (_( see_NN ,_, for_IN example_NN ,_, CITE_NNP )_) ._.
Partition_VB if_IN and_CC only_RB if_IN MATH_NNP can_MD be_VB made_VBN the_DT unique_JJ NAME_NNP winner_NN in_IN MATH_NNP ._.
Partition_VB if_IN and_CC only_RB if_IN MATH_NNP can_MD be_VB prevented_VBN from_IN being_VBG the_DT unique_JJ NAME_NNP winner_NN by_IN changing_VBG votes_NNS in_IN MATH_NNP without_IN exceeding_VBG the_DT budget_NN MATH_NNP ._.
Partition_VB with_IN MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB ._.
Partition_VB if_IN and_CC only_RB if_IN MATH_NNP can_MD be_VB prevented_VBN from_IN being_VBG the_DT unique_JJ fallback_NN winner_NN by_IN changing_VBG votes_NNS in_IN MATH_NNP without_IN exceeding_VBG the_DT budget_NN MATH_NNP ._.
Partition_VB the_DT non-degenerate_JJ simplices_NNS of_IN MATH_NNP into_IN the_DT following_JJ disjoint_NN subsets_NNS :_: a_DT MATH_NNP simplex_JJ MATH_NNP of_IN MATH_NNP has_VBZ CASE_NNP :_: type_NN MATH_NNP if_IN it_PRP is_VBZ contained_VBN in_IN MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP ,_, MATH_NNP ,_, if_IN there_EX exists_VBZ MATH_NNP (_( which_WDT is_VBZ necessarily_RB uniquely_RB determined_VBN by_IN MATH_NNP )_) such_JJ that_IN CASE_NNP :_: MATH_NNP for_IN MATH_NNP ,_, and_CC CASE_NNP :_: MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP otherwise_RB ._.
Partition_VB the_DT non-degenerate_JJ simplices_NNS of_IN MATH_NNP into_IN the_DT following_JJ disjoint_NN subsets_NNS :_: a_DT MATH_NNP simplex_JJ MATH_NNP of_IN MATH_NNP has_VBZ CASE_NNP :_: type_NN MATH_NNP if_IN it_PRP is_VBZ contained_VBN in_IN MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP ,_, MATH_NNP even_RB ,_, if_IN it_PRP is_VBZ not_RB of_IN type_NN MATH_NNP ,_, has_VBZ the_DT form_NN MATH_NNP and_CC MATH_NNP does_VBZ not_RB equal_JJ MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP ,_, MATH_NNP ,_, if_IN it_PRP is_VBZ not_RB of_IN type_NN MATH_NNP ,_, has_VBZ the_DT form_NN MATH_NNP and_CC MATH_NNP equals_NNS neither_CC MATH_NNP nor_CC MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP otherwise_RB ._.
Partition_VB the_DT non-degenerate_JJ MATH_NNP simplices_NNS of_IN MATH_NNP into_IN the_DT following_JJ disjoint_NN subsets_NNS :_: a_DT MATH_NNP simplex_JJ MATH_NNP of_IN MATH_NNP has_VBZ CASE_NNP :_: type_NN MATH_NNP if_IN it_PRP is_VBZ contained_VBN in_IN MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP if_IN it_PRP is_VBZ not_RB of_IN type_NN MATH_NNP ,_, and_CC MATH_NNP ;_: CASE_NNP :_: type_NN MATH_NNP otherwise_RB ._.
Partition_VB the_DT complex_JJ plane_NN into_IN a_DT finite_JJ number_NN of_IN cones_NNS ,_, all_DT with_IN vertex_NN at_IN a_DT single_JJ common_JJ point_NN ,_, with_IN angle_NN less_JJR than_IN MATH_NNP and_CC none_NN of_IN them_PRP having_VBG a_DT pole_NN on_IN their_PRP$ boundary_NN ._.
Partition_VB problem_NN :_: an_DT instance_NN consists_VBZ of_IN MATH_NNP integers_NNS MATH_NNP ,_, such_JJ that_IN each_DT number_NN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB ,_, there_EX are_VBP MATH_NNP edges_NNS in_IN total_JJ in_IN all_DT these_DT stars_NNS ,_, each_DT of_IN which_WDT is_VBZ stretched_VBN to_IN at_IN most_JJS MATH_NNP ,_, giving_VBG a_DT total_JJ cost_NN of_IN MATH_NNP ._.
Partition_VB ,_, at_IN least_RBS one_CD edge_NN must_MD be_VB stretched_VBN to_IN a_DT distance_NN of_IN at_RB least_JJS MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN the_DT smallest_JJS number_NN MATH_NNP of_IN intervals_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN all_DT MATH_NNP in_IN the_DT interior_NN of_IN each_DT MATH_NNP ._.
Partition_VB the_DT orthogonal_JJ matrix_NN MATH_NNP and_CC the_DT upper_JJ triangular_NN matrix_NN MATH_NNP as_IN follows_VBZ :_: MATH_NNP where_WRB the_DT block_NN sizes_NNS are_VBP indicated_VBN on_IN the_DT border_NN of_IN the_DT matrices_NNS ._.
Partition_VB MATH_NNP in_IN MATH_NNP many_JJ countable_JJ subsets_NNS MATH_NNP ._.
Partition_VB each_DT interval_NN MATH_NNP into_IN disjoint_NN subintervals_NNS MATH_NNP of_IN size_NN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT MATH_NNP agents_NNS into_IN MATH_NNP teams_NNS ,_, each_DT of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT agents_NNS into_IN MATH_NNP teams_NNS ,_, each_DT of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT gates_NNS of_IN MATH_NNP into_IN three_CD disjoint_NN sets_NNS ,_, MATH_NNP and_CC MATH_NNP (_( REF_NNP illustrates_VBZ the_DT situation_NN )_) ,_, defined_VBD as_IN follows_VBZ :_: CASE_NNP :_: MATH_NNP :_: The_DT gates_NNS having_VBG only_RB inputs_NNS from_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP by_IN crossing_VBG orientation_NN ._.
Partition_VB the_DT set_NN MATH_NNP into_IN two_CD equal-sized_JJ subsets_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, each_DT containing_VBG MATH_NNP terminals_NNS ._.
Partition_VB the_DT variables_NNS MATH_NNP as_IN MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS :_: MATH_NNP such_JJ that_IN MATH_NNP if_IN MATH_NNP ,_, and_CC MATH_NNP iff_VBP MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN every_DT MATH_NNP ._.
Partition_VB the_DT domain_NN MATH_NNP into_IN a_DT disjoint_NN finite_NN union_NN of_IN NAME_NNP sets_VBZ with_IN small_JJ diameter_NN ,_, say_VBP less_JJR than_IN MATH_NNP ,_, so_IN that_IN MATH_NNP is_VBZ in_IN the_DT interior_NN of_IN one_CD of_IN them_PRP (_( MATH_NNP has_VBZ the_DT relative_JJ topology_NN inherited_VBD from_IN MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN contiguous_JJ subsequences_NNS MATH_NNP ,_, where_WRB each_DT MATH_NNP has_VBZ size_NN between_IN MATH_NNP and_CC MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN groups_NNS MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ all_DT indices_NNS MATH_NNP such_JJ that_IN MATH_NNP has_VBZ radius_NN in_IN the_DT interval_NN MATH_NNP ._.
Partition_VB the_DT generating_VBG set_NN of_IN MATH_NNP into_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT largest_JJS subset_NN of_IN MATH_NNP such_JJ that_IN MATH_NNP has_VBZ only_RB odd_JJ parts_NNS and_CC each_DT part_NN occurs_VBZ with_IN multiplicity_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP smaller_JJR grids_NNS ,_, of_IN size_NN MATH_NNP (_( possibly_RB with_IN some_DT rows_NNS and_CC columns_NNS left_VBD over_RP )_) ._.
Partition_VB the_DT grid_NN into_IN subgrids_NNS within_IN one_CD of_IN which_WDT there_EX must_MD be_VB at_IN most_RBS 2_CD MATH_NNP damaged_VBD vertices_NNS ,_, and_CC then_RB find_VB a_DT minor_JJ using_VBG the_DT remaining_VBG undamaged_JJ axis-parallel_JJ hyperplanes_NNS ,_, as_IN in_IN REF_NNP ._.
Partition_VB the_DT state-space_NN matrices_VBZ according_VBG to_IN the_DT partition_NN imposed_VBD by_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD disjoint_NN sets_NNS MATH_NNP and_CC MATH_NNP with_IN equal_JJ measure_NN such_JJ that_IN for_IN almost_RB every_DT MATH_NNP at_RB least_JJS MATH_NNP neighbors_NNS of_IN MATH_NNP will_MD be_VB in_IN the_DT other_JJ set_NN of_IN the_DT partition_NN ._.
Partition_VB MATH_NNP into_IN two_CD sub-batches_NNS MATH_NNP ,_, MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ all_PDT the_DT items_NNS in_IN MATH_NNP smaller_JJR than_IN MATH_NNP ,_, MATH_NNP contains_VBZ the_DT rest_NN of_IN MATH_NNP 's_POS items_NNS ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN of_IN agents_NNS MATH_NNP into_IN three_CD sets_NNS :_: CASE_NNP :_: MATH_NNP is_VBZ the_DT singleton_NN consisting_VBG of_IN the_DT central_JJ agent_NN ;_: CASE_NNP :_: MATH_NNP is_VBZ the_DT set_NN of_IN agents_NNS MATH_NNP who_WP purchase_NN the_DT edge_NN MATH_NNP ;_: and_CC CASE_NNP :_: MATH_NNP is_VBZ the_DT set_NN of_IN free-loading_JJ agents_NNS who_WP do_VBP not_RB buy_VB any_DT edges_NNS ._.
Partition_VB the_DT set_NN of_IN agents_NNS MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_IN in_IN the_DT proof_NN of_IN REF_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN sets_NNS MATH_NNP of_IN size_NN MATH_NNP ,_, and_CC write_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT following_JJ MATH_NNP sets_NNS :_: MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP in_IN a_DT disjoint_NN collection_NN of_IN precompact_JJ sets_NNS MATH_NNP and_CC let_VB MATH_NNP be_VB dynamic_JJ optimal_JJ couplings_NNS obtained_VBD by_IN conditioning_VBG the_DT coupling_VBG MATH_NNP associated_VBN to_IN MATH_NNP to_TO have_VB starting_JJ point_NN in_IN MATH_NNP and_CC endpoint_NN in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN higher-dimensional_JJ progressions_NNS of_IN the_DT form_NN MATH_NNP where_WRB MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT text_NN into_IN disjoint_NN fragments_NNS of_IN length_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP so_IN that_IN MATH_NNP is_VBZ the_DT set_NN of_IN vectors_NNS MATH_NNP such_JJ that_IN the_DT last_JJ two_CD entires_NNS of_IN MATH_NNP equal_JJ 1_CD ,_, and_CC MATH_NNP consists_NNS of_IN the_DT remaining_VBG vectors_NNS ._.
Partition_VB MATH_NNP into_IN a_DT sequence_NN of_IN finite_JJ sets_NNS MATH_NNP with_IN the_DT property_NN that_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT sides_NNS of_IN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN sides_NNS of_IN the_DT first_JJ type_NN and_CC MATH_NNP consists_NNS of_IN sides_NNS of_IN the_DT second_JJ type_NN ._.
Partition_VB MATH_NNP into_IN a_DT collection_NN MATH_NNP of_IN paths_NNS and_CC cycles_NNS as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN MATH_NNP ``_`` bins_NNS ''_'' ,_, where_WRB each_DT bin_NN is_VBZ a_DT sequence_NN of_IN MATH_NNP consecutive_JJ indices_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP depending_VBG on_IN whether_IN MATH_NNP or_CC MATH_NNP ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT MATH_NNP ._.
Partition_VB the_DT divisors_NNS of_IN MATH_NNP according_VBG to_IN the_DT highest_JJS power_NN of_IN MATH_NNP which_WDT divides_VBZ it_PRP ._.
Partition_VB MATH_NNP as_IN follows_VBZ :_: MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT vectors_NNS MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN of_IN MATH_NNP s_VBP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP if_IN MATH_NNP and_CC MATH_NNP if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN sets_VBZ MATH_NNP by_IN putting_VBG each_DT MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN colours_NNS MATH_NNP into_IN three_CD pairs_NNS ,_, each_DT consisting_VBG of_IN two_CD disjoint_NN MATH_NNP sets_NNS ._.
Partition_VB MATH_NNP into_IN 2_CD kinds_NNS of_IN bundles_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB every_DT MATH_NNP into_IN the_DT sets_NNS MATH_NNP ,_, and_CC note_NN that_WDT every_DT MATH_NNP are_VBP in_IN the_DT same_JJ set_NN if_IN and_CC only_RB if_IN MATH_NNP ,_, independently_RB of_IN the_DT value_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT sets_NNS MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT set_NN of_IN all_DT integers_NNS MATH_NNP for_IN which_WDT MATH_NNP is_VBZ contributing_VBG to_IN MATH_NNP ._.
Partition_VB those_DT cosets_NNS of_IN both_DT MATH_NNP and_CC of_IN MATH_NNP which_WDT are_VBP contained_VBN in_IN MATH_NNP into_IN cosets_NNS of_IN MATH_NNP to_TO get_VB the_DT required_JJ equality_NN ._.
Partition_VB MATH_NNP into_IN its_PRP$ top_JJ MATH_NNP and_CC bottom_JJ MATH_NNP elements_NNS :_: MATH_NNP ._.
Partition_VB the_DT linear_JJ form_NN MATH_NNP into_IN two_CD parts_NNS ,_, MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT variables_NNS in_IN MATH_NNP from_IN the_DT set_NN MATH_NNP and_CC MATH_NNP consists_NNS of_IN the_DT variables_NNS which_WDT come_VBP from_IN the_DT set_NN MATH_NNP ._.
Partition_VB all_DT agents_NNS into_IN MATH_NNP disjoint_NN classes_NNS MATH_NNP each_DT of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB this_DT round_NN into_IN events_NNS MATH_NNP ._.
Partition_VB the_DT eigenvector_NN matrices_NNS as_IN follows_VBZ MATH_NNP and_CC let_VB MATH_NNP and_CC MATH_NNP denote_VBP the_DT eigenvectors_NNS corresponding_VBG to_IN the_DT unit_NN eigenvalues_NNS ,_, that_DT is_VBZ ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT subset_NN MATH_NNP of_IN buried_VBN components_NNS and_CC MATH_NNP of_IN unburied_JJ components_NNS ._.
Partition_VB the_DT indices_NNS MATH_NNP into_IN MATH_NNP so_IN that_IN (_( interpreting_VBG empty_JJ sums_NNS as_IN being_VBG zero_CD )_) MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT sets_NNS MATH_NNP ,_, with_IN each_DT part_NN of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS ,_, MATH_NNP and_CC do_VB the_DT following_NN :_: CASE_NNP :_: Set_NNP MATH_NNP ,_, draw_JJ MATH_NNP samples_NNS from_IN MATH_NNP and_CC ,_, using_VBG the_DT same_JJ samples_NNS ,_, run_VBP NAME_NNP MATH_NNP from_IN REF_NNP for_IN each_DT MATH_NNP ;_: CASE_NNP :_: Run_NNP NAME_NNP MATH_NNP ,_, where_WRB MATH_NNP are_VBP the_DT distributions_NNS output_NN by_IN NAME_NNP in_IN the_DT previous_JJ step_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS MATH_NNP for_IN MATH_NNP such_JJ that_IN MATH_NNP if_IN MATH_NNP ,_, and_CC MATH_NNP iff_VBP MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP according_VBG to_IN its_PRP$ MATH_NNP property_NN ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP for_IN MATH_NNP ._.
Partition_VB conjugation_NN is_VBZ an_DT involution_NN on_IN the_DT set_NN of_IN partitions_NNS of_IN MATH_NNP that_IN fixes_VBZ only_RB the_DT partitions_NNS whose_WP$ REF_NNP are_VBP symmetric_JJ about_IN the_DT diagonal_NN from_IN the_DT upper_JJ left_NN to_IN lower_JJR right_NN ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP as_IN in_IN REF_NNP ,_, MATH_NNP ,_, and_CC let_VB MATH_NNP and_CC MATH_NNP be_VB the_DT corresponding_JJ primitive_JJ substitutions_NNS ._.
Partition_VB the_DT MATH_NNP channels_NNS into_IN MATH_NNP disjoint_NN subsets_NNS ,_, MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT three_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, defined_VBN by_IN :_: MATH_NNP ._.
Partition_VB each_DT sorted_VBD list_NN MATH_NNP into_IN MATH_NNP contiguous_JJ buckets_NNS MATH_NNP ,_, where_WRB each_DT bucket_NN MATH_NNP contains_VBZ at_IN most_RBS MATH_NNP entries_NNS ._.
Partition_VB the_DT MATH_NNP coordinates_NNS of_IN a_DT binary_JJ MATH_NNP cube_NN into_IN sets_NNS MATH_NNP of_IN size_NN MATH_NNP or_CC MATH_NNP ,_, where_WRB MATH_NNP or_CC MATH_NNP respectively_RB ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ elements_NNS of_IN value_NN less_JJR than_IN 1_CD ,_, and_CC MATH_NNP contains_VBZ elements_NNS of_IN value_NN greater_JJR or_CC equal_JJ to_IN 1_CD ._.
Partition_VB the_DT intervals_NNS MATH_NNP via_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC similarly_RB for_IN MATH_NNP ._.
Partition_VB the_DT range_NN MATH_NNP into_IN MATH_NNP classes_NNS of_IN equal_JJ size_NN ._.
Partition_VB the_DT vertices_NNS into_IN MATH_NNP classes_NNS of_IN size_NN MATH_NNP or_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS ,_, each_DT consisting_VBG of_IN MATH_NNP blocks_NNS ._.
Partition_VB MATH_NNP into_IN four_CD intervals_NNS CASE_NNP :_: :_: everything_NN preceding_VBG MATH_NNP ._.
Partition_VB the_DT gates_NNS MATH_NNP into_IN equivalence_NN classes_NNS where_WRB gates_NNS in_IN the_DT same_JJ class_NN have_VBP the_DT same_JJ labels_NNS ,_, output_NN markings_NNS ,_, and_CC children_NNS ._.
Partition_VB the_DT vertices_NNS on_IN each_DT side_NN into_IN disjoint_NN blocks_NNS of_IN MATH_NNP ,_, and_CC let_VB the_DT MATH_NNP block_NN on_IN the_DT left_JJ side_NN and_CC on_IN the_DT right_JJ side_NN form_NN a_DT (_( bipartite_NN )_) graph_NN which_WDT we_PRP call_VBP MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB the_DT event_NN MATH_NNP as_IN MATH_NNP ._.
Partition_VB this_DT cone_NN into_IN the_DT cones_NNS over_IN each_DT face_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP infinite_JJ subsets_NNS MATH_NNP such_JJ that_IN the_DT element_NN of_IN MATH_NNP defined_VBD by_IN MATH_NNP is_VBZ non-zero_CD ;_: we_PRP leave_VBP it_PRP to_IN the_DT reader_NN to_TO show_VB that_IN this_DT is_VBZ possible_JJ ._.
Partition_VB MATH_NNP into_IN a_DT sequence_NN of_IN subsets_NNS MATH_NNP ,_, such_JJ that_IN MATH_NNP ,_, and_CC if_IN MATH_NNP ,_, then_RB for_IN all_DT MATH_NNP ,_, MATH_NNP ,_, we_PRP have_VBP MATH_NNP if_IN ,_, and_CC only_RB if_IN ,_, MATH_NNP ,_, and_CC MATH_NNP if_IN ,_, and_CC only_RB if_IN ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP consecutive_JJ intervals_NNS MATH_NNP ,_, each_DT of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS ,_, each_DT of_IN length_NN at_RB least_JJS MATH_NNP ._.
Partition_VB the_DT complete_JJ ordered_VBD graph_NN on_IN vertex_NN set_VBN MATH_NNP into_IN MATH_NNP intervals_NNS each_DT with_IN MATH_NNP vertices_NNS ._.
Partition_VB the_DT vertex_NN set_VBD into_IN MATH_NNP consecutive_JJ intervals_NNS MATH_NNP of_IN MATH_NNP vertices_NNS each_DT and_CC place_VBP a_DT copy_NN of_IN MATH_NNP between_IN each_DT pair_NN of_IN intervals_NNS ,_, while_IN each_DT of_IN the_DT MATH_NNP intervals_NNS forms_NNS an_DT independent_JJ set_NN ._.
Partition_VB the_DT set_NN of_IN voters_NNS as_IN follows_VBZ ._.
Partition_VB the_DT elements_NNS of_IN MATH_NNP into_IN classes_NNS depending_VBG on_IN which_WDT element_NN of_IN MATH_NNP covers_VBZ them_PRP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, then_RB MATH_NNP by_IN induction_NN hypothesis_NN ._.
Partition_VB each_DT MATH_NNP into_IN MATH_NNP subintervals_NNS MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB the_DT matrix_NN MATH_NNP in_IN the_DT following_JJ way_NN :_: MATH_NNP where_WRB MATH_NNP is_VBZ the_DT matrix_NN MATH_NNP restricted_VBD to_IN the_DT vertex_NN set_VBD MATH_NNP and_CC MATH_NNP is_VBZ the_DT matrix_NN MATH_NNP restricted_VBD to_IN the_DT vertex_NN set_VBD MATH_NNP ._.
Partition_VB the_DT region_NN of_IN integration_NN MATH_NNP into_IN the_DT disjoint_NN union_NN MATH_NNP do_VBP a_DT variable_JJ transformation_NN on_IN each_DT region_NN ;_: manipulate_NN ;_: and_CC then_RB simplify_VB ._.
Partition_VB MATH_NNP into_IN MATH_NNP bins_NNS of_IN equal_JJ size_NN denoted_VBD by_IN MATH_NNP such_JJ that_IN each_DT bin_NN contains_VBZ exactly_RB one_CD element_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN consecutive_JJ intervals_NNS of_IN size_NN MATH_NNP denoted_VBD by_IN MATH_NNP ._.
Partition_VB this_DT subclass_NN into_IN two_CD subclasses_NNS of_IN equal_JJ size_NN denoted_VBD by_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN consecutive_JJ disjoint_NN MATH_NNP intervals_NNS denoted_VBD by_IN MATH_NNP ,_, that_DT is_VBZ MATH_NNP ,_, and_CC consider_VBP the_DT subclass_NN MATH_NNP of_IN MATH_NNP consisting_VBG of_IN all_PDT the_DT sets_NNS in_IN MATH_NNP that_IN can_MD be_VB written_VBN in_IN the_DT form_NN MATH_NNP ._.
Partition_VB the_DT string_NN into_IN maximum_JJ length_NN substrings_NNS that_IN each_DT substring_VBG starts_NNS with_IN MATH_NNP ,_, ends_VBZ with_IN MATH_NNP ,_, and_CC contains_VBZ ones_NNS followed_VBN by_IN zeroes_NNS ._.
Partition_VB the_DT left_JJ and_CC right_JJ input_NN arcs_NN of_IN NAME_NNP MATH_NNP as_IN follows_VBZ ._.
Partition_VB the_DT matrices_NNS MATH_NNP and_CC MATH_NNP from_IN REF_NNP into_IN blocks_NNS for_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN layers_NNS MATH_NNP ._.
Partition_VB MATH_NNP will_MD be_VB selected_VBN if_IN and_CC only_RB if_IN MATH_NNP satisfies_VBZ the_DT following_JJ condition_NN :_: MATH_NNP ._.
Partition_VB the_DT infinite_JJ set_NN MATH_NNP into_IN MATH_NNP disjoint_NN infinite_NN sets_VBZ MATH_NNP and_CC choose_VB MATH_NNP with_IN MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT plane_NN into_IN six_CD MATH_NNP sectors_NNS emanating_VBG from_IN MATH_NNP ._.
Partition_VB the_DT state_NN space_NN MATH_NNP into_IN a_DT countable_JJ number_NN of_IN disjoint_NN sets_NNS ,_, MATH_NNP ,_, MATH_NNP ,_, with_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP in_IN two_CD parts_NNS where_WRB MATH_NNP if_IN the_DT degree_NN of_IN MATH_NNP at_IN most_JJS MATH_NNP and_CC MATH_NNP otherwise_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP ,_, each_DT of_IN length_NN MATH_NNP ,_, and_CC partition_NN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB of_IN size_NN 1_CD ._.
Partition_VB of_IN size_NN 4_CD ._.
Partition_VB the_DT atoms_NNS of_IN MATH_NNP as_IN MATH_NNP where_WRB each_DT MATH_NNP has_VBZ exactly_RB one_CD atom_NN and_CC use_VBP the_DT complete_JJ transversal_NN function_NN MATH_NNP ._.
Partition_VB the_DT graph_NN to_IN disjoint_VB MATH_NNP subgraphs_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN MATH_NNP is_VBZ the_DT set_NN of_IN vertices_NNS that_WDT are_VBP adjacent_JJ to_IN some_DT twins_NNS ._.
Partition_VB the_DT set_NN of_IN nice_JJ variables_NNS into_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP as_IN follows_VBZ MATH_NNP where_WRB clearly_RB MATH_NNP ,_, and_CC consider_VBP the_DT linear_JJ approximation_NN of_IN REF_NNP around_IN MATH_NNP which_WDT is_VBZ given_VBN by_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN slabs_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC consider_NN MATH_NNP consisting_NN of_IN independent_JJ copies_NNS of_IN the_DT process_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsequences_NNS MATH_NNP and_CC MATH_NNP ,_, which_WDT contains_VBZ all_DT reactions_NNS of_IN MATH_NNP which_WDT came_VBD from_IN MATH_NNP and_CC MATH_NNP respectively_RB ._.
Partition_VB the_DT leaves_NNS into_IN subsets_NNS MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ all_DT leaves_NNS that_WDT are_VBP descendants_NNS of_IN MATH_NNP ._.
Partition_VB the_DT removed_VBN box_NN to_IN MATH_NNP disjoint_NN rectangular_NN components_NNS ,_, starting_VBG from_IN the_DT winning_VBG square_JJ MATH_NNP and_CC going_VBG to_IN the_DT north-west_JJ and_CC to_IN the_DT south-east_JJ ,_, such_JJ that_IN each_DT component_NN is_VBZ located_VBN in_IN a_DT different_JJ corner_NN ._.
Partition_VB the_DT matrix_NN MATH_NNP into_IN blocks_NNS according_VBG to_IN the_DT pairs_NNS MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN two_CD parts_NNS :_: two_CD copies_NNS of_IN MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_JJ cofinal_JJ sets_NNS MATH_NNP and_CC ,_, for_IN MATH_NNP ,_, let_VBD MATH_NNP ._.
Partition_VB the_DT lattice_NN into_IN MATH_NNP cubic_JJ subsets_NNS MATH_NNP ,_, each_DT of_IN edge-length_JJ MATH_NNP and_CC define_VB MATH_NNP for_IN which_WDT MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP and_CC MATH_NNP coincide_VBP locally_RB on_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN vertices_NNS in_IN MATH_NNP with_IN a_DT neighbor_NN in_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN parts_NNS MATH_NNP and_CC MATH_NNP by_IN assigning_VBG MATH_NNP to_IN MATH_NNP and_CC randomly_RB assigning_VBG each_DT other_JJ vertex_NN of_IN MATH_NNP to_IN MATH_NNP with_IN probability_NN 1/2_CD and_CC MATH_NNP otherwise_RB ,_, where_WRB these_DT assignments_NNS are_VBP independent_JJ for_IN each_DT vertex_NN ._.
Partition_VB MATH_NNP in_IN this_DT manner_NN for_IN every_DT MATH_NNP to_TO obtain_VB sets_NNS MATH_NNP for_IN MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP non-empty_JJ vertex_NN classes_NNS ,_, MATH_NNP ._.
Partition_VB the_DT disc_NN MATH_NNP into_IN 8_CD isometric_JJ cone-shaped_JJ sectors_NNS (_( such_JJ that_IN one_CD of_IN the_DT separation_NN lines_NNS is_VBZ vertical_JJ ,_, say_VBP )_) truncated_VBN to_IN a_DT radius_NN of_IN MATH_NNP times_NNS that_IN of_IN the_DT outer_JJ disc_NN (_( REF_NNP )_) ._.
Partition_VB MATH_NNP into_IN disjoint_NN sets_NNS as_IN follows_VBZ :_: MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ the_DT outputs_NNS MATH_NNP with_IN MATH_NNP ,_, and_CC MATH_NNP contains_VBZ the_DT remainder_NN ._.
Partition_VB MATH_NNP into_IN non-overlapping_JJ sets_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC then_RB set_VBN MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, where_WRB MATH_NNP is_VBZ contained_VBN in_IN MATH_NNP and_CC guards_NNS MATH_NNP from_IN the_DT senders_NNS of_IN other_JJ links_NNS in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, where_WRB links_NNS in_IN MATH_NNP failed_VBD the_DT requirement_NN of_IN MATH_NNP separability_NN from_IN MATH_NNP ,_, while_IN those_DT in_IN MATH_NNP passed_VBD the_DT separability_NN requirement_NN but_CC failed_VBD the_DT affectance_NN test_NN ._.
Partition_VB these_DT rounds_NNS into_IN MATH_NNP pairwise_JJ disjoint_NN segments_NNS of_IN length_NN 42_CD ._.
Partition_VB restricted_VBD to_IN chordal_JJ graphs_NNS ._.
Partition_VB the_DT natural_JJ numbers_NNS MATH_NNP so_RB that_IN each_DT MATH_NNP is_VBZ infinite_JJ ._.
Partition_VB MATH_NNP into_IN two_CD MATH_NNP simplices_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, and_CC one_CD MATH_NNP simplex_NN MATH_NNP ,_, where_WRB the_DT vertex_NN MATH_NNP on_IN the_DT edge_NN MATH_NNP has_VBZ label_VBN 1_CD in_IN MATH_NNP and_CC label_NN 0_-NONE- in_IN MATH_NNP ._.
Partition_VB has_VBZ a_DT solution_NN if_IN and_CC only_RB if_IN the_DT stockpiles_NNS can_MD be_VB divided_VBN over_IN the_DT two_CD pads_NNS in_IN such_JJ a_DT way_NN that_IN they_PRP take_VBP up_RP an_DT equal_JJ amount_NN of_IN space_NN ,_, that_DT is_VBZ ,_, if_IN the_DT makespan_NN is_VBZ equal_JJ to_IN MATH_NNP ._.
Partition_VB has_VBZ a_DT solution_NN if_IN and_CC only_RB if_IN the_DT stockpiles_NNS can_MD be_VB divided_VBN equally_RB over_IN the_DT two_CD reclaimers_NNS and_CC equally_RB over_IN the_DT two_CD pads_NNS in_IN such_JJ a_DT way_NN that_IN they_PRP take_VBP up_RP an_DT equal_JJ amount_NN of_IN space_NN ,_, that_DT is_VBZ ,_, if_IN the_DT makespan_NN (_( for_IN both_DT reclaimers_NNS )_) is_VBZ equal_JJ to_IN MATH_NNP ._.
Partition_VB the_DT rows_NNS of_IN this_DT matrix_NN into_IN MATH_NNP and_CC the_DT columns_NNS into_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP corresponds_VBZ to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT stream_NN greedily_RB ,_, placing_VBG a_DT separator_NN when_WRB the_DT weight_NN of_IN the_DT current_JJ partition_NN is_VBZ at_RB least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN segments_NNS MATH_NNP so_IN that_IN the_DT length_NN of_IN each_DT segment_NN MATH_NNP be_VB at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD MATH_NNP into_IN two_CD sets_NNS MATH_NNP ,_, and_CC MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT set_NN MATH_NNP of_IN size_NN MATH_NNP and_CC a_DT set_NN MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD classes_NNS according_VBG to_IN the_DT length_NN of_IN the_DT first_JJ 1-run_JJ ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT first_JJ MATH_NNP columns_NNS of_IN MATH_NNP and_CC MATH_NNP is_VBZ the_DT MATH_NNP column_NN ,_, which_WDT lies_VBZ in_IN the_DT coordinate_JJ subspace_NN MATH_NNP spanning_VBG the_DT dimensions_NNS indexed_VBP by_IN the_DT non-zero_JJ entries_NNS of_IN column_NN MATH_NNP of_IN MATH_NNP ._.
Partition_VB the_DT bins_NNS among_IN the_DT superbins_NNS in_IN their_PRP$ natural_JJ ordering_NN such_JJ that_IN each_DT superbin_NN MATH_NNP contains_VBZ the_DT bins_NNS associated_VBN with_IN the_DT messages_NNS MATH_NNP ._.
Partition_VB the_DT codewords_NNS ,_, MATH_NNP ,_, among_IN MATH_NNP bins_NNS in_IN their_PRP$ natural_JJ ordering_NN such_JJ that_IN each_DT bin_NN MATH_NNP ,_, MATH_NNP contains_VBZ the_DT codewords_NNS associated_VBN with_IN the_DT index_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP with_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP equally_RB spaced_VBD subintervals_NNS MATH_NNP ,_, MATH_NNP ,_, each_DT with_IN length_NN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ as_RB in_IN REF_NNP ._.
Partition_VB the_DT domains_NNS of_IN MATH_NNP and_CC MATH_NNP into_IN intervals_NNS of_IN length_NN MATH_NNP (_( small_JJ enough_RB as_IN in_IN REF_NNP )_) and_CC renormalize_VB the_DT restricted_JJ functions_NNS ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP or_CC equivalently_RB MATH_NNP according_VBG to_IN the_DT placement_NN of_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB of_IN Votes_NNS with_IN Ties-Eliminate_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP as_IN MATH_NNP with_IN MATH_NNP for_IN MATH_NNP ,_, such_JJ that_IN MATH_NNP has_VBZ MATH_NNP edges_NNS between_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD NAME_NNP arcs_NN :_: MATH_NNP consists_VBZ of_IN the_DT first_JJ MATH_NNP edges_VBZ along_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT non-identity_JJ inverse_JJ pairs_NNS of_IN elements_NNS of_IN MATH_NNP into_IN MATH_NNP inverse-closed_JJ ,_, conjugation-closed_JJ classes_NNS MATH_NNP (_( corresponding_VBG to_IN edges_NNS joined_VBD to_IN the_DT identity_NN by_IN red_JJ ,_, blue_JJ and_CC green_JJ colours_NNS )_) ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP evenly_RB into_IN MATH_NNP sub-cubes_JJ MATH_NNP ,_, each_DT of_IN side_NN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD multisets_NNS ,_, MATH_NNP for_IN MATH_NNP ,_, and_CC likewise_NN for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN rectangles_NNS MATH_NNP ,_, each_DT of_IN width_NN MATH_NNP ,_, with_IN MATH_NNP immediately_RB to_IN the_DT right_NN of_IN MATH_NNP for_IN each_DT MATH_NNP ,_, and_CC set_VBD MATH_NNP ._.
Partition_VB the_DT minimal_JJ and_CC maximal_JJ elements_NNS of_IN MATH_NNP as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN MATH_NNP subpaths_NNS MATH_NNP where_WRB each_DT MATH_NNP has_VBZ MATH_NNP illegal_JJ turns_NNS and_CC MATH_NNP has_VBZ less_JJR than_IN MATH_NNP illegal_JJ turns_VBZ (_( counting_VBG endpoints_NNS )_) ._.
Partition_VB MATH_NNP into_IN mega-cells_NNS where_WRB a_DT mega-cell_NN is_VBZ a_DT MATH_NNP by_IN MATH_NNP array_NN of_IN cells_NNS ._.
Partition_VB MATH_NNP into_IN three_CD subsets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP as_IN follows_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD subsets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP in_IN the_DT following_JJ way_NN :_: MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD non-empty_JJ subsets_NNS MATH_NNP with_IN the_DT property_NN that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB canonically_RB MATH_NNP in_IN a_DT family_NN MATH_NNP of_IN MATH_NNP cubes_NNS and_CC set_VBN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP of_IN speeds_NNS into_IN the_DT sets_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB accolading_VBG to_IN the_DT following_JJ algorithm_NN :_: CASE_NNP :_: MATH_NNP ._.
Partition_VB the_DT polygon_NN MATH_NNP into_IN two_CD polygons_NNS by_IN drawing_VBG the_DT lines_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT nodes_NNS of_IN the_DT ring_NN into_IN MATH_NNP consecutive_JJ blocks_NNS MATH_NNP of_IN size_NN MATH_NNP ,_, starting_VBG clockwise_NN from_IN node_NN MATH_NNP ._.
Partition_VB all_DT rounds_NNS MATH_NNP into_IN consecutive_JJ time_NN segments_NNS of_IN length_NN MATH_NNP ._.
Partition_VB the_DT NAME_NNP form_NN of_IN MATH_NNP as_IN MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD into_IN MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP orbits_NNS ,_, and_CC let_VB MATH_NNP be_VB the_DT union_NN of_IN the_DT first_JJ MATH_NNP orbits_NNS ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP are_VBP in_IN the_DT same_JJ set_NN if_IN and_CC only_RB if_IN the_DT have_VBP a_DT common_JJ neighbor_NN in_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB REF_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN two_CD subsets_NNS and_CC write_VB MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN parts_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_NNS MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD sets_NNS MATH_NNP so_IN that_DT MATH_NNP for_IN all_DT MATH_NNP ;_: MATH_NNP for_IN all_DT MATH_NNP ;_: MATH_NNP for_IN all_DT MATH_NNP and_CC MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP ,_, arbitrarily_RB ,_, into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP of_IN size_NN MATH_NNP and_CC MATH_NNP respectively_RB so_IN that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT path_NN MATH_NNP into_IN MATH_NNP internally_RB disjoint_VBP subpaths_NNS so_IN that_IN MATH_NNP and_CC each_DT subpath_NN contains_VBZ at_IN least_RBS MATH_NNP elements_NNS of_IN MATH_NNP ._.
Partition_VB the_DT disc_NN of_IN radius_NN MATH_NNP into_IN MATH_NNP equal_JJ sized_VBD sectors_NNS of_IN angle_JJ MATH_NNP and_CC order_NN them_PRP counterclockwise_NN ._.
Partition_VB the_DT matrix_NN as_IN MATH_NNP and_CC recall_VB that_IN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP are_VBP not_RB in_IN the_DT same_JJ components_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT union_NN of_IN disjoint_NN intervals_NNS MATH_NNP on_IN which_WDT MATH_NNP is_VBZ constant_JJ ,_, that_DT is_VBZ ,_, MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP for_IN all_DT MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT time_NN line_NN into_IN phases_NNS ._.
Partition_VB time_NN after_IN MATH_NNP as_IN MATH_NNP ._.
Partition_VB the_DT sequence_NN of_IN the_DT first_JJ MATH_NNP turns_NNS of_IN the_DT game_NN into_IN disjoint_NN intervals_NNS MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN for_IN each_DT MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP is_VBZ a_DT special_JJ REF_NNP the_DT multilinear_NN identities_NNS are_VBP linear_JJ combinations_NNS of_IN alternating_VBG sums_NNS over_RB all_DT 7_CD variables_NNS in_IN the_DT LJ_NNP types_NNS ._.
Partition_VB the_DT collection_NN MATH_NNP into_IN MATH_NNP sub-collections_NNS such_JJ that_IN if_IN MATH_NNP ,_, then_RB MATH_NNP and_CC MATH_NNP belong_VBP to_IN the_DT same_JJ sub-collection_NN ._.
Partition_VB the_DT remaining_VBG MATH_NNP nodes_NNS into_IN sets_NNS ._.
Partition_VB ,_, we_PRP create_VBP a_DT graph_NN MATH_NNP by_IN adding_VBG a_DT universal_JJ vertex_NN MATH_NNP to_IN the_DT disjoint_NN union_NN of_IN MATH_NNP paths_NNS on_IN MATH_NNP vertices_NNS ,_, respectively_RB ._.
Partition_VB MATH_NNP into_IN finite_JJ intervals_NNS MATH_NNP for_IN MATH_NNP so_RB that_IN MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP and_CC apply_VB REF_NNP with_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP in_IN place_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS MATH_NNP where_WRB MATH_NNP are_VBP in_IN the_DT same_JJ part_NN if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN five_CD parts_NNS consisting_VBG of_IN the_DT vertex_NN sets_NNS of_IN each_DT MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP ,_, for_IN MATH_NNP and_CC denote_VB MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP according_VBG to_IN the_DT block-diagonal_JJ structure_NN of_IN MATH_NNP ._.
Partition_VB the_DT matrices_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_IN follows_VBZ ,_, MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP contiguous_JJ substrings_NNS MATH_NNP ._.
Partition_VB MATH_NNP with_IN vertical_JJ lines_NNS such_JJ that_IN each_DT part_NN ,_, with_IN the_DT exception_NN of_IN at_IN most_RBS one_CD ,_, contains_VBZ in_IN its_PRP$ interior_NN exactly_RB MATH_NNP vertices_NNS ,_, and_CC furthermore_RBR no_DT vertex_NN lies_VBZ in_IN the_DT boundary_NN of_IN any_DT part_NN ._.
Partition_VB MATH_NNP in_IN the_DT following_JJ manner_NN :_: MATH_NNP where_WRB MATH_NNP is_VBZ the_DT MATH_NNP block_NN matrix_NN in_IN MATH_NNP and_CC is_VBZ of_IN dimension_NN MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT elements_NNS of_IN MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT edge_NN set_VBD MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, where_WRB each_DT MATH_NNP has_VBZ at_IN most_RBS MATH_NNP edges_NNS in_IN it_PRP ._.
Partition_VB each_DT set_NN MATH_NNP arbitrarily_RB into_IN two_CD sets_NNS MATH_NNP of_IN equal_JJ size_NN and_CC let_VB MATH_NNP be_VB the_DT vectors_NNS obtained_VBD by_IN applying_VBG REF_NNP to_IN the_DT partitions_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, the_DT former_JJ being_VBG those_DT vertices_NNS in_IN MATH_NNP whose_WP$ shared_VBN edge_NN with_IN MATH_NNP is_VBZ directed_VBN toward_IN MATH_NNP ,_, the_DT latter_JJ defined_VBD as_IN those_DT vertices_NNS in_IN MATH_NNP whose_WP$ shared_VBN edge_NN with_IN MATH_NNP is_VBZ directed_VBN away_RB from_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP with_IN MATH_NNP ,_, and_CC observe_VB that_IN MATH_NNP equals_VBZ the_DT projection_NN of_IN MATH_NNP onto_IN MATH_NNP whenever_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD equal_JJ area_NN equilateral_JJ triangles_NNS MATH_NNP containing_VBG MATH_NNP points_NNS ,_, respectively_RB ;_: see_VB REF_NNP ._.
Partition_VB MATH_NNP into_IN four_CD equal_JJ area_NN squares_NNS MATH_NNP which_WDT contain_VBP MATH_NNP points_NNS ,_, respectively_RB ;_: see_VB REF_NNP ._.
Partition_VB MATH_NNP respectively_RB into_IN positive_JJ and_CC negative_JJ sequences_NNS ,_, monotonically_RB decreasing_VBG in_IN magnitude_NN ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT chain_NN as_IN MATH_NNP ,_, where_WRB MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT region_NN MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN ``_`` components_NNS ''_'' as_IN follows_VBZ :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ;_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP consecutive_JJ blocks_NNS MATH_NNP ,_, MATH_NNP and_CC so_RB on_IN ._.
Partition_VB MATH_NNP into_IN boxes_NNS of_IN side_NN length_NN MATH_NNP and_CC denote_VB by_IN MATH_NNP the_DT collection_NN of_IN boxes_NNS ._.
Partition_VB of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP :_: MATH_NNP consists_VBZ of_IN all_DT boundary_JJ pixels_NNS of_IN MATH_NNP ,_, connected_VBN by_IN additional_JJ connections_NNS (_( ``_`` bridges_NNS ''_'' )_) ,_, such_JJ that_IN the_DT remainder_NN MATH_NNP is_VBZ connected_VBN and_CC with_IN vertical_JJ thickness_NN four_CD ._.
Partition_VB MATH_NNP in_IN REF_NNP as_IN MATH_NNP with_IN MATH_NNP upper_JJ triangular_NN MATH_NNP ._.
Partition_VB now_RB the_DT set_VBN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP of_IN size_NN as_IN equal_JJ as_IN possible_JJ ._.
Partition_VB all_DT nodes_NNS into_IN layers_NNS depending_VBG on_IN their_PRP$ distance_NN from_IN the_DT source_NN MATH_NNP ,_, that_DT is_VBZ ,_, layer_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN cells_NNS MATH_NNP and_CC let_VB MATH_NNP be_VB projection_NN onto_IN the_DT first_JJ MATH_NNP coordinates_NNS ._.
Partition_VB MATH_NNP into_IN cells_NNS MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP equal_JJ intervals_NNS MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP ,_, and_CC let_VB MATH_NNP denote_VB the_DT point_NN of_IN minimal_JJ absolute_JJ value_NN in_IN the_DT MATH_NNP interval_NN ._.
Partition_VB MATH_NNP into_IN four_CD sets_NNS CASE_NNP :_: MATH_NNP â€”_NNP tilable_JJ ,_, because_IN MATH_NNP ;_: CASE_NNP :_: MATH_NNP â€”_NNP tilable_JJ ,_, because_IN MATH_NNP is_VBZ tilable_JJ ;_: CASE_NNP :_: MATH_NNP â€”_NNP tilable_JJ by_IN REF_NNP ;_: CASE_NNP :_: MATH_NNP â€”_NNP tilable_JJ by_IN REF_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP (_( and_CC consequently_RB the_DT rows_NNS and_CC columns_NNS of_IN MATH_NNP )_) into_IN the_DT sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sections_NNS ,_, where_WRB each_DT section_NN contains_VBZ exactly_RB MATH_NNP clean_JJ clusters_NNS (_( the_DT last_JJ section_NN might_MD contain_VB fewer_JJR )_) ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS ,_, one_CD of_IN them_PRP MATH_NNP ,_, and_CC then_RB outsplit_JJ according_VBG to_IN this_DT partition_NN ._.
Partition_VB MATH_NNP as_IN into_IN two_CD sets_NNS ,_, one_CD which_WDT is_VBZ MATH_NNP ._.
Partition_VB the_DT outgoing_JJ edges_NNS of_IN MATH_NNP into_IN two_CD sets_NNS in_IN such_JJ a_DT way_NN that_IN each_DT partition_NN contains_VBZ at_IN least_RBS one_CD edges_VBZ to_IN each_DT vertex_NN MATH_NNP can_MD reach_VB ,_, and_CC at_RB least_RBS two_CD loops_NNS ._.
Partition_VB the_DT outgoing_JJ edges_NNS of_IN MATH_NNP into_IN two_CD sets_NNS in_IN such_JJ a_DT way_NN that_IN each_DT partition_NN contains_VBZ at_IN least_RBS one_CD edges_VBZ to_IN each_DT vertex_NN MATH_NNP can_MD reach_VB ,_, but_CC we_PRP also_RB insist_VBP that_IN one_CD partition_NN only_RB contains_VBZ two_CD loops_NNS ._.
Partition_VB MATH_NNP as_IN MATH_NNP and_CC build_VB the_DT following_JJ sequence_NN of_IN connected_JJ states_NNS MATH_NNP where_WRB MATH_NNP is_VBZ a_DT partition_NN of_IN MATH_NNP such_JJ that_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT desired_VBN state_NN vector_NN as_IN MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN 15_CD factors_NNS MATH_NNP each_DT of_IN length_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ MATH_NNP â€“_NNP cubes_VBZ MATH_NNP plus_CC an_DT additional_JJ ``_`` error_NN set_NN ''_'' with_IN measure_NN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN sets_NNS MATH_NNP based_VBN on_IN the_DT label_NN assigned_VBN by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT following_JJ sets_NNS ._.
Partition_VB the_DT nodes_NNS in_IN MATH_NNP into_IN MATH_NNP equivalence_NN classes_NNS according_VBG to_IN their_PRP$ depth_NN in_IN MATH_NNP modulo_FW MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT set_NN of_IN MATH_NNP permutations_NNS of_IN MATH_NNP into_IN MATH_NNP disjoint_NN classes_NNS MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB problem_NN instance_NN is_VBZ defined_VBN by_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB instance_NN ._.
Partition_VB to_IN an_DT instance_NN of_IN Frugal-bribery_NNP for_IN the_DT STV_NNP voting_NN rule_NN ._.
Partition_VB of_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP disjoint_NN sets_NNS of_IN the_DT form_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP cubes_NNS of_IN sidelength_NN MATH_NNP ,_, with_IN MATH_NNP chosen_NN to_TO be_VB the_DT smallest_JJS integer_NN such_JJ that_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP are_VBP as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN squares_NNS of_IN side_NN length_NN MATH_NNP ,_, such_JJ that_IN each_DT midpoint_NN of_IN MATH_NNP belongs_VBZ to_IN exactly_RB one_CD square_NN ;_: in_IN order_NN to_TO allow_VB the_DT squares_NNS to_TO completely_RB partition_VB MATH_NNP ,_, we_PRP let_VBP the_DT squares_NNS close_JJ to_IN the_DT boundary_NN of_IN MATH_NNP be_VB rectangles_NNS with_IN sides_NNS of_IN length_NN between_IN MATH_NNP and_CC MATH_NNP (_( for_IN simplicity_NN we_PRP will_MD continue_VB to_TO refer_VB to_IN them_PRP as_IN squares_NNS )_) ._.
Partition_VB MATH_NNP into_IN slabs_NNS of_IN width_JJ MATH_NNP ;_: that_DT is_VBZ ,_, each_DT such_JJ slab_NN is_VBZ a_DT translate_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT path_NN MATH_NNP consisting_NN of_IN the_DT MATH_NNP edges_VBZ closest_JJS to_IN MATH_NNP and_CC the_DT path_NN MATH_NNP consisting_NN of_IN the_DT MATH_NNP edges_VBZ closest_JJS to_IN MATH_NNP ._.
Partition_VB MATH_NNP with_IN respect_NN to_IN the_DT same_JJ decomposition_NN :_: MATH_NNP ._.
Partition_VB the_DT indices_NNS MATH_NNP into_IN two_CD sets_NNS ,_, MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS MATH_NNP into_IN two_CD classes_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP consist_NN of_IN the_DT components_NNS of_IN MATH_NNP in_IN which_WDT MATH_NNP takes_VBZ positive_JJ or_CC negative_JJ values_NNS ,_, respectively_RB ._.
Partition_VB MATH_NNP induces_VBZ a_DT GTD_NNP MATH_NNP of_IN MATH_NNP of_IN size_NN MATH_NNP ,_, a_DT GTD_NNP MATH_NNP of_IN MATH_NNP of_IN size_NN MATH_NNP and_CC a_DT GTD_NNP MATH_NNP of_IN MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP has_VBZ size_NN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN subintervals_NNS of_IN length_NN MATH_NNP if_IN MATH_NNP and_CC in_IN subintervals_NNS of_IN length_NN MATH_NNP if_IN MATH_NNP ._.
Partition_VB :_: Let_NNP MATH_NNP have_VB a_DT gray_JJ cycle_NN on_IN vertex_NN set_VBN MATH_NNP such_JJ that_IN MATH_NNP is_VBZ a_DT gray_JJ edge_NN ,_, where_WRB the_DT indices_NNS are_VBP taken_VBN modulo_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_NNS of_IN consecutive_JJ vertices_NNS MATH_NNP ,_, with_IN each_DT set_VBN MATH_NNP of_IN size_NN either_CC MATH_NNP or_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP consecutive_JJ parts_NNS ,_, MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN this_DT path_NN into_IN MATH_NNP consecutive_JJ sets_NNS MATH_NNP with_IN MATH_NNP ,_, constructed_VBD so_RB that_IN ,_, in_IN each_DT set_NN MATH_NNP ,_, neighbors_NNS of_IN MATH_NNP appear_VBP before_IN neighbors_NNS of_IN MATH_NNP as_IN follows_VBZ :_: We_PRP let_VBD neighbors_NNS of_IN MATH_NNP be_VB denoted_VBN with_IN MATH_NNP and_CC neighbors_NNS of_IN MATH_NNP be_VB denoted_VBN with_IN MATH_NNP in_IN this_DT construction_NN ._.
Partition_VB the_DT children_NNS of_IN MATH_NNP into_IN classes_NNS so_RB that_IN two_CD nodes_NNS MATH_NNP and_CC MATH_NNP are_VBP in_IN the_DT same_JJ class_NN if_IN and_CC only_RB if_IN MATH_NNP is_VBZ isomorphic_JJ to_IN MATH_NNP ._.
Partition_VB the_DT cube_NN into_IN MATH_NNP subcubes_NNS of_IN dimension_NN MATH_NNP ,_, based_VBN on_IN the_DT value_NN in_IN the_DT first_JJ dimension_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_NNS based_VBN on_IN the_DT last_JJ appearance_NN of_IN the_DT letter_NN MATH_NNP in_IN the_DT word_NN â€“_IN the_DT first_JJ set_NN MATH_NNP consists_VBZ of_IN words_NNS with_IN no_DT MATH_NNP ,_, the_DT second_JJ set_NN MATH_NNP consists_VBZ of_IN words_NNS ending_VBG with_IN MATH_NNP ,_, the_DT third_JJ MATH_NNP consists_VBZ of_IN words_NNS ending_VBG with_IN MATH_NNP followed_VBN by_IN another_DT letter_NN that_WDT is_VBZ not_RB MATH_NNP ,_, and_CC so_RB on_IN ,_, up_IN to_IN the_DT final_JJ set_NN MATH_NNP which_WDT consists_NNS of_IN words_NNS beginning_VBG with_IN a_DT MATH_NNP followed_VBD by_IN MATH_NNP other_JJ symbols_NNS which_WDT are_VBP not_RB MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD sets_NNS MATH_NNP as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB all_PDT the_DT MATH_NNP objects_VBZ into_IN two_CD disjoint_NN subsets_NNS :_: MATH_NNP and_CC MATH_NNP ._.
Partition_VB all_PDT the_DT MATH_NNP objects_VBZ into_IN three_CD disjoint_NN subsets_NNS :_: MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT removed_JJ region_NN to_IN MATH_NNP disjoint_NN rectangular_NN components_NNS ,_, starting_VBG from_IN the_DT winning_VBG square_JJ MATH_NNP and_CC going_VBG to_IN the_DT top-left_JJ and_CC to_IN the_DT bottom-right_JJ ,_, such_JJ that_IN each_DT component_NN is_VBZ located_VBN in_IN a_DT different_JJ corner_NN ._.
Partition_VB the_DT path_NN into_IN segments_NNS that_IN traverse_NN exactly_RB one_CD unit_NN in_IN the_DT vertical_JJ direction_NN ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN four_CD classes_NNS ,_, based_VBN on_IN which_WDT bipartition_NN the_DT vertex_NN from_IN MATH_NNP belongs_NNS to_IN ,_, and_CC which_WDT vertex_NN of_IN MATH_NNP is_VBZ used_VBN ._.
Partition_VB the_DT indices_NNS MATH_NNP into_IN sets_NNS MATH_NNP where_WRB MATH_NNP if_IN MATH_NNP and_CC MATH_NNP otherwise_RB ._.
Partition_VB MATH_NNP into_IN the_DT four_CD blocks_NNS :_: MATH_NNP ._.
Partition_VB the_DT set_NN of_IN all_DT NAME_NNP machines_NNS into_IN sets_NNS MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ all_DT NAME_NNP machines_NNS expressed_VBD in_IN at_IN least_JJS MATH_NNP but_CC fewer_JJR than_IN MATH_NNP bits_NNS ._.
Partition_VB the_DT set_NN of_IN women_NNS into_IN sets_NNS MATH_NNP for_IN MATH_NNP and_CC MATH_NNP and_CC for_IN MATH_NNP construct_NN MATH_NNP as_IN above_NN ._.
Partition_VB ,_, the_DT reduction_NN constructs_VBZ an_DT interval_JJ graph_NN MATH_NNP and_CC a_DT partial_JJ representation_NN MATH_NNP as_IN depicted_VBN in_IN REF_NNP ._.
Partition_VB is_VBZ solvable_JJ ._.
Partition_VB ,_, and_CC vice_NN versa_NN ._.
Partition_VB '_POS problem_NN ._.
Partition_VB '_POS problem_NN and_CC concluding_VBG the_DT proof_NN ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT smallest_JJS MATH_NNP for_IN which_WDT REF_NNP holds_VBZ (_( for_IN any_DT ordering_NN of_IN the_DT index_NN set_VBD )_) ._.
Partition_VB the_DT integral_JJ via_IN MATH_NNP where_WRB MATH_NNP is_VBZ defined_VBN in_IN REF_NNP ._.
Partition_VB elements_NNS from_IN MATH_NNP according_VBG to_IN how_WRB they_PRP intersect_VBP MATH_NNP ,_, for_IN each_DT MATH_NNP letting_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD consecutive_JJ intervals_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN sets_NNS MATH_NNP according_VBG to_IN representations_NNS :_: that_DT is_VBZ ,_, put_VBN MATH_NNP and_CC MATH_NNP in_IN the_DT same_JJ set_VBN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP in_IN such_JJ a_DT way_NN that_IN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP for_IN some_DT MATH_NNP ,_, taking_VBG MATH_NNP to_TO be_VB the_DT set_NN MATH_NNP ._.
Partition_VB MATH_NNP to_IN disjoint_NN subsets_NNS MATH_NNP so_RB that_IN two_CD curves_NNS are_VBP in_IN the_DT same_JJ subset_NN if_IN and_CC only_RB if_IN their_PRP$ endpoints_NNS are_VBP the_DT same_JJ ._.
Partition_VB the_DT lattice_NN into_IN blocks_NNS of_IN width_JJ MATH_NNP ._.
Partition_VB the_DT lattice_NN into_IN blocks_NNS of_IN width_NN MATH_NNP ,_, aligned_VBD with_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN the_DT expensive_JJ paths_NNS from_IN MATH_NNP ,_, whereas_NN for_IN MATH_NNP we_PRP define_VBP MATH_NNP to_TO be_VB the_DT set_NN of_IN cheap_JJ paths_NNS from_IN MATH_NNP whose_WP$ internal_JJ vertices_NNS are_VBP contained_VBN in_IN MATH_NNP ._.
Partition_VB this_DT probability_NN space_NN into_IN disjoint_NN events_NNS MATH_NNP ,_, in_IN which_WDT MATH_NNP is_VBZ the_DT event_NN that_IN all_DT events_NNS MATH_NNP with_IN MATH_NNP do_VBP not_RB happen_VB ,_, and_CC MATH_NNP happens_VBZ ._.
Partition_VB MATH_NNP disjointly_RB into_IN two_CD sets_NNS as_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN descending_VBG ``_`` levels_NNS ''_'' from_IN MATH_NNP to_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP as_IN above_IN and_CC abbreviate_JJ MATH_NNP ,_, so_IN that_IN the_DT expectation_NN on_IN the_DT last_JJ line_NN of_IN the_DT previous_JJ display_NN can_MD be_VB written_VBN as_IN MATH_NNP ._.
Partition_VB problem_NN ;_: that_DT is_VBZ ,_, we_PRP are_VBP given_VBN a_DT non-empty_JJ finite_JJ set_NN MATH_NNP of_IN distinct_JJ positive_JJ integers_NNS ,_, and_CC a_DT positive_JJ integer_NN MATH_NNP such_JJ that_IN MATH_NNP ,_, and_CC MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB problem_NN is_VBZ NP-complete_NNP in_IN the_DT strong_JJ sense_NN ,_, without_IN loss_NN of_IN generality_NN we_PRP can_MD assume_VB that_IN MATH_NNP is_VBZ bounded_VBN above_IN by_IN a_DT polynomial_NN in_IN MATH_NNP ._.
Partition_VB problem_NN to_IN the_DT Graph_NNP Burning_NNP problem_NN for_IN trees_NNS with_IN maximum_JJ degree_JJ MATH_NNP ._.
Partition_VB problem_NN into_IN the_DT burning_NN problem_NN ,_, in_IN which_WDT the_DT gadget_NN graph_NN that_IN we_PRP construct_VBP is_VBZ a_DT spider_NN graph_NN ._.
Partition_VB problem_NN ,_, that_DT is_VBZ ,_, a_DT set_NN MATH_NNP of_IN positive_JJ distinct_JJ integers_NNS and_CC a_DT positive_JJ integer_NN MATH_NNP such_JJ that_IN each_DT MATH_NNP ,_, we_PRP construct_VBP a_DT graph_NN MATH_NNP as_IN follows_VBZ ._.
Partition_VB problem_NN is_VBZ strongly_RB NP-complete_JJ (_( as_IN in_IN the_DT proof_NN of_IN REF_NNP )_) ,_, without_IN loss_NN of_IN generality_NN we_PRP assume_VBP that_IN MATH_NNP is_VBZ bounded_VBN above_IN by_IN a_DT polynomial_JJ in_IN terms_NNS of_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP according_VBG to_IN their_PRP$ underlying_JJ unitrivalent_JJ diagrams_NNS ._.
Partition_VB the_DT pairs_NN into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB the_DT first_JJ set_NN contains_VBZ all_DT of_IN the_DT positive_JJ pairs_NN ,_, and_CC the_DT second_JJ set_NN contains_VBZ all_DT of_IN the_DT negative_JJ pairs_NN ._.
Partition_VB MATH_NNP to_IN MATH_NNP subgrids_NNS (_( or_CC subcubes_VBP )_) ._.
Partition_VB MATH_NNP (_( respectively_RB MATH_NNP )_) into_IN subsets_NNS MATH_NNP of_IN size_NN at_IN least_JJS MATH_NNP (_( respectively_RB ,_, subsets_NNS MATH_NNP of_IN size_NN at_IN least_JJS MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN a_DT grid_NN of_IN boxes_NNS which_WDT is_VBZ MATH_NNP regular_JJ ,_, meaning_NN that_IN side_NN lengths_NNS are_VBP all_DT equal_JJ to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT MATH_NNP regular_JJ grid_NN MATH_NNP with_IN MATH_NNP as_IN the_DT origin_NN ._.
Partition_VB the_DT last_JJ MATH_NNP rows_VBZ into_IN MATH_NNP sets_VBZ MATH_NNP ,_, with_IN MATH_NNP containing_VBG MATH_NNP rows_NNS ._.
Partition_VB MATH_NNP by_IN vertical_JJ lines_NNS ,_, into_IN MATH_NNP point_NN sets_NNS ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT triangles_NNS in_IN MATH_NNP into_IN MATH_NNP pairs_NNS of_IN consecutive_JJ triangles_NNS ._.
Partition_VB this_DT into_IN the_DT sum_NN of_IN those_DT elements_NNS that_WDT contain_VBP MATH_NNP and_CC those_DT that_DT do_VBP not_RB ,_, then_RB MATH_NNP taking_VBG care_NN with_IN the_DT signs_NNS ,_, and_CC as_IN required_VBN ._.
Partition_VB MATH_NNP into_IN blocks_NNS as_IN we_PRP did_VBD in_IN REF_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD new_JJ component_NN boxes_NNS MATH_NNP with_IN the_DT far_RB faces_NNS are_VBP labelled_VBN by_IN MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN sets_NNS of_IN size_NN MATH_NNP (_( this_DT is_VBZ possible_JJ since_IN MATH_NNP )_) arbitrarily_RB and_CC let_VB MATH_NNP be_VB an_DT edge_NN preserving_VBG MATH_NNP grouping_NN of_IN MATH_NNP with_IN respect_NN to_IN this_DT partition_NN ._.
Partition_VB MATH_NNP into_IN infinitely_RB many_JJ sets_NNS MATH_NNP in_IN such_JJ a_DT way_NN that_IN if_IN MATH_NNP is_VBZ an_DT increasing_VBG enumeration_NN of_IN MATH_NNP then_RB MATH_NNP is_VBZ an_DT increasing_VBG sequence_NN ,_, for_IN every_DT MATH_NNP ._.
Partition_VB the_DT indices_NNS of_IN all_PDT the_DT variables_NNS as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN sets_NNS MATH_NNP of_IN size_NN MATH_NNP and_CC greedily_RB assign_VB each_DT MATH_NNP to_IN a_DT unique_JJ member_NN MATH_NNP of_IN MATH_NNP which_WDT is_VBZ an_DT absorbing_VBG set_NN for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN pairs_JJ MATH_NNP for_IN each_DT MATH_NNP odd_JJ ,_, MATH_NNP ,_, leaving_VBG MATH_NNP as_IN a_DT singleton_NN if_IN MATH_NNP is_VBZ odd_JJ ._.
Partition_VB MATH_NNP into_IN clusters_NNS by_IN extracting_VBG from_IN MATH_NNP an_DT arbitrary_JJ net_NN MATH_NNP with_IN minimum_JJ inter-point_JJ distance_NN MATH_NNP ,_, and_CC assigning_VBG each_DT point_NN MATH_NNP to_IN a_DT cluster_NN centered_VBD at_IN the_DT nearest_JJS neighbor_NN of_IN MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS MATH_NNP and_CC partition_NN MATH_NNP into_IN MATH_NNP blocks_NNS as_IN MATH_NNP ._.
Partition_VB the_DT non_NN self-dual_JJ objects_VBZ into_IN ordered_JJ pairs_NNS MATH_NNP ._.
Partition_VB the_DT rows_NNS of_IN MATH_NNP ,_, to_IN form_NN MATH_NNP blocks_NNS ._.
Partition_VB MATH_NNP as_IN follows_VBZ :_: MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT subset_NN of_IN normal_JJ vertices_NNS ,_, and_CC MATH_NNP the_DT subset_NN of_IN exceptional_JJ vertices_NNS ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN MATH_NNP subsets_NNS MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN two_CD subsets_NNS :_: MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN of_IN vertices_NNS MATH_NNP into_IN parity_NN sets_NNS MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT points_NNS in_IN MATH_NNP according_VBG to_IN their_PRP$ parities_NNS ._.
Partition_VB the_DT plane_NN into_IN MATH_NNP vertical_JJ slabs_NNS ,_, such_JJ that_IN MATH_NNP vertical_JJ lines_NNS of_IN MATH_NNP lie_NN in_IN each_DT slab_NN ,_, that_DT is_VBZ ,_, each_DT slab_NN has_VBZ a_DT width_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP corresponding_VBG to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN subsets_NNS MATH_NNP so_IN that_DT MATH_NNP for_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB this_DT set_NN into_IN a_DT finite_JJ collection_NN MATH_NNP of_IN disjoint_NN subset_NN of_IN hyperplanes_NNS according_VBG to_IN the_DT previous_JJ lemma_NN ._.
Partition_VB the_DT hyperbolic_JJ disc_NN into_IN MATH_NNP disjoint_NN sectors_NNS of_IN equal_JJ angle_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP (_( ordered_VBD from_IN left_JJ to_IN right_JJ )_) of_IN equal_JJ length_NN and_CC such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP according_VBG to_IN the_DT digits_NNS MATH_NNP ._.
Partition_VB MATH_NNP by_IN choosing_VBG for_IN some_DT parameters_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD parts_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT MATH_NNP blocks_NNS of_IN size_NN three_CD ,_, MATH_NNP contains_VBZ MATH_NNP blocks_NNS of_IN size_NN two_CD including_VBG MATH_NNP specifically_RB ,_, and_CC MATH_NNP contains_VBZ the_DT remaining_VBG MATH_NNP blocks_NNS of_IN size_NN two_CD ._.
Partition_VB the_DT set_NN of_IN spanning_VBG 2-trees_NNS such_JJ that_IN MATH_NNP into_IN two_CD classes_NNS :_: those_DT such_JJ that_IN MATH_NNP has_VBZ 2_CD components_NNS and_CC MATH_NNP is_VBZ connected_VBN for_IN all_DT MATH_NNP (_( call_VB this_DT class_NN MATH_NNP )_) ,_, and_CC those_DT for_IN which_WDT MATH_NNP or_CC some_DT MATH_NNP has_VBZ strictly_RB more_JJR components_NNS (_( MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP infinite_JJ subsets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT subspace_NN of_IN MATH_NNP consisting_VBG of_IN vectors_NNS that_WDT have_VBP entries_NNS zero_CD outside_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD non-null_JJ sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP by_IN taking_VBG MATH_NNP so_IN that_IN MATH_NNP on_IN MATH_NNP ._.
Partition_VB MATH_NNP simultaneously_RB for_IN MATH_NNP and_CC MATH_NNP ,_, choosing_VBG MATH_NNP so_IN that_DT for_IN each_DT MATH_NNP there_EX are_VBP indices_NNS MATH_NNP ,_, MATH_NNP such_JJ that_IN on_IN MATH_NNP we_PRP have_VBP MATH_NNP ._.
Partition_VB the_DT ground_NN set_VBD into_IN sets_NNS of_IN size_NN MATH_NNP uniformly_RB at_IN random_NN ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_IN in_IN the_DT statement_NN of_IN REF_NNP ,_, with_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN the_DT MATH_NNP intervals_NNS MATH_NNP for_IN MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT center_NN of_IN interval_JJ MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN sets_NNS MATH_NNP and_CC MATH_NNP with_IN MATH_NNP ,_, and_CC expose_VB first_RB the_DT edges_NNS of_IN MATH_NNP contained_VBD in_IN a_DT subset_JJ MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB the_DT sites_NNS of_IN MATH_NNP into_IN generations_NNS MATH_NNP ,_, defined_VBD as_IN follows_VBZ ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS of_IN size_NN MATH_NNP ,_, which_WDT we_PRP call_VBP MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP purported_VBD edges_NNS into_IN MATH_NNP nonempty_JJ groups_NNS MATH_NNP such_JJ that_IN each_DT group_NN can_MD be_VB covered_VBN by_IN a_DT single_JJ canonical_JJ copy_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP buckets_NNS MATH_NNP (_( MATH_NNP )_) ,_, such_JJ that_IN MATH_NNP contains_VBZ MATH_NNP such_JJ that_IN MATH_NNP ,_, and_CC for_IN MATH_NNP ,_, MATH_NNP contains_VBZ MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP purported_VBD edges_NNS into_IN MATH_NNP nonempty_JJ groups_NNS MATH_NNP such_JJ that_IN each_DT group_NN can_MD be_VB covered_VBN by_IN a_DT single_JJ canonical_JJ cycle_NN ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP this_DT is_VBZ ,_, MATH_NNP if_IN and_CC only_RB if_IN the_DT unique_JJ MATH_NNP such_JJ that_IN MATH_NNP has_VBZ the_DT same_JJ parity_NN as_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN MATH_NNP sets_VBZ MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT collection_NN of_IN odd_JJ subsets_NNS of_IN MATH_NNP into_IN two_CD blocks_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT odd_JJ subsets_NNS of_IN MATH_NNP containing_VBG MATH_NNP ._.
Partition_VB the_DT unit_NN interval_NN as_IN MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB the_DT index_NN set_VBD MATH_NNP into_IN MATH_NNP ,_, where_WRB each_DT MATH_NNP is_VBZ of_IN size_NN MATH_NNP except_IN for_IN the_DT last_JJ one_CD MATH_NNP ,_, which_WDT has_VBZ cardinality_NN no_RB bigger_JJR than_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN arcs_JJ MATH_NNP with_IN disjoint_NN interiors_NNS such_JJ that_IN MATH_NNP is_VBZ adjacent_JJ to_IN MATH_NNP for_IN each_DT MATH_NNP ,_, and_CC each_DT MATH_NNP is_VBZ either_CC an_DT edge_NN of_IN or_CC (_( the_DT generic_JJ case_NN )_) properly_RB embedded_VBN in_IN a_DT triangle_NN of_IN MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP is_VBZ a_DT clique_NN and_CC MATH_NNP is_VBZ a_DT stable_JJ set_NN ._.
Partition_VB MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP as_IN follows_VBZ and_CC let_VB MATH_NNP :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT edge_NN set_NN of_IN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP is_VBZ the_DT edge_NN set_NN of_IN MATH_NNP ,_, MATH_NNP is_VBZ the_DT edge_NN set_NN of_IN MATH_NNP and_CC MATH_NNP is_VBZ the_DT set_NN of_IN edges_NNS in_IN MATH_NNP with_IN one_CD endpoint_NN in_IN MATH_NNP and_CC the_DT other_JJ in_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN graphs_NNS in_IN REF_NNP MATH_NNP into_IN four_CD classes_NNS :_: REF_NNP those_DT MATH_NNP with_IN MATH_NNP ,_, REF_NNP those_DT MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ,_, REF_NNP those_DT MATH_NNP with_IN MATH_NNP and_CC MATH_NNP and_CC REF_NNP those_DT MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD MATH_NNP into_IN MATH_NNP disjoint_NN sets_NNS of_IN size_NN at_IN most_JJS MATH_NNP each_DT ._.
Partition_VB MATH_NNP uniformly_RB into_IN MATH_NNP submatrices_NNS of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN classes_NNS MATH_NNP and_CC consider_VB the_DT map_NN MATH_NNP whose_WP$ restriction_NN to_IN each_DT MATH_NNP is_VBZ given_VBN by_IN encryption_NN using_VBG key_JJ MATH_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN classes_NNS MATH_NNP with_IN MATH_NNP for_IN each_DT MATH_NNP and_CC each_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD multiple-valued_JJ functions_NNS by_IN :_: MATH_NNP ._.
Partition_VB the_DT race_NN into_IN MATH_NNP time_NN subintervals_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ sets_NNS MATH_NNP ._.
Partition_VB the_DT random_JJ matrix_NN MATH_NNP into_IN blocks_NNS as_IN MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ the_DT left-most_RBS MATH_NNP columns_NNS ,_, and_CC MATH_NNP contains_VBZ the_DT remaining_VBG MATH_NNP columns_NNS ._.
Partition_VB the_DT random_JJ matrix_NN MATH_NNP into_IN blocks_NNS as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB the_DT first_JJ MATH_NNP columns_NNS of_IN MATH_NNP into_IN MATH_NNP blocks_NNS of_IN size_NN MATH_NNP ,_, and_CC denote_VB the_DT resulting_VBG submatrices_NNS by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN for_IN each_DT MATH_NNP we_PRP have_VBP MATH_NNP or_CC (_( MATH_NNP and_CC MATH_NNP )_) ._.
Partition_VB the_DT people_NNS into_IN two_CD groups_NNS MATH_NNP and_CC MATH_NNP based_VBN on_IN what_WP they_PRP wrote_VBD ._.
Partition_VB MATH_NNP uniformly_RB at_IN random_NN into_IN subsets_NNS MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP is_VBZ in_IN MATH_NNP if_IN the_DT number_NN of_IN triangles_NNS in_IN MATH_NNP containing_VBG MATH_NNP is_VBZ at_RB least_JJS MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP in_IN a_DT similar_JJ way_NN ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP of_IN (_( roughly_RB )_) equal_JJ cardinality_NN ,_, and_CC compute_NN recursively_RB MATH_NNP and_CC MATH_NNP ._.
Partition_VB ,_, in_IN MATH_NNP time_NN ,_, the_DT elements_NNS of_IN MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, such_JJ that_IN MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD (_( roughly_RB )_) equally_RB sized_JJ sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN 17_CD factors_NNS MATH_NNP each_DT of_IN length_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT square_NN of_IN MATH_NNP into_IN MATH_NNP interior-disjoint_JJ squares_NNS of_IN size_NN MATH_NNP ,_, and_CC denote_VB the_DT set_NN of_IN these_DT squares_NNS as_IN MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN a_DT set_NN of_IN MATH_NNP vertices_NNS MATH_NNP and_CC a_DT set_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ a_DT large_JJ ball_NN that_IN captures_NNS essentially_RB all_DT of_IN the_DT MATH_NNP norm_NN of_IN MATH_NNP ._.
Partition_VB the_DT non-null_JJ edges_VBZ incident_NN to_IN MATH_NNP according_VBG to_IN which_WDT direction_NN they_PRP map_VBP to_IN from_IN MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP ,_, then_RB it_PRP follows_VBZ from_IN REF_NNP that_IN MATH_NNP ._.
Partition_VB the_DT shortest_JJS path_NN MATH_NNP into_IN intervals_NNS of_IN length_NN precisely_RB MATH_NNP ,_, with_IN at_IN most_RBS one_CD shorter_JJR interval_NN ._.
Partition_VB the_DT MATH_NNP based_VBN on_IN whether_IN their_PRP$ hop_NN count_NN is_VBZ at_IN most_RBS MATH_NNP or_CC at_IN least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN subsets_NNS MATH_NNP and_CC without_IN loss_NN of_IN generality_NN ,_, orientate_VBP each_DT edge_NN MATH_NNP ,_, MATH_NNP ,_, MATH_NNP to_TO be_VB the_DT arc_NN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN leaves_NNS of_IN MATH_NNP into_IN 2_CD subsets_NNS MATH_NNP ,_, such_JJ MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP equal_JJ subsets_NNS and_CC extend_VB MATH_NNP to_IN a_DT coloring_VBG MATH_NNP of_IN MATH_NNP ,_, by_IN assigning_VBG a_DT distinct_JJ color_NN to_IN each_DT of_IN these_DT subsets_NNS ._.
Partition_VB the_DT variables_NNS MATH_NNP into_IN two_CD groups_NNS :_: MATH_NNP and_CC MATH_NNP ,_, we_PRP can_MD see_VB that_IN each_DT of_IN the_DT first_JJ MATH_NNP equations_NNS in_IN REF_NNP has_VBZ degree_VBN MATH_NNP in_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN maximal_JJ subpaths_NNS MATH_NNP such_JJ that_IN MATH_NNP is_VBZ either_CC REF_NNP contained_VBD in_IN a_DT single_JJ affected_JJ subtree_NN ,_, or_CC REF_NNP contained_VBD in_IN MATH_NNP for_IN some_DT unaffected_JJ MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN MATH_NNP classes_NNS where_WRB class_NN MATH_NNP contains_VBZ those_DT vertices_NNS for_IN which_WDT MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN vertices_NNS that_DT appear_NN in_IN tail_NN sets_NNS of_IN edges_NNS but_CC never_RB appear_VBP as_IN the_DT head_NN of_IN any_DT edge_NN ,_, MATH_NNP is_VBZ the_DT set_NN of_IN vertices_NNS that_WDT do_VBP not_RB belong_VB to_IN any_DT tail_NN set_NN ,_, and_CC MATH_NNP is_VBZ the_DT set_NN that_DT appear_NN as_IN both_DT heads_NNS and_CC tails_NNS ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT value_NN of_IN MATH_NNP :_: strings_NNS MATH_NNP and_CC MATH_NNP are_VBP in_IN the_DT same_JJ set_NN of_IN the_DT partition_NN if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT set_NN of_IN points_NNS MATH_NNP in_IN MATH_NNP pieces_NNS MATH_NNP (_( say_VBP ,_, by_IN partitioning_VBG MATH_NNP )_) ,_, whose_WP$ size_NN differs_NNS by_IN at_IN most_JJS an_DT absolute_JJ constant_JJ factor_NN ,_, and_CC such_JJ that_IN each_DT MATH_NNP ._.
Partition_VB the_DT MATH_NNP s_VBZ that_IN occur_NN between_IN MATH_NNP and_CC MATH_NNP into_IN two_CD sets_NNS ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP such_JJ that_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN smaller_JJR curves_NNS MATH_NNP such_JJ that_IN for_IN all_DT MATH_NNP ,_, MATH_NNP is_VBZ a_DT maximal_JJ curve_NN contained_VBD in_IN MATH_NNP that_IN does_VBZ not_RB intersect_VB the_DT interior_NN of_IN a_DT face_NN with_IN more_JJR than_IN MATH_NNP edges_NNS ._.
Partition_VB MATH_NNP into_IN four_CD subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN MATH_NNP ,_, with_IN ties_NNS broken_VBN arbitrarily_RB ._.
Partition_VB counterclockwise_NN MATH_NNP around_RB MATH_NNP as_IN described_NN in_IN REF_NNP MATH_NNP obtaining_VBG the_DT sets_NNS MATH_NNP and_CC the_DT point_NN MATH_NNP ._.
Partition_VB this_DT arc_NN into_IN small_JJ arcs_NN of_IN length_NN MATH_NNP :_: there_EX are_VBP MATH_NNP small_JJ arcs_NN ,_, and_CC each_DT contains_VBZ at_IN most_RBS MATH_NNP lattice_NN points_NNS ._.
Partition_VB this_DT space_NN into_IN MATH_NNP equal_JJ size_NN polyhedral_JJ cones_NNS MATH_NNP that_IN have_VBP their_PRP$ common_JJ apex_NN at_IN the_DT origin_NN ._.
Partition_VB time_NN into_IN MATH_NNP time_NN intervals_NNS ,_, with_IN MATH_NNP pieces_NNS each_DT ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ,_, with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT sequence_NN of_IN instructions_NNS into_IN regions_NNS that_IN contain_JJ memory_NN reads_VBZ to_IN exactly_RB MATH_NNP distinct_JJ memory_NN blocks_NNS each_DT (_( except_IN perhaps_RB the_DT last_JJ )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP clusters_NNS such_JJ that_IN any_DT two_CD lines_NNS in_IN the_DT same_JJ cluster_NN forms_NNS an_DT angle_NN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP to_IN disjoint_NN subsets_NNS MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP (_( this_DT can_MD be_VB done_VBN by_IN choosing_VBG for_IN each_DT vertex_NN in_IN MATH_NNP an_DT arbitrary_JJ neighbor_NN in_IN MATH_NNP )_) ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN MATH_NNP equal_JJ parts_NNS of_IN size_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ size_NN parts_NNS MATH_NNP ._.
Partition_VB the_DT space-time_JJ grid_NN into_IN slabs_NNS MATH_NNP of_IN ``_`` width_JJ ''_'' MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sub-grids_NNS of_IN size_NN MATH_NNP each_DT ,_, and_CC denote_VB these_DT sub-grids_NNS by_IN MATH_NNP (_( the_DT ordering_NN is_VBZ arbitrary_JJ )_) ._.
Partition_VB the_DT rows_NNS and_CC the_DT columns_NNS according_VBG to_IN the_DT sum_NN of_IN its_PRP$ entries_NNS ._.
Partition_VB the_DT domain_NN MATH_NNP into_IN two_CD sets_NNS :_: MATH_NNP ._.
Partition_VB the_DT bag_NN MATH_NNP into_IN sets_NNS MATH_NNP where_WRB MATH_NNP consists_VBZ of_IN tuples_NNS MATH_NNP where_WRB MATH_NNP ,_, and_CC MATH_NNP consists_NNS of_IN those_DT where_WRB MATH_NNP ._.
Partition_VB all_DT edges_NNS MATH_NNP into_IN two_CD disjoint_NN sets_NNS MATH_NNP and_CC MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB the_DT interior_NN of_IN MATH_NNP into_IN three_CD regions_NNS (_( call_VBP them_PRP MATH_NNP ,_, MATH_NNP and_CC MATH_NNP left_VBD to_IN right_JJ )_) with_IN two_CD lines_NNS of_IN slope_NN one_CD passing_VBG through_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP which_WDT are_VBP easily_RB verified_VBN to_TO be_VB NAME_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN adjacent_JJ finite_JJ intervals_NNS MATH_NNP ,_, with_IN MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB the_DT points_NNS of_IN each_DT MATH_NNP into_IN MATH_NNP parts_NNS using_VBG the_DT alternating_VBG method_NN proposed_VBD in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN REF_NNP is_VBZ performed_VBN if_IN MATH_NNP ;_: and_CC execute_VB REF_NNP otherwise_RB ._.
Partition_VB the_DT positive_JJ roots_NNS into_IN the_DT two_CD sets_NNS MATH_NNP and_CC compute_NN using_VBG linearity_NN that_IN MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP is_VBZ nonsingular_JJ if_IN MATH_NNP is_VBZ not_RB an_DT eigenvalue_NN of_IN MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP for_IN MATH_NNP ,_, such_JJ that_IN MATH_NNP is_VBZ the_DT subset_NN of_IN strings_NNS in_IN MATH_NNP which_WDT agrees_VBZ with_IN MATH_NNP on_IN the_DT first_JJ MATH_NNP bits_NNS ,_, but_CC disagrees_VBZ on_IN bit_NN MATH_NNP ._.
Partition_VB each_DT color_NN class_NN MATH_NNP into_IN ordered_JJ pairs_NNS arbitrarily_RB ,_, and_CC denote_VB the_DT collection_NN of_IN pairs_NNS by_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN a_DT set_NN MATH_NNP of_IN MATH_NNP knots_NNS MATH_NNP having_VBG MATH_NNP and_CC a_DT set_NN MATH_NNP of_IN the_DT remaining_VBG knots_NNS MATH_NNP with_IN MATH_NNP and_CC the_DT knots_NNS with_IN MATH_NNP ._.
Partition_VB the_DT annulus_NN MATH_NNP into_IN a_DT finite_JJ collection_NN of_IN unit_NN cubes_NNS ._.
Partition_VB REF_NNP and_CC the_DT multiplicity_NN of_IN the_DT eigenvalues_NNS are_VBP consequences_NNS of_IN REF_NNP ._.
Partition_VB the_DT rows_NNS of_IN MATH_NNP into_IN 3_CD parts_NNS :_: Let_NNP MATH_NNP and_CC MATH_NNP be_VB rows_NNS with_IN one_CD ,_, two_CD and_CC three_CD nonzero_JJ entries_NNS in_IN columns_NNS of_IN MATH_NNP respectively_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP infinite_JJ sets_NNS MATH_NNP each_DT of_IN density_NN MATH_NNP (_( for_IN instance_NN ,_, partition_NN based_VBN on_IN residues_NNS modulo_FW MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, each_DT of_IN density_NN MATH_NNP (_( for_IN instance_NN partition_NN based_VBN on_IN residues_NNS mod_FW MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN fast_RB growing_VBG intervals_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN fast_RB growing_VBG intervals_NNS MATH_NNP and_CC for_IN each_DT MATH_NNP and_CC MATH_NNP let_VBD MATH_NNP be_VB the_DT union_NN of_IN all_DT MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT sequence_NN MATH_NNP of_IN fast-growing_JJ intervals_NNS such_JJ that_IN MATH_NNP and_CC moreover_VB the_DT local_JJ density_NN of_IN MATH_NNP is_VBZ at_RB least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ any_DT permutation_NN MATH_NNP in_IN MATH_NNP that_DT has_VBZ the_DT edge_NN MATH_NNP in_IN the_DT subgraph_NN induced_VBD by_IN the_DT edges_NNS in_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN each_DT MATH_NNP has_VBZ size_NN at_IN least_JJS MATH_NNP and_CC MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN further_JJ successive_JJ sets_NNS MATH_NNP with_IN MATH_NNP and_CC define_VB MATH_NNP for_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT natural_JJ numbers_NNS into_IN infinitely_RB many_JJ infinite_JJ sets_NNS MATH_NNP so_IN that_IN MATH_NNP is_VBZ unbounded_JJ for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS as_IN follows_VBZ ._.
Partition_VB the_DT elements_NNS of_IN MATH_NNP into_IN blocks_NNS of_IN length_NN MATH_NNP :_: MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, backwards_NNS instead_RB of_IN forwards_NNS :_: MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP for_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT index_NN set_VBD to_IN a_DT countable_JJ collection_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, and_CC apply_VB REF_NNP to_IN the_DT last_JJ two_CD sets_NNS to_TO obtain_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS of_IN equal_JJ width_NN ._.
Partition_VB the_DT string_NN MATH_NNP into_IN extended_VBN domains_NNS as_IN follows_VBZ :_: take_VB the_DT string_NN MATH_NNP such_JJ that_IN MATH_NNP and_CC partition_NN MATH_NNP recursively_RB to_IN get_VB MATH_NNP ._.
Partition_VB all_DT remaining_VBG values_NNS into_IN MATH_NNP intervals_NNS MATH_NNP ._.
Partition_VB the_DT generating_NN set_VBD MATH_NNP into_IN two_CD symmetric_JJ sets_NNS MATH_NNP and_CC MATH_NNP so_RB that_IN MATH_NNP and_CC MATH_NNP generate_VBP two_CD isomorphic_JJ copies_NNS MATH_NNP and_CC MATH_NNP of_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP using_VBG the_DT partition_NN of_IN MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB the_DT elements_NNS in_IN MATH_NNP not_RB covered_VBD by_IN any_DT set_NN in_IN MATH_NNP into_IN disjoint_NN sets_NNS of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP such_JJ that_IN MATH_NNP is_VBZ the_DT set_NN of_IN all_DT vertices_NNS MATH_NNP satisfying_VBG MATH_NNP ._.
Partition_VB MATH_NNP further_RB into_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN all_DT vertices_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB this_DT equation_NN as_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP and_CC the_DT vectors_NNS marked_VBD MATH_NNP are_VBP not_RB of_IN immediate_JJ interest_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP cubes_NNS MATH_NNP which_WDT are_VBP essentially_RB disjoint_NN ._.
Partition_VB the_DT edge_NN set_NN of_IN MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN half-open_JJ intervals_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS of_IN length_NN MATH_NNP ._.
Partition_VB the_DT interval_NN into_IN MATH_NNP blocks_NNS of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP as_IN for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP buckets_NNS of_IN size_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN intervals_NNS MATH_NNP so_IN that_DT MATH_NNP for_IN some_DT MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT remaining_VBG intervals_NNS ._.
Partition_VB the_DT natural_JJ numbers_NNS two_CD sets_NNS MATH_NNP and_CC MATH_NNP by_IN the_DT rule_NN that_IN MATH_NNP if_IN MATH_NNP is_VBZ in_IN either_DT MATH_NNP or_CC MATH_NNP ,_, and_CC MATH_NNP if_IN MATH_NNP is_VBZ contained_VBN in_IN a_DT bounded_JJ component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD disjoint_NN sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_IN in_IN the_DT proof_NN of_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB this_DT matrix_NN into_IN four_CD block_NN submatrices_NNS of_IN size_NN MATH_NNP ,_, and_CC consider_VBP the_DT 21-submatrix_CD of_IN MATH_NNP ,_, that_DT is_VBZ ,_, the_DT MATH_NNP component_NN in_IN the_DT MATH_NNP array_NN of_IN the_DT four_CD blocks_NNS ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, where_WRB every_DT MATH_NNP is_VBZ a_DT copy_NN of_IN MATH_NNP and_CC every_DT MATH_NNP is_VBZ a_DT copy_NN of_IN a_DT member_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ;_: the_DT first_JJ of_IN these_DT sets_NNS can_MD be_VB partitioned_VBN into_IN copies_NNS of_IN MATH_NNP ,_, and_CC the_DT second_JJ â€“_NNP into_IN copies_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD sets_NNS MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP of_IN MATH_NNP and_CC MATH_NNP characters_NNS ,_, respectively_RB ._.
Partition_VB the_DT time_NN during_IN which_WDT MATH_NNP is_VBZ open_JJ into_IN intervals_NNS of_IN length_NN MATH_NNP by_IN defining_VBG MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS of_IN size_NN MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB an_DT array_NN of_IN size_NN MATH_NNP in_IN which_WDT MATH_NNP is_VBZ the_DT minimum_JJ element_NN in_IN the_DT MATH_NNP block_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP is_VBZ those_DT MATH_NNP so_RB that_IN ,_, for_IN every_DT MATH_NNP and_CC MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP in_IN the_DT middle_NN of_IN its_PRP$ longer_JJR side_NN ._.
Partition_VB the_DT cube_NN MATH_NNP to_IN a_DT grid_NN of_IN MATH_NNP sub-cubes_NNS ,_, MATH_NNP ,_, each_DT of_IN side-length_JJ MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP in_IN two_CD parts_NNS ._.
Partition_VB is_VBZ first_JJ called_VBN with_IN arguments_NNS MATH_NNP (_( line_NN REF_NNP )_) ._.
Partition_VB in_IN line_NN REF_NNP the_DT argument_NN MATH_NNP is_VBZ a_DT canonical_JJ q-partition_NN since_IN the_DT passed_VBN argument_NN MATH_NNP must_MD be_VB a_DT canonical_JJ q-partition_NN due_JJ to_IN the_DT soundness_NN of_IN MATH_NNP sucs_NN REF_NNP ._.
Partition_VB in_IN line_NN REF_NNP ._.
Partition_VB being_VBG called_VBN infinitely_RB often_RB ._.
Partition_VB where_WRB this_DT return_NN happens_VBZ be_VB denoted_VBN by_IN MATH_NNP )_) ._.
Partition_VB (_( by_IN the_DT argumentation_NN above_IN )_) ._.
Partition_VB which_WDT was_VBD invoked_VBN in_IN line_NN REF_NNP ._.
Partition_VB must_MD at_IN some_DT point_NN have_VBP executed_VBN line_NN REF_NNP ._.
Partition_VB (_( see_VBP line_NN REF_NNP )_) ._.
Partition_VB MATH_NNP into_IN cubes_NNS MATH_NNP from_IN MATH_NNP ._.
Partition_VB MATH_NNP at_IN random_NN into_IN MATH_NNP parts_NNS MATH_NNP by_IN putting_VBG every_DT vertex_NN MATH_NNP into_IN MATH_NNP ,_, MATH_NNP ,_, independently_RB and_CC with_IN probability_NN MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN MATH_NNP parts_NNS where_WRB the_DT MATH_NNP part_NN for_IN MATH_NNP consists_NNS of_IN all_DT rows_NNS in_IN MATH_NNP with_IN index_NN at_IN least_JJS MATH_NNP and_CC less_JJR than_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN variables_NNS into_IN subsets_NNS MATH_NNP of_IN MATH_NNP variables_NNS each_DT ._.
Partition_VB the_DT vertices_NNS of_IN the_DT MATH_NNP cloud_NN with_IN exactly_RB two_CD neighbors_NNS inside_IN the_DT MATH_NNP cloud_NN in_IN vertices_NNS of_IN type_NN 1_CD and_CC type_NN 2_CD such_JJ that_IN there_EX are_VBP MATH_NNP vertices_NNS of_IN type_NN 1_CD and_CC MATH_NNP vertices_NNS of_IN type_NN 2_CD ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP as_IN MATH_NNP ._.
Partition_VB the_DT sum_NN into_IN subsets_NNS ,_, for_IN which_WDT the_DT intersections_NNS are_VBP the_DT simplex_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP on_IN which_WDT the_DT function_NN MATH_NNP is_VBZ monotone_NN ._.
Partition_VB this_DT set_NN in_IN two_CD pieces_NNS ,_, according_VBG to_IN the_DT sign_NN of_IN MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN three_CD sub-intervals_NNS :_: MATH_NNP ._.
Partition_VB the_DT real_JJ line_NN into_IN three_CD sub-intervals_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP so_IN that_IN MATH_NNP ,_, for_IN MATH_NNP and_CC MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP closed_VBD subintervals_NNS of_IN length_NN MATH_NNP ._.
Partition_VB the_DT graph_NN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT box_NN MATH_NNP into_IN squared_JJ cells_NNS with_IN side_NN length_NN MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT collection_NN of_IN all_DT cells_NNS that_WDT are_VBP adjacent_JJ to_IN the_DT boundary_NN of_IN the_DT box_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN squares_NNS of_IN side_NN length_NN MATH_NNP ,_, that_DT is_VBZ ,_, the_DT squares_NNS MATH_NNP where_WRB MATH_NNP ._.
Partition_VB each_DT square_NN into_IN MATH_NNP sub-squares_NNS ,_, each_DT of_IN side_NN length_NN MATH_NNP ._.
Partition_VB each_DT of_IN the_DT MATH_NNP matrix_NN products_NNS MATH_NNP into_IN a_DT MATH_NNP block_NN MATH_NNP to_IN the_DT left_NN of_IN a_DT MATH_NNP block_NN MATH_NNP :_: MATH_NNP and_CC then_RB let_VB MATH_NNP be_VB the_DT following_JJ MATH_NNP matrix_NN over_IN MATH_NNP :_: MATH_NNP ._.
Partition_VB each_DT of_IN the_DT matrices_NNS MATH_NNP into_IN a_DT MATH_NNP block_NN MATH_NNP on_IN top_NN of_IN a_DT MATH_NNP block_NN MATH_NNP :_: MATH_NNP and_CC let_VB MATH_NNP where_WRB MATH_NNP is_VBZ the_DT concatenation_NN of_IN the_DT matrices_NNS MATH_NNP into_IN a_DT MATH_NNP matrix_NN ._.
Partition_VB the_DT right-hand_JJ side_NN of_IN the_DT rectangle_NN MATH_NNP into_IN MATH_NNP equal_JJ intervals_NNS (_( of_IN length_NN MATH_NNP )_) ,_, and_CC denote_VB the_DT event_NN that_IN there_EX is_VBZ a_DT horizontal_JJ crossing_NN of_IN MATH_NNP into_IN the_DT MATH_NNP of_IN these_DT intervals_NNS by_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP of_IN size_NN MATH_NNP each_DT ._.
Partition_VB of_IN unity_NN ._.
Partition_VB the_DT radii_NN into_IN MATH_NNP classes_NNS by_IN defining_VBG barriers_NNS at_IN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP so_RB that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP buckets_NNS of_IN probability_NN mass_NN MATH_NNP ._.
Partition_VB MATH_NNP so_IN that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP pieces_NNS of_IN size_NN MATH_NNP that_IN are_VBP not_RB interleaved_VBN (_( if_IN MATH_NNP and_CC MATH_NNP are_VBP two_CD pieces_NNS ,_, then_RB if_IN one_CD element_NN of_IN MATH_NNP is_VBZ less_JJR than_IN one_CD element_NN of_IN MATH_NNP ,_, then_RB all_DT elements_NNS of_IN MATH_NNP are_VBP less_JJR than_IN all_DT elements_NNS of_IN MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN subsets_NNS MATH_NNP by_IN setting_VBG for_IN each_DT MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP by_IN MATH_NNP the_DT set_NN of_IN all_DT MATH_NNP â€“_NNP cells_NNS in_IN MATH_NNP such_JJ that_IN the_DT cell_NN and_CC its_PRP$ associated_VBN path_NN both_DT lie_VBP in_IN MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN disjoint_NN NAME_NNP sets_VBZ MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP of_IN equal_JJ width_NN ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP according_VBG to_IN REF_NNP ,_, and_CC draw_VB the_DT edges_NNS of_IN one_CD part_NN in_IN REF_NNP outside_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN two_CD subsets_NNS :_: MATH_NNP and_CC MATH_NNP ._.
Partition_VB regions_NNS MATH_NNP and_CC MATH_NNP into_IN lines_NNS that_IN are_VBP open_JJ sets_NNS ,_, that_DT is_VBZ ,_, each_DT line_NN does_VBZ not_RB include_VB into_IN border_NN points_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS :_: for_IN every_DT color_NN MATH_NNP ,_, let_VBD MATH_NNP ,_, that_DT is_VBZ MATH_NNP is_VBZ the_DT set_NN of_IN edges_NNS of_IN color_NN MATH_NNP in_IN MATH_NNP ._.
Partition_VB the_DT ladder_NN into_IN dominoes_NNS ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subpaths_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP starts_VBZ with_IN MATH_NNP and_CC has_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP contiguous_JJ parts_NNS of_IN MATH_NNP entries_NNS each_DT ,_, and_CC think_NN of_IN each_DT part_NN of_IN MATH_NNP as_IN containing_VBG a_DT set_NN of_IN MATH_NNP assignments_NNS from_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP by_IN setting_VBG MATH_NNP iff_JJ MATH_NNP is_VBZ positive-good_JJ ,_, MATH_NNP iff_NN MATH_NNP is_VBZ negative-good_JJ ,_, and_CC MATH_NNP iff_JJ MATH_NNP is_VBZ bad_JJ ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT leaves_NNS of_IN MATH_NNP into_IN three_CD disjoint_NN sets_NNS MATH_NNP so_IN that_IN the_DT elements_NNS of_IN MATH_NNP lie_VBP over_IN leaf_JJ MATH_NNP of_IN MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ cubes_NN ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN 9_CD blocks/subpaths_NNS MATH_NNP of_IN near-equal_JJ length_NN by_IN setting_NN ,_, for_IN each_DT MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN 9_CD sub-paths_NNS MATH_NNP containing_VBG MATH_NNP as_IN is_VBZ done_VBN earlier_RBR in_IN REF_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN the_DT ears_NNS MATH_NNP (_( with_IN endpoints_NNS MATH_NNP and_CC MATH_NNP )_) and_CC MATH_NNP (_( with_IN endpoints_NNS MATH_NNP and_CC MATH_NNP )_) ._.
Partition_VB MATH_NNP by_IN squares_NNS MATH_NNP of_IN side_NN length_NN MATH_NNP centered_VBD at_IN the_DT points_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP non-empty_JJ sets_NNS of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN MATH_NNP disjoint_NN subsets_NNS of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT unit_NN ball_NN MATH_NNP of_IN MATH_NNP into_IN MATH_NNP pieces_NNS defined_VBD for_IN each_DT MATH_NNP by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN (_( possibly_RB disconnected_VBD )_) subsurfaces_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP is_VBZ contained_VBN in_IN MATH_NNP ,_, for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN vertices_NNS of_IN MATH_NNP with_IN at_RB least_RBS one_CD neighbor_NN in_IN MATH_NNP ,_, so_IN that_IN vertices_NNS in_IN MATH_NNP have_VBP no_DT neighbors_NNS in_IN MATH_NNP ._.
Partition_VB of_IN MATH_NNP into_IN two_CD sets_NNS each_DT with_IN sum_NN MATH_NNP exists_VBZ if_IN and_CC only_RB if_IN there_EX exists_VBZ an_DT allocation_NN MATH_NNP with_IN maximal_JJ cost_NN MATH_NNP :_: cost_NN of_IN each_DT task_NN MATH_NNP allocated_VBD to_IN a_DT machine_NN MATH_NNP is_VBZ equal_JJ to_IN MATH_NNP ._.
Partition_VB MATH_NNP accordingly_RB as_IN MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP 's_POS strategy_NN in_IN MATH_NNP into_IN 3_CD sets_NNS :_: edges_NNS in_IN MATH_NNP ,_, edges_VBZ in_IN MATH_NNP ,_, and_CC all_DT other_JJ edges_NNS ,_, called_VBD MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP respectively_RB ._.
Partition_VB MATH_NNP to_IN MATH_NNP pairs_FW MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS according_VBG to_IN whether_IN MATH_NNP is_VBZ divisible_JJ by_IN MATH_NNP or_CC not_RB ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, and_CC MATH_NNP of_IN equal_JJ size_NN (_( up_RP to_IN rounding_NN )_) and_CC in_IN particular_JJ MATH_NNP ._.
Partition_VB the_DT set_NN of_IN MATH_NNP input_NN bits_NNS into_IN MATH_NNP blocks_NNS of_IN size_NN MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT set_NN of_IN inputs_NNS into_IN MATH_NNP blocks_NNS of_IN size_NN MATH_NNP each_DT :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN bars_NNS (_( equivalence_NN classes_NNS of_IN the_DT transitive_JJ closure_NN of_IN the_DT overlap_JJ relation_NN on_IN MATH_NNP )_) ._.
Partition_VB the_DT alphabet_NN MATH_NNP into_IN subsets_NNS of_IN size_NN MATH_NNP and_CC concatenate_VB MATH_NNP copies_NNS of_IN MATH_NNP ,_, one_CD on_IN each_DT part_NN of_IN the_DT alphabet_NN ._.
Partition_VB the_DT integers_NNS into_IN infinitely_RB many_JJ subsequences_NNS and_CC ,_, using_VBG REF_NNP ,_, select_JJ measures_NNS MATH_NNP satisfying_VBG REF_NNP such_JJ that_IN MATH_NNP along_IN the_DT MATH_NNP subsequence_NN ._.
Partition_VB the_DT vertices_NNS into_IN sets_NNS MATH_NNP of_IN MATH_NNP vertices_NNS each_DT ._.
Partition_VB the_DT vertex_NN set_VBD into_IN MATH_NNP parts_NNS MATH_NNP with_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT set_NN of_IN fixed_VBN points_NNS into_IN two_CD pieces_NNS ,_, one_CD of_IN cardinality_NN twice_PDT that_DT of_IN MATH_NNP (_( we_PRP allow_VBP the_DT possibility_NN that_IN MATH_NNP is_VBZ finite_JJ )_) ,_, and_CC the_DT other_JJ with_IN the_DT same_JJ cardinality_NN as_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD infinite_JJ pieces_NNS MATH_NNP ._.
Partition_VB the_DT sum_NN into_IN the_DT finite_JJ sum_NN where_WRB MATH_NNP and_CC the_DT infinite_JJ sum_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP (_( respectively_RB ,_, MATH_NNP ,_, MATH_NNP )_) is_VBZ the_DT set_NN of_IN vertices_NNS that_WDT are_VBP incident_JJ to_IN exactly_RB one_CD MATH_NNP (_( respectively_RB ,_, two_CD ,_, three_CD MATH_NNP 's_POS )_) in_IN MATH_NNP ._.
Partition_VB all_DT remaining_VBG values_NNS into_IN MATH_NNP interval-buckets_NNS MATH_NNP ;_: in_IN expectation_NN ,_, each_DT contributes_VBZ a_DT MATH_NNP fraction_NN of_IN the_DT optimum_NN ._.
Partition_VB the_DT circle_NN into_IN arcs_JJ according_VBG to_IN the_DT players_NNS '_POS first_JJ choice_NN points_NNS ._.
Partition_VB MATH_NNP into_IN four_CD MATH_NNP squares_NNS of_IN area_NN MATH_NNP each_DT ._.
Partition_VB the_DT columns_NNS of_IN MATH_NNP into_IN MATH_NNP submatrices_NNS MATH_NNP of_IN size_NN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ given_VBN by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD equal_JJ parts_NNS ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP so_IN that_IN each_DT MATH_NNP is_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: CASE_NNP :_: For_IN MATH_NNP ,_, with_IN MATH_NNP ,_, put_VBD MATH_NNP into_IN either_DT MATH_NNP or_CC MATH_NNP arbitrarily_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP sectors_NNS MATH_NNP of_IN consecutive_JJ elements_NNS ,_, all_DT of_IN the_DT same_JJ size_NN MATH_NNP ,_, except_IN that_DT MATH_NNP may_MD be_VB smaller_JJR ._.
Partition_VB the_DT MATH_NNP small_JJ digits_NNS into_IN MATH_NNP groups_NNS of_IN MATH_NNP consecutive_JJ small_JJ digits_NNS each_DT ,_, except_IN that_IN the_DT last_JJ group_NN may_MD be_VB smaller_JJR ,_, and_CC represent_VB the_DT small_JJ digits_NNS in_IN each_DT group_NN through_IN a_DT big_JJ digit_NN in_IN the_DT range_NN MATH_NNP ,_, where_WRB MATH_NNP ,_, except_IN that_IN the_DT last_JJ big_JJ digit_NN may_MD come_VB from_IN a_DT smaller_JJR range_NN ._.
Partition_VB MATH_NNP into_IN two_CD near_IN equal_JJ parts_NNS MATH_NNP with_IN MATH_NNP ,_, so_IN that_DT MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, so_IN that_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP contains_VBZ vertices_NNS only_RB from_IN different_JJ parts_NNS of_IN MATH_NNP ._.
Partition_VB the_DT red_JJ edges_NNS of_IN MATH_NNP into_IN as_RB many_JJ triplets_NNS as_IN possible_JJ ._.
Partition_VB the_DT colors_NNS into_IN MATH_NNP groups_NNS ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP of_IN small_JJ diameter_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN paths_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP is_VBZ a_DT MATH_NNP path_NN and_CC a_DT MATH_NNP path_NN ,_, respectively_RB ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP is_VBZ a_DT left_JJ coset_NN of_IN MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN permutations_NNS with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD equal_JJ sized_JJ sets_NNS MATH_NNP and_CC MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB the_DT set_NN of_IN all_DT vertices_NNS MATH_NNP of_IN MATH_NNP into_IN two_CD classes_NNS ,_, MATH_NNP ,_, where_WRB MATH_NNP are_VBP vertices_NNS in_IN MATH_NNP while_IN MATH_NNP are_VBP vertices_NNS belonging_VBG to_IN MATH_NNP ._.
Partition_VB the_DT event_NN MATH_NNP into_IN four_CD disjoint_NN events_NNS :_: MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT MATH_NNP vertices_NNS into_IN two_CD cliques_NNS ._.
Partition_VB MATH_NNP into_IN two_CD nonempty_JJ disjoint_NN sets_VBZ MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT orbits_NNS of_IN MATH_NNP â€”_NNP that_DT is_VBZ ,_, two_CD points_NNS MATH_NNP and_CC MATH_NNP are_VBP in_IN the_DT same_JJ part_NN if_IN there_EX is_VBZ some_DT MATH_NNP such_JJ that_IN MATH_NNP or_CC MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP with_IN MATH_NNP for_IN every_DT MATH_NNP ._.
Partition_VB this_DT matrix_NN into_IN nine_CD block_NN submatrices_NNS of_IN size_NN MATH_NNP ,_, and_CC consider_VBP the_DT 21-submatrix_CD of_IN MATH_NNP that_DT is_VBZ ,_, the_DT MATH_NNP component_NN in_IN the_DT MATH_NNP array_NN of_IN the_DT nine_CD blocks_NNS ._.
Partition_VB each_DT element_NN MATH_NNP arbitrarily_RB into_IN MATH_NNP many_JJ infinite_JJ pieces_NNS :_: MATH_NNP and_CC for_IN each_DT MATH_NNP and_CC MATH_NNP let_VBD MATH_NNP be_VB a_DT completely_RB separable_JJ MAD_NNP family_NN on_IN MATH_NNP ,_, which_WDT exists_NNS by_IN our_PRP$ assumption_NN ._.
Partition_VB the_DT plane_NN into_IN small_JJ squares_NNS of_IN side_NN length_NN MATH_NNP ._.
Partition_VB the_DT disks_NNS of_IN MATH_NNP into_IN MATH_NNP layers_NNS MATH_NNP depending_VBG on_IN which_WDT concentric_JJ circle_VBP their_PRP$ center_NN lies_VBZ on_IN ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP forms_VBZ a_DT maximum_JJ matching_NN of_IN MATH_NNP ._.
Partition_VB instance_NN MATH_NNP ._.
Partition_VB instance_NN ,_, instead_RB of_IN defining_VBG MATH_NNP stars_NNS as_IN in_IN REF_NNP ,_, we_PRP define_VBP MATH_NNP disjoint_NN chains_NNS MATH_NNP ,_, for_IN each_DT MATH_NNP and_CC each_DT MATH_NNP ._.
Partition_VB the_DT simplices_NNS in_IN MATH_NNP as_IN MATH_NNP where_WRB the_DT simplices_NNS of_IN MATH_NNP belong_IN to_IN MATH_NNP and_CC the_DT simplices_NNS of_IN MATH_NNP belong_IN to_IN MATH_NNP ._.
Partition_VB node_NN MATH_NNP into_IN MATH_NNP nodes_NNS and_CC split_VB its_PRP$ adjacent_JJ edges_NNS among_IN them_PRP such_JJ that_IN MATH_NNP nodes_NNS have_VBP exactly_RB three_CD adjacent_JJ edges_NNS each_DT and_CC the_DT remaining_VBG node_NN ,_, if_IN any_DT ,_, has_VBZ MATH_NNP adjacent_JJ edges_NNS ._.
Partition_VB MATH_NNP into_IN cubes_NNS with_IN edges_NNS of_IN length_NN MATH_NNP and_CC one_CD face_NN MATH_NNP orthogonal_JJ to_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN vertices_NNS MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP is_VBZ the_DT minimum_JJ vertex_NN cover_NN of_IN MATH_NNP and_CC MATH_NNP is_VBZ therefore_RB an_DT independent_JJ set_NN ._.
Partition_VB the_DT plane_NN into_IN squares_NNS of_IN side_NN MATH_NNP with_IN horizontal_JJ and_CC vertical_JJ lines_NNS ._.
Partition_VB the_DT space_NN around_IN the_DT sender_NN node_NN MATH_NNP into_IN concentric_JJ rings_NNS of_IN width_JJ MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP of_IN MATH_NNP balls_VBZ into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN the_DT convex_NN MATH_NNP gon_NN into_IN three_CD contiguous_JJ sets_NNS ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP or_CC MATH_NNP ,_, as_IN appropriate_JJ ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN the_DT sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ the_DT vertices_NNS of_IN MATH_NNP which_WDT are_VBP contained_VBN in_IN MATH_NNP or_CC in_IN a_DT descendant_NN of_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN the_DT sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ the_DT vertices_NNS which_WDT are_VBP contained_VBN in_IN MATH_NNP or_CC in_IN a_DT descendant_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP to_TO match_VB the_DT form_NN of_IN the_DT inference_NN rule_NN ._.
Partition_VB the_DT matrix_NN MATH_NNP as_IN the_DT follows_VBZ ,_, MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP with_IN the_DT parameter_NN set_VBD to_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN at_IN most_JJS MATH_NNP sets_NNS ._.
Partition_VB the_DT stars_NNS in_IN MATH_NNP into_IN equivalence_NN classes_NNS (_( with_IN respect_NN to_IN MATH_NNP )_) using_VBG REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP optimal_JJ clusters_NNS MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB the_DT straight-line_JJ segment_NN from_IN MATH_NNP to_IN MATH_NNP into_IN MATH_NNP segments_NNS ,_, for_IN example_NN ,_, with_IN endpoints_NNS MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ subcubes_NNS MATH_NNP ._.
Partition_VB this_DT area_NN into_IN maximal-height_JJ unit-width_JJ vertical_JJ stripes_NNS as_IN before_IN (_( newly_RB free_JJ rectangles_NNS )_) ._.
Partition_VB the_DT region_NN with_IN MATH_NNP coordinate_NN between_IN MATH_NNP and_CC MATH_NNP in_IN MATH_NNP strips_NNS of_IN width_JJ MATH_NNP and_CC height_VBD MATH_NNP ,_, let_VBD them_PRP be_VB MATH_NNP ;_: let_NN MATH_NNP be_VB the_DT set_NN of_IN items_NNS in_IN MATH_NNP such_JJ that_IN their_PRP$ left_JJ or_CC right_JJ edge_NN (_( or_CC both_DT )_) are_VBP contained_VBN in_IN the_DT interior_NN of_IN strip_NN MATH_NNP ._.
Partition_VB to_IN prove_VB that_IN our_PRP$ scheduling_NN problem_NN is_VBZ strongly_RB NP-hard_JJ ._.
Partition_VB contains_VBZ a_DT set_NN MATH_NNP of_IN natural_JJ numbers_NNS and_CC a_DT number_NN MATH_NNP ,_, and_CC remains_VBZ NP-hard_JJ even_RB when_WRB all_DT numbers_NNS are_VBP strictly_RB between_IN MATH_NNP and_CC CITE_NNP ._.
Partition_VB is_VBZ a_DT yes-instance_NN ._.
Partition_VB is_VBZ a_DT yes-instance_NN ,_, a_DT schedule_NN as_IN depicted_VBN in_IN REF_NNP is_VBZ easily_RB constructed_VBN from_IN a_DT solution_NN ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN intervals_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS as_IN MATH_NNP and_CC MATH_NNP ,_, so_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP with_IN MATH_NNP by_IN assigning_VBG each_DT vertex_NN not_RB in_IN MATH_NNP to_IN a_DT nearest_JJS vertex_NN in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ,_, and_CC chop_VB the_DT integral_JJ MATH_NNP into_IN pieces_NNS accordingly_RB ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP and_CC thus_RB MATH_NNP is_VBZ a_DT matrix_NN of_IN order_NN MATH_NNP whose_WP$ columns_NNS are_VBP orthonormal_JJ and_CC orthogonal_JJ to_IN those_DT of_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP according_VBG to_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT first_JJ MATH_NNP integers_NNS greater_JJR than_IN MATH_NNP into_IN runs_NNS of_IN MATH_NNP consecutive_JJ integers_NNS ._.
Partition_VB MATH_NNP by_IN boxes_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN blocks_NNS MATH_NNP such_JJ that_IN MATH_NNP is_VBZ consecutive_JJ for_IN all_DT MATH_NNP and_CC MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT singular_JJ value_NN decomposition_NN as_IN MATH_NNP ,_, and_CC observe_VB MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP parts_NNS such_JJ that_IN the_DT number_NN of_IN edges_NNS between_IN these_DT parts_NNS is_VBZ maximum_JJ possible_JJ ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP into_IN sets_NNS MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT summation_NN over_IN MATH_NNP into_IN dyadic_JJ intervals_NNS and_CC apply_VB REF_NNP ._.
Partition_VB of_IN the_DT interval_JJ MATH_NNP into_IN subintervals_NNS MATH_NNP :_: Set_NNP MATH_NNP ,_, MATH_NNP and_CC for_IN MATH_NNP such_JJ that_IN MATH_NNP ,_, define_JJ MATH_NNP to_TO be_VB the_DT first_JJ time_NN after_IN MATH_NNP that_IN MATH_NNP hits_VBZ a_DT face_NN that_IN does_VBZ not_RB lie_VB in_IN the_DT subset_NN of_IN faces_NNS that_IN MATH_NNP lies_VBZ in_IN ;_: that_DT is_VBZ ,_, MATH_NNP and_CC let_VB MATH_NNP be_VB the_DT first_JJ time_NN after_IN MATH_NNP that_IN MATH_NNP lies_VBZ at_IN the_DT intersection_NN of_IN MATH_NNP or_CC more_JJR faces_NNS ;_: that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB the_DT primary_JJ level_NN into_IN primary_JJ bins_NNS of_IN MATH_NNP consecutive_JJ slots_NNS ._.
Partition_VB the_DT secondary_JJ level_NN into_IN secondary_JJ bins_NNS of_IN MATH_NNP consecutive_JJ slots_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS MATH_NNP ,_, in_IN size_NN order_NN ,_, differing_VBG in_IN size_NN by_IN at_IN most_RBS one_CD ._.
Partition_VB the_DT space_NN of_IN MATH_NNP into_IN MATH_NNP small_JJ boxes_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP pairwise_JJ disjoint_NN sets_NNS of_IN size_NN at_IN most_JJS MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP ,_, for_IN each_DT round_JJ MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD MATH_NNP of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ defined_VBN as_IN the_DT subset_NN of_IN MATH_NNP ,_, such_JJ that_IN for_IN every_DT MATH_NNP there_EX are_VBP at_IN most_JJS MATH_NNP distinct_JJ values_NNS of_IN MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT edges_NNS on_IN the_DT path_NN into_IN fast_JJ stretches_NNS (_( consecutive_JJ edges_NNS connecting_VBG two_CD nodes_NNS of_IN the_DT same_JJ rank_NN )_) and_CC non-fast_JJ edges_NNS ._.
Partition_VB to_IN Permuted_NNP Linear_NNP System_NNP ._.
Partition_VB ,_, we_PRP construct_VBP the_DT matrix_NN MATH_NNP and_CC vector_NN MATH_NNP with_IN MATH_NNP as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB the_DT plane_NN into_IN a_DT collection_NN MATH_NNP of_IN MATH_NNP cells_NNS by_IN drawing_VBG the_DT at_IN most_JJS MATH_NNP vertical_JJ and_CC MATH_NNP horizontal_JJ lines_NNS containing_VBG the_DT edges_NNS of_IN the_DT squares_NNS in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN into_IN weight_NN classes_NNS MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB the_DT enhanced_JJ states_NNS in_IN MATH_NNP as_IN follows_VBZ ._.
Partition_VB any_DT remaining_VBG enhanced_JJ states_NNS in_IN MATH_NNP into_IN pairs_NNS MATH_NNP which_WDT are_VBP identical_JJ except_IN with_IN opposite_JJ labels_NNS on_IN the_DT two_CD state_NN circles_NNS incident_NN to_IN MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, so_RB that_IN two_CD vertices_NNS belong_IN to_IN the_DT same_JJ part_NN if_IN they_PRP have_VBP the_DT same_JJ degree_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP matchings_NNS (_( REF_NNP )_) ._.
Partition_VB the_DT jobs_NNS into_IN MATH_NNP different_JJ groups_NNS ,_, where_WRB the_DT jobs_NNS in_IN group_NN MATH_NNP have_VBP relative_JJ laxities_NNS in_IN the_DT range_NN MATH_NNP ._.
Partition_VB the_DT jobs_NNS in_IN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, each_DT sets_NNS of_IN independent_JJ edges_NNS ._.
Partition_VB the_DT MATH_NNP particle_NN phase_NN space_NN MATH_NNP according_VBG to_IN the_DT degree_NN of_IN physical_JJ interaction_NN between_IN the_DT particles_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN for_IN every_DT MATH_NNP ,_, MATH_NNP is_VBZ an_DT i.i.d._JJ interval_NN ._.
Partition_VB the_DT range_NN MATH_NNP of_IN MATH_NNP into_IN subsets_NNS MATH_NNP ,_, each_DT of_IN diameter_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT MATH_NNP with_IN MATH_NNP or_CC MATH_NNP ,_, MATH_NNP consists_VBZ of_IN all_DT MATH_NNP with_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP to_IN families_NNS MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN all_DT edges_NNS who_WP have_VBP both_DT their_PRP$ endpoints_NNS in_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT matrix_NN MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN MATH_NNP and_CC MATH_NNP respectively_RB ,_, where_WRB MATH_NNP ,_, MATH_NNP is_VBZ positive_JJ definite_NN ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN MATH_NNP and_CC MATH_NNP respectively_RB ,_, where_WRB MATH_NNP ,_, MATH_NNP is_VBZ positive_JJ definite_NN ,_, MATH_NNP is_VBZ the_DT MATH_NNP column_NN of_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT code_NN block_NN into_IN single_JJ subsystem_NN subsets_NNS MATH_NNP where_WRB MATH_NNP is_VBZ the_DT length_NN of_IN the_DT code_NN ._.
Partition_VB the_DT edges_NNS MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT unit_NN interval_NN into_IN a_DT set_NN of_IN subintervals_NNS MATH_NNP with_IN lengths_NNS equal_JJ to_IN each_DT component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sized_JJ sets_NNS ._.
Partition_VB the_DT relative_JJ positions_NNS into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, so_RB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP chosen_VBP uniformly_RB at_IN random_NN ._.
Partition_VB the_DT phase_NN into_IN intervals_NNS MATH_NNP where_WRB MATH_NNP does_VBZ not_RB change_VB during_IN an_DT interval_NN ,_, but_CC does_VBZ change_NN between_IN intervals_NNS ._.
Partition_VB the_DT vertices_NNS into_IN groups_NNS with_IN at_IN most_RBS five_CD vertices_NNS from_IN MATH_NNP to_IN MATH_NNP and_CC from_IN MATH_NNP to_IN MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP into_IN the_DT row_NN and_CC column_NN (_( respectively_RB )_) vector_NN blocks_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD disjoint_NN subsets_NNS MATH_NNP and_CC MATH_NNP of_IN cardinality_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP of_IN of_IN equal_JJ size_NN ,_, up_RB to_TO MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP for_IN all_DT other_JJ MATH_NNP ._.
Partition_VB MATH_NNP ,_, the_DT set_NN of_IN MATH_NNP possible_JJ preferences_NNS ,_, to_IN two_CD subsets_NNS :_: CASE_NNP :_: The_DT subset_NN MATH_NNP containing_VBG the_DT MATH_NNP preferences_NNS for_IN which_WDT MATH_NNP ;_: CASE_NNP :_: The_DT subset_NN MATH_NNP containing_VBG the_DT MATH_NNP preferences_NNS for_IN which_WDT MATH_NNP ._.
Partition_VB the_DT support_NN of_IN MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP for_IN MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ every_DT element_NN MATH_NNP where_WRB MATH_NNP ,_, and_CC for_IN each_DT MATH_NNP ,_, MATH_NNP contains_VBZ every_DT element_NN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS depending_VBG on_IN whether_IN MATH_NNP is_VBZ on_IN the_DT extension_NN MATH_NNP of_IN the_DT path_NN starting_VBG at_IN MATH_NNP ,_, or_CC the_DT color_NN of_IN MATH_NNP is_VBZ on_IN MATH_NNP or_CC else_RB ,_, that_DT is_VBZ ,_, MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN groups_NNS of_IN MATH_NNP consecutive_JJ intervals_NNS ._.
Partition_VB the_DT nonzero_JJ elements_NNS of_IN MATH_NNP into_IN inverse_JJ pairs_NNS as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB the_DT indexing_NN set_VBD MATH_NNP into_IN subsets_NNS MATH_NNP by_IN saying_VBG two_CD indices_NNS are_VBP in_IN the_DT same_JJ block_NN if_IN and_CC only_RB if_IN the_DT corresponding_JJ terms_NNS satisfy_VBP MATH_NNP and_CC MATH_NNP for_IN some_DT MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN disjoint_NN subsets_NNS MATH_NNP consisting_VBG of_IN points_NNS within_IN MATH_NNP â€“_NNP distance_NN from_IN MATH_NNP respectively_RB ._.
Partition_VB MATH_NNP according_VBG to_IN the_DT size_NN of_IN the_DT second_JJ bucket_NN of_IN MATH_NNP ,_, that_DT is_VBZ ,_, let_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, where_WRB MATH_NNP ,_, so_IN that_DT MATH_NNP ._.
Partition_VB the_DT circle_NN into_IN MATH_NNP equal_JJ slices_NNS and_CC consider_VBP a_DT slice_NN with_IN central_JJ angle_NN MATH_NNP radians_NNS ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN three_CD parts_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP :_: let_NN MATH_NNP be_VB the_DT set_NN of_IN neighbours_NNS of_IN MATH_NNP in_IN MATH_NNP ,_, let_VBD MATH_NNP be_VB the_DT set_NN of_IN neighbours_NNS of_IN MATH_NNP in_IN MATH_NNP that_DT are_VBP not_RB adjacent_JJ to_IN MATH_NNP ,_, and_CC let_VB MATH_NNP (_( see_NNS also_RB REF_NNP )_) ._.
Partition_VB this_DT column_NN as_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT columns_NNS MATH_NNP and_CC MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD (_( disjoint_NN )_) sets_VBZ MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP segments_NNS of_IN the_DT form_NN MATH_NNP and_CC define_VB MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP ,_, each_DT of_IN length_NN MATH_NNP ,_, which_WDT are_VBP then_RB definable_JJ by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD nonempty_JJ sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB in_IN graphs_NNS of_IN maximum_NN out-degree_JJ MATH_NNP and_CC then_RB show_VB how_WRB to_TO modify_VB the_DT proof_NN to_IN work_NN for_IN strong_JJ and_CC MATH_NNP out-regular_JJ digraphs_NNS using_VBG REF_NNP ._.
Partition_VB is_VBZ MATH_NNP complete_JJ for_IN digraphs_NNS of_IN maximum_NN out-degree_JJ MATH_NNP as_IN it_PRP is_VBZ easy_JJ to_IN check_NN that_IN MATH_NNP ._.
Partition_VB is_VBZ MATH_NNP complete_JJ for_IN digraphs_NNS of_IN maximum_NN out-degree_JJ 2_CD ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ subpaths_NNS such_JJ that_IN each_DT of_IN these_DT subpaths_NNS has_VBZ length_VBN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP parts_NNS so_RB that_IN one_CD part_NN is_VBZ the_DT triangle_NN and_CC each_DT of_IN the_DT others_NNS parts_NNS is_VBZ either_CC a_DT set_NN of_IN two_CD consecutive_JJ vertices_NNS (_( an_DT edge_NN )_) or_CC single_JJ vertex_NN ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP parts_NNS so_IN that_IN each_DT of_IN parts_NNS is_VBZ either_CC a_DT set_NN of_IN two_CD consecutive_JJ vertices_NNS (_( an_DT edge_NN )_) or_CC single_JJ vertex_NN ._.
Partition_VB the_DT discrete_JJ NAME_NNP transform_NN matrix_NN MATH_NNP into_IN rows_NNS for_IN the_DT observations_NNS and_CC missing_VBG values_NNS as_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD halves_NNS MATH_NNP and_CC MATH_NNP arbitrarily_RB ,_, subject_JJ to_IN MATH_NNP ._.
Partition_VB the_DT bottom_JJ MATH_NNP levels_NNS of_IN MATH_NNP into_IN sets_NNS of_IN MATH_NNP consecutive_JJ levels_NNS ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN two_CD parts_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN cubes_NN of_IN side_NN lengths_NNS MATH_NNP ._.
Partition_VB each_DT part_NN MATH_NNP into_IN parts_NNS of_IN size_NN MATH_NNP and_CC possibly_RB one_CD additional_JJ part_NN of_IN size_NN less_RBR than_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP 's_POS into_IN sets_NNS MATH_NNP ,_, each_DT having_VBG sum-of-squares_NNS in_IN MATH_NNP ;_: this_DT is_VBZ possible_JJ since_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP vectors_NNS in_IN MATH_NNP into_IN MATH_NNP distinct_JJ affine_NN subspaces_NNS MATH_NNP obtained_VBD by_IN translating_VBG MATH_NNP by_IN translation_NN vectors_NNS MATH_NNP respectively_RB ;_: MATH_NNP consists_VBZ of_IN each_DT vector_NN in_IN MATH_NNP added_VBD to_IN MATH_NNP ._.
Partition_VB the_DT lattice_NN points_NNS using_VBG unit_NN disks_NNS as_IN shown_VBN in_IN the_DT REFWhen_NNP a_DT point_NN arrives_VBZ ,_, use_VB the_DT disk_NN it_PRP belongs_VBZ to_IN in_IN the_DT partition_NN ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN parts_NNS of_IN size_NN MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN sets_NNS MATH_NNP where_WRB MATH_NNP if_IN and_CC only_RB if_IN the_DT longest_JJS directed_VBN red_JJ path_NN from_IN MATH_NNP has_VBZ length_VBN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_NNS MATH_NNP where_WRB MATH_NNP if_IN and_CC only_RB if_IN the_DT longest_JJS directed_VBN path_NN of_IN colour_JJ MATH_NNP from_IN MATH_NNP in_IN MATH_NNP has_VBZ length_VBN MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN the_DT elements_NNS in_IN MATH_NNP have_VBP a_DT longest_JJS MATH_NNP chain_NN through_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP as_IN follows_VBZ ._.
Partition_VB problem_NN Instance_NNP :_: A_DT sets_NNS of_IN MATH_NNP of_IN positive_JJ integers_NNS MATH_NNP ._.
Partition_VB the_DT nodes_NNS of_IN MATH_NNP into_IN two_CD sets_NNS :_: the_DT set_VBN MATH_NNP of_IN nodes_NNS that_WDT have_VBP degree_VBN MATH_NNP or_CC less_JJR ,_, and_CC the_DT set_NN MATH_NNP of_IN nodes_NNS that_WDT have_VBP degree_VBN more_RBR than_IN MATH_NNP (_( for_IN some_DT constant_JJ MATH_NNP that_WDT will_MD be_VB chosen_VBN later_RB )_) ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN three_CD sets_NNS :_: MATH_NNP where_WRB both_DT endpoints_NNS are_VBP in_IN MATH_NNP ,_, MATH_NNP where_WRB both_DT endpoints_NNS are_VBP in_IN MATH_NNP ,_, and_CC MATH_NNP that_DT has_VBZ one_CD endpoint_NN in_IN each_DT ._.
Partition_VB the_DT sets_NNS MATH_NNP into_IN pairs_JJ MATH_NNP such_JJ that_IN MATH_NNP for_IN all_DT odd_JJ MATH_NNP ;_: this_DT is_VBZ possible_JJ because_IN the_DT entries_NNS sort_VBP into_IN conjugate_JJ pairs_NNS by_IN the_DT second_JJ paragraph_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP many_JJ subsets_NNS MATH_NNP so_IN that_DT MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB the_DT dimensions_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC all_DT others_NNS ._.
Partition_VB MATH_NNP into_IN families_NNS MATH_NNP of_IN parallel_NN lines_NNS ;_: note_NN that_IN there_EX are_VBP MATH_NNP such_JJ families_NNS since_IN there_EX are_VBP MATH_NNP edges_NNS on_IN any_DT node_NN MATH_NNP and_CC thus_RB MATH_NNP different_JJ directions_NNS MATH_NNP that_IN determine_NN lines_NNS ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS MATH_NNP and_CC MATH_NNP of_IN equal_JJ size_NN ._.
Partition_VB MATH_NNP by_IN the_DT adjacency_NN in_IN MATH_NNP and_CC by_IN lists_NNS ;_: more_RBR precisely_RB let_VB MATH_NNP such_JJ that_IN for_IN every_DT MATH_NNP and_CC for_IN every_DT MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN of_IN pairs_NNS MATH_NNP according_VBG to_IN the_DT adjacency_NN of_IN each_DT MATH_NNP in_IN MATH_NNP ;_: let_NN MATH_NNP be_VB the_DT blocks_NNS of_IN this_DT partition_NN ._.
Partition_VB the_DT set_NN MATH_NNP according_VBG to_IN the_DT adjacency_NN of_IN MATH_NNP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP corresponds_VBZ to_IN nodes_NNS MATH_NNP ._.
Partition_VB MATH_NNP conformally_RB with_IN MATH_NNP ,_, so_IN that_DT MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN blocks_NNS MATH_NNP REF_NNP arbitrarily_RB ,_, but_CC with_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP even_RB subintervals_NNS ._.
Partition_VB MATH_NNP into_IN consecutive_JJ blocks_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS such_JJ that_IN the_DT last_JJ block_NN has_VBZ length_VBN MATH_NNP and_CC all_DT other_JJ blocks_NNS have_VBP length_VBN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, depending_VBG on_IN whether_IN MATH_NNP is_VBZ MATH_NNP or_CC MATH_NNP ._.
Partition_VB the_DT set_NN of_IN points_NNS MATH_NNP according_VBG to_IN the_DT most_RBS significant_JJ MATH_NNP dimensions_NNS ._.
Partition_VB the_DT collection_NN MATH_NNP into_IN a_DT pair-collection_NN MATH_NNP ,_, and_CC a_DT singleton-collection_JJ MATH_NNP (_( this_DT partitioning_NN is_VBZ always_RB possible_JJ and_CC unique_JJ by_IN definition_NN )_) ._.
Partition_VB MATH_NNP as_IN MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP conformally_RB with_IN respect_NN to_IN MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP and_CC MATH_NNP (_( note_NN that_IN every_DT element_NN of_IN MATH_NNP must_MD appear_VB in_IN exactly_RB one_CD of_IN MATH_NNP and_CC MATH_NNP so_RB these_DT three_CD sets_NNS indeed_RB partition_NN MATH_NNP )_) ._.
Partition_VB the_DT set_NN of_IN needles_NNS so_IN that_IN MATH_NNP and_CC MATH_NNP are_VBP the_DT sets_NNS of_IN needles_NNS before_IN MATH_NNP ,_, between_IN MATH_NNP and_CC MATH_NNP ,_, and_CC after_IN MATH_NNP in_IN clockwise_NN order_NN at_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ,_, with_IN MATH_NNP so_RB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS of_IN order_NN MATH_NNP so_IN that_IN each_DT block_NN corresponds_VBZ with_IN one_CD component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS of_IN order_NN MATH_NNP so_IN that_IN each_DT block_NN corresponds_VBZ to_IN one_CD component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS of_IN matrices_NNS of_IN order_NN MATH_NNP ,_, that_DT is_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS of_IN order_NN MATH_NNP ,_, that_DT is_VBZ MATH_NNP ,_, so_IN that_IN each_DT block_NN corresponds_VBZ with_IN one_CD component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT MATH_NNP sub-stacks_NNS MATH_NNP fitting_VBG into_IN the_DT rooms_NNS MATH_NNP ._.
Partition_VB MATH_NNP with_IN respect_NN to_IN an_DT arbitrary_JJ hyperplane_NN as_IN follows_VBZ :_: Define_NNP MATH_NNP and_CC MATH_NNP for_IN an_DT arbitrarily_RB chosen_VBN MATH_NNP ._.
Partition_VB MATH_NNP in_IN at_IN most_JJS MATH_NNP nonempty_JJ sets_NNS by_IN popularity_NN of_IN abscissae_NN in_IN MATH_NNP ._.
Partition_VB of_IN MATH_NNP defines_VBZ factoring_NN of_IN correspond_JJ polynomial_JJ MATH_NNP into_IN a_DT product_NN of_IN polynomials_NNS MATH_NNP whose_WP$ zeros_NNS belong_IN to_IN the_DT same_JJ connected_JJ component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN shells_NNS defined_VBD as_IN MATH_NNP ._.
Partition_VB the_DT matrix-valued_JJ function_NN MATH_NNP as_IN MATH_NNP and_CC then_RB it_PRP follows_VBZ from_IN REF_NNP that_IN MATH_NNP ._.
Partition_VB each_DT of_IN these_DT faces_NNS into_IN MATH_NNP dimensional_JJ cubes_NNS of_IN diameter_JJR less_JJR than_IN MATH_NNP ,_, where_WRB the_DT diameter_NN is_VBZ computed_VBN with_IN respect_NN to_IN the_DT MATH_NNP metric_JJ ._.
Partition_VB each_DT of_IN these_DT cubes_NNS into_IN simplices_NNS ._.
Partition_VB MATH_NNP to_IN two_CD sets_NNS MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP based_VBN on_IN the_DT activation_NN process_NN runing_VBG by_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN three_CD subsets_NNS ,_, MATH_NNP ,_, with_IN MATH_NNP consisting_VBG of_IN representing_VBG MATH_NNP that_IN make_VB MATH_NNP strictly_RB better_JJR than_IN the_DT best_JJS alternative_JJ pure_NN strategy_NN ,_, MATH_NNP the_DT elements_NNS of_IN MATH_NNP that_WDT make_VBP MATH_NNP indifferent_NN to_IN the_DT best_JJS alternative_NN ,_, and_CC MATH_NNP the_DT elements_NNS that_WDT make_VBP MATH_NNP strictly_RB worse_JJR ._.
Partition_VB these_DT 6_CD points_NNS into_IN 3_CD pairs_NNS ,_, each_DT pair_NN containing_VBG exactly_RB one_CD point_NN from_IN each_DT orbit_NN ._.
Partition_VB the_DT set_NN of_IN gadgets_NNS into_IN MATH_NNP subsets_NNS MATH_NNP ,_, each_DT of_IN size_NN at_IN least_JJS MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN MATH_NNP groups_NNS MATH_NNP such_JJ that_IN MATH_NNP if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT collection_NN of_IN one-dimensional_JJ intervals_NNS MATH_NNP for_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP as_RB small_JJ as_IN possible_JJ so_IN that_DT MATH_NNP ._.
Partition_VB the_DT points_NNS of_IN MATH_NNP into_IN three_CD sets_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP containing_VBG the_DT points_NNS in_IN the_DT interior_NN of_IN MATH_NNP ,_, those_DT on_IN the_DT boundary_NN of_IN MATH_NNP ,_, and_CC the_DT remaining_VBG points_NNS ,_, respectively_RB ._.
Partition_VB the_DT sector_NN bounded_VBD by_IN MATH_NNP and_CC MATH_NNP that_WDT contains_VBZ MATH_NNP into_IN two_CD convex_JJ parts_NNS along_IN the_DT angle_JJ bisector_NN of_IN MATH_NNP ._.
Partition_VB the_DT facets_NNS of_IN MATH_NNP into_IN four_CD families_NNS :_: let_NN MATH_NNP (_( respectively_RB ,_, MATH_NNP )_) denote_VB the_DT family_NN of_IN facets_NNS containing_VBG MATH_NNP and_CC not_RB MATH_NNP (_( respectively_RB ,_, MATH_NNP and_CC not_RB MATH_NNP )_) and_CC MATH_NNP (_( respectively_RB ,_, MATH_NNP )_) the_DT family_NN of_IN facets_NNS containing_VBG none_NN of_IN (_( respectively_RB ,_, both_DT )_) MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP of_IN coset_NN representatives_NNS for_IN the_DT NAME_NNP operator_NN MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB now_RB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN the_DT approximation_NN ratio_NN of_IN MATH_NNP on_IN MATH_NNP is_VBZ strictly_RB smaller_JJR than_IN MATH_NNP ,_, and_CC the_DT approximation_NN ratio_NN of_IN MATH_NNP on_IN MATH_NNP is_VBZ at_RB least_JJS MATH_NNP ._.
Partition_VB the_DT set_NN of_IN indices_NNS MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP if_IN MATH_NNP ,_, and_CC MATH_NNP otherwise_RB ._.
Partition_VB the_DT variable_JJ set_NN MATH_NNP into_IN MATH_NNP blocks_NNS MATH_NNP ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS each_DT of_IN size_NN MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT collection_NN of_IN the_DT MATH_NNP unions_NNS of_IN the_DT parts_NNS ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN buckets_NNS of_IN the_DT form_NN MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN MATH_NNP sets_NNS of_IN size_NN at_IN most_JJS MATH_NNP and_CC color_NN each_DT set_NN with_IN a_DT different_JJ color_NN ._.
Partition_VB each_DT MATH_NNP into_IN equal_JJ intervals_NNS MATH_NNP ,_, so_IN that_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT two_CD sets_NNS :_: MATH_NNP ,_, the_DT square_JJ MATH_NNP ,_, and_CC MATH_NNP ,_, the_DT rectangle_NN MATH_NNP (_( REF_NNP )_) ._.
Partition_VB MATH_NNP into_IN a_DT square_JJ MATH_NNP of_IN edge_NN length_NN MATH_NNP and_CC a_DT rectangle_NN MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB a_DT subset_NN of_IN MATH_NNP into_IN MATH_NNP pairwise_NN disjoint_NN MATH_NNP sets_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP collections_NNS MATH_NNP of_IN size_NN MATH_NNP each_DT ,_, and_CC invoke_VB our_PRP$ algorithm_NN on_IN the_DT asymmetric_JJ instance_NN MATH_NNP ,_, MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN boxes_NNS of_IN the_DT form_NN MATH_NNP ._.
Partition_VB MATH_NNP further_RB (_( if_IN necessary_JJ )_) so_RB that_IN each_DT part_NN of_IN MATH_NNP is_VBZ a_DT minimal_JJ geodesic_NN in_IN MATH_NNP ._.
Partition_VB the_DT time_NN to_IN intervals_NNS of_IN size_NN of_IN MATH_NNP ._.
Partition_VB the_DT time_NN to_IN MATH_NNP pairs_NNS of_IN time_NN slots_NNS ,_, MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN the_DT 2_CD subsets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP disjoint_NN subsets_NNS MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP elements_NNS into_IN MATH_NNP parts_NNS ,_, namely_RB MATH_NNP ,_, where_WRB each_DT part_NN MATH_NNP is_VBZ of_IN cardinality_NN MATH_NNP ._.
Partition_VB the_DT precision_NN matrix_NN as_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP closed_VBD intervals_NNS MATH_NNP intersecting_VBG only_RB on_IN their_PRP$ boundaries_NNS ._.
Partition_VB MATH_NNP in_IN the_DT following_JJ way_NN ,_, MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT hypercube_NN vertices_VBZ into_IN two_CD sets_NNS depending_VBG on_IN the_DT MATH_NNP entry_NN ._.
Partition_VB MATH_NNP into_IN disjoint_NN parts_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB for_IN each_DT point_NN MATH_NNP ,_, we_PRP have_VBP MATH_NNP if_IN MATH_NNP ,_, and_CC MATH_NNP otherwise_RB ._.
Partition_VB MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, and_CC denote_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN 10_CD disjoint_NN subsets_NNS MATH_NNP ,_, each_DT of_IN size_NN at_IN least_JJS MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD MATH_NNP of_IN MATH_NNP into_IN the_DT vertex_NN sets_NNS of_IN two_CD induced_JJ subgraphs_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ the_DT neighbours_NNS of_IN the_DT terminals_NNS in_IN MATH_NNP ,_, namely_RB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP to_IN MATH_NNP consecutive_JJ parts_NNS MATH_NNP of_IN sizes_JJ MATH_NNP ,_, respectively_RB ,_, let_VB MATH_NNP for_IN all_DT MATH_NNP ,_, and_CC let_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS of_IN columns_NNS MATH_NNP and_CC MATH_NNP and_CC MATH_NNP into_IN sets_NNS of_IN rows_NNS MATH_NNP and_CC MATH_NNP ,_, so_IN that_IN MATH_NNP contains_VBZ the_DT MATH_NNP 's_POS from_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN buckets_NNS MATH_NNP each_DT of_IN size_NN MATH_NNP which_WDT gives_VBZ us_PRP a_DT partition_NN of_IN points_NNS MATH_NNP ._.
Partition_VB ,_, for_IN every_DT MATH_NNP ,_, the_DT lines_NNS MATH_NNP to_IN poor_JJ ones_NNS ,_, that_DT is_VBZ those_DT with_IN MATH_NNP ,_, and_CC otherwise_RB rich_JJ ._.
Partition_VB MATH_NNP and_CC note_NN that_IN MATH_NNP and_CC regularity_NN follows_VBZ by_IN REF_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP correspondingly_RB ,_, we_PRP then_RB have_VBP MATH_NNP ._.
Partition_VB MATH_NNP into_IN half-open_JJ rectilinear_JJ unit_NN cubes_NN ,_, and_CC denote_VB those_DT cubes_NNS in_IN this_DT partition_NN which_WDT intersect_VBP the_DT support_NN of_IN at_RB least_RBS one_CD of_IN MATH_NNP by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN half-open_JJ rectilinear_JJ unit_NN cubes_NN ,_, and_CC for_IN MATH_NNP ,_, denote_VBP those_DT cubes_NNS in_IN this_DT partition_NN which_WDT intersect_VBP the_DT support_NN of_IN MATH_NNP by_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP intervals_NNS ,_, closed_VBD on_IN the_DT left_JJ and_CC open_JJ on_IN the_DT right_NN ,_, and_CC define_VB each_DT of_IN MATH_NNP as_IN one_CD of_IN these_DT intervals_NNS (_( with_IN MATH_NNP ,_, for_IN MATH_NNP ,_, and_CC length_NN of_IN MATH_NNP equal_JJ to_IN MATH_NNP )_) ._.
Partition_VB this_DT into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB 1.2_CD :_: MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB 1.3_CD :_: MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB 2.2_CD :_: MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB 2.3_CD :_: MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT truncated_JJ cone_NN into_IN caps_NNS at_IN scale_NN MATH_NNP ._.
Partition_VB these_DT further_JJR into_IN sets_NNS MATH_NNP ,_, where_WRB MATH_NNP is_VBZ a_DT dyadic_JJ number_NN corresponding_VBG to_IN the_DT number_NN of_IN cubes_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT elements_NNS of_IN MATH_NNP into_IN two_CD classes_NNS :_: CASE_NNP :_: Class_NN 1_CD consists_NNS of_IN those_DT elements_NNS on_IN which_WDT the_DT algorithm_NN spends_VBZ strictly_RB more_JJR than_IN MATH_NNP queries_NNS during_IN round_JJ MATH_NNP ,_, and_CC CASE_NNP :_: Class_NN 2_CD consists_NNS of_IN those_DT elements_NNS on_IN which_WDT the_DT algorithm_NN spends_VBZ at_IN most_RBS MATH_NNP queries_NNS ._.
Partition_VB randomly_VBZ MATH_NNP into_IN MATH_NNP sets_NNS denoted_VBN by_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN degree_NN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP be_VB the_DT set_NN of_IN all_DT degree_NN MATH_NNP vertices_NNS which_WDT are_VBP not_RB incident_JJ with_IN any_DT of_IN the_DT edges_NNS MATH_NNP and_CC MATH_NNP be_VB the_DT remaining_VBG degree_NN MATH_NNP vertices_NNS ._.
Partition_VB the_DT covariance_NN MATH_NNP and_CC inverse_JJ covariance_NN MATH_NNP matrices_NNS of_IN the_DT entire_JJ graph_NN as_IN MATH_NNP where_WRB MATH_NNP in_IN REF_NNP since_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subpaths_NNS MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subpaths_NNS MATH_NNP where_WRB MATH_NNP for_IN MATH_NNP ,_, MATH_NNP for_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sub-multisets_NNS of_IN the_DT form_NN MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN equilength_NN subsets_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD sets_NNS ,_, depending_VBG on_IN where_WRB these_DT two_CD series_NN have_VBP their_PRP$ positive_JJ and_CC non-positive_JJ terms_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN pieces_NNS MATH_NNP ,_, MATH_NNP ,_, MATH_NNP such_JJ that_IN in_IN MATH_NNP the_DT vertex_NN MATH_NNP carries_VBZ the_DT greatest_JJS weight_NN ;_: in_IN particular_JJ ,_, this_DT weight_NN is_VBZ at_RB least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD horizontal_JJ slabs_NNS ,_, each_DT having_VBG height_NN MATH_NNP ,_, and_CC MATH_NNP vertical_JJ slabs_NNS ,_, each_DT having_VBG width_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB an_DT empty_JJ rectangle_NN MATH_NNP into_IN MATH_NNP empty_JJ squares_NNS MATH_NNP ,_, say_VBP MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB an_DT empty_JJ rectangle_NN MATH_NNP ,_, say_VBP MATH_NNP ,_, into_IN MATH_NNP empty_JJ MATH_NNP squares_NNS ,_, say_VBP MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB an_DT empty_JJ rectangle_NN MATH_NNP ,_, say_VBP MATH_NNP ,_, into_IN MATH_NNP empty_JJ squares_NNS MATH_NNP ,_, say_VBP MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB a_DT MATH_NNP empty_JJ rectangle_NN MATH_NNP into_IN MATH_NNP rectangles_NNS of_IN size_NN MATH_NNP ,_, say_VBP MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB an_DT empty_JJ MATH_NNP rectangle_NN ,_, say_VBP MATH_NNP ,_, into_IN MATH_NNP empty_JJ rectangles_NNS of_IN size_NN MATH_NNP ,_, say_VBP MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT color_NN classes_NNS of_IN MATH_NNP into_IN three_CD sets_NNS to_IN define_VB MATH_NNP ,_, an_DT exact_JJ MATH_NNP coloring_NN of_IN MATH_NNP ._.
Partition_VB the_DT collection_NN MATH_NNP of_IN faces_NNS in_IN MATH_NNP not_RB in_IN MATH_NNP into_IN primary_JJ and_CC secondary_JJ faces_NNS ,_, where_WRB MATH_NNP is_VBZ primary_JJ if_IN MATH_NNP and_CC secondary_JJ otherwise_RB ._.
Partition_VB MATH_NNP and_CC MATH_NNP so_IN that_DT CASE_NNP :_: if_IN MATH_NNP and_CC MATH_NNP ,_, MATH_NNP and_CC MATH_NNP are_VBP non-empty_JJ clopen_JJ intervals_NNS of_IN diameter_NN MATH_NNP ,_, CASE_NNP :_: if_IN MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, then_RB MATH_NNP ,_, and_CC CASE_NNP :_: if_IN MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ,_, then_RB MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP subsets_NNS according_VBG to_IN the_DT placement_NN of_IN all_DT MATH_NNP 's_POS in_IN positions_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN 4_CD sets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP such_JJ that_IN MATH_NNP for_IN all_DT MATH_NNP (_( note_NN that_IN this_DT can_MD be_VB done_VBN as_IN MATH_NNP and_CC MATH_NNP for_IN all_DT MATH_NNP )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP so_IN that_IN each_DT MATH_NNP is_VBZ countably_RB infinite_JJ ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB all_DT vertices_NNS in_IN MATH_NNP are_VBP distance_JJ MATH_NNP from_IN vertex_NN MATH_NNP and_CC all_DT vertices_NNS in_IN MATH_NNP are_VBP distance_JJ MATH_NNP from_IN MATH_NNP ._.
Partition_VB MATH_NNP further_RB into_IN MATH_NNP such_JJ that_IN each_DT vertex_NN in_IN MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP contain_VBP MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP pebbles_NNS respectively_RB ._.
Partition_VB the_DT unit_NN square_JJ into_IN squares_NNS of_IN side_NN length_NN equal_JJ to_IN MATH_NNP ._.
Partition_VB the_DT unit_NN square_NN into_IN a_DT set_NN MATH_NNP of_IN squares_NNS of_IN side_NN length_NN MATH_NNP ._.
Partition_VB the_DT unit_NN square_JJ into_IN squares_NNS of_IN side_NN length_NN MATH_NNP ._.
Partition_VB the_DT unit_NN square_JJ into_IN squares_NNS each_DT with_IN diagonal_JJ length_NN MATH_NNP ._.
Partition_VB the_DT unit_NN square_NN into_IN a_DT set_NN MATH_NNP of_IN squares_NNS with_IN diagonal_JJ length_NN MATH_NNP ._.
Partition_VB the_DT unit_NN square_NN into_IN sub-squares_NNS each_DT of_IN side_NN length_NN MATH_NNP ._.
Partition_VB the_DT staircase_NN region_NN into_IN vertical_JJ rectangles_NNS anchored_VBD at_IN the_DT untouchable_JJ points_NNS ,_, as_IN shown_VBN in_IN REF_NNP ._.
Partition_VB MATH_NNP to_IN partitions_NNS MATH_NNP ,_, and_CC MATH_NNP ,_, such_JJ that_IN REF_NNP MATH_NNP ,_, REF_NNP MATH_NNP where_WRB MATH_NNP denotes_VBZ the_DT set_NN of_IN border_NN vertices_NNS in_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN a_DT block_NN matrix_NN ,_, where_WRB MATH_NNP is_VBZ the_DT top-left_JJ block_NN ,_, and_CC MATH_NNP is_VBZ the_DT bottom-left_JJ block_NN ._.
Partition_VB these_DT lines_NNS into_IN maximal_JJ sets_NNS of_IN parallel_JJ lines_NNS ._.
Partition_VB the_DT input_NN range_NN MATH_NNP into_IN MATH_NNP ranges_NNS of_IN length_NN MATH_NNP and_CC call_VB them_PRP blocks_NNS ._.
Partition_VB the_DT interval_NN MATH_NNP using_VBG the_DT points_NNS MATH_NNP with_IN MATH_NNP ,_, then_RB we_PRP have_VBP MATH_NNP provided_VBD that_IN MATH_NNP ._.
Partition_VB classes_NNS MATH_NNP can_MD be_VB defined_VBN by_IN putting_VBG together_RB MATH_NNP pairs_NNS of_IN the_DT remaining_VBG MATH_NNP classes_NNS of_IN MATH_NNP ,_, they_PRP form_VBP a_DT double_JJ cover_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN clopen_JJ sets_NNS MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN equivalence_NN classes_NNS ,_, MATH_NNP ,_, where_WRB two_CD vertices_NNS are_VBP equivalent_JJ if_IN they_PRP are_VBP in_IN the_DT same_JJ connected_JJ component_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB the_DT notation_NN MATH_NNP is_VBZ defined_VBN in_IN the_DT proof_NN of_IN REF_NNP ._.
Partition_VB this_DT set_NN into_IN three_CD subsets_NNS :_: MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB Connector_NNP takes_VBZ as_IN input_NN MATH_NNP ,_, evaluates_VBZ the_DT polynomial_JJ MATH_NNP at_IN points_NNS chosen_VBN independently_RB and_CC uniformly_RB at_IN random_NN from_IN a_DT field_NN MATH_NNP of_IN size_NN MATH_NNP and_CC characteristic_JJ 2_CD and_CC returns_NNS Yes_NNP if_IN and_CC only_RB if_IN the_DT polynomial_NN does_VBZ not_RB vanish_VB at_IN the_DT chosen_NN points_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ,_, and_CC let_VB MATH_NNP ._.
Partition_VB MATH_NNP to_IN layers_NNS MATH_NNP according_VBG to_IN their_PRP$ distance_NN from_IN MATH_NNP ,_, and_CC recall_NN that_IN edges_NNS inside_IN each_DT layer_NN are_VBP always_RB back_RB edges_NNS ._.
Partition_VB the_DT vector_NN MATH_NNP into_IN interior_JJ hydraulic_JJ and_CC other_JJ components_NNS ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP such_JJ that_IN MATH_NNP (_( or_CC ,_, if_IN this_DT is_VBZ not_RB possible_JJ ,_, as_RB close_JJ as_IN possible_JJ )_) ._.
Partition_VB the_DT set_NN of_IN quadratic_JJ terms_NNS according_VBG to_IN the_DT multi-index_JJ MATH_NNP ,_, and_CC consider_VBP the_DT terms_NNS MATH_NNP in_IN a_DT single_JJ component_NN of_IN the_DT partition_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP grid_NN cells_NNS along_IN the_DT direction_NN of_IN MATH_NNP ;_: each_DT cell_NN is_VBZ of_IN size_NN MATH_NNP or_CC MATH_NNP (_( REF_NNP )_) ._.
Partition_VB the_DT MATH_NNP pebbles_VBZ into_IN MATH_NNP equitable_JJ parts_NNS (_( or_CC as_RB equitable_JJ as_IN possible_JJ )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP connected_VBD semi-algebraic_JJ sets_NNS so_RB that_IN on_IN each_DT set_NN MATH_NNP ,_, each_DT of_IN MATH_NNP vary_VBP by_IN at_RB most_RBS an_DT additive_JJ factor_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP in_IN a_DT disjoint_NN union_NN of_IN MATH_NNP sets_VBZ MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN MATH_NNP sets_NNS ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP where_WRB the_DT former_JJ denotes_VBZ the_DT collection_NN of_IN paths_NNS in_IN MATH_NNP whose_WP$ second_JJ vertex_NN has_VBZ at_RB least_JJS MATH_NNP in-neighbours_NNS in_IN MATH_NNP ,_, and_CC the_DT latter_JJ denotes_VBZ the_DT collection_NN of_IN remaining_VBG paths_NNS ._.
Partition_VB MATH_NNP in_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP by_IN setting_VBG MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC set_VBD the_DT notation_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP where_WRB the_DT columns_NNS of_IN MATH_NNP are_VBP in_IN the_DT MATH_NNP block_NN MATH_NNP and_CC let_VB MATH_NNP ._.
Partition_VB MATH_NNP into_IN cubes_JJ MATH_NNP of_IN side_NN length_NN MATH_NNP ,_, and_CC sort_RB each_DT cube_NN MATH_NNP into_IN sets_NNS MATH_NNP according_VBG to_IN the_DT dyadic_JJ value_NN MATH_NNP of_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP of_IN equal_JJ cardinality_NN ,_, where_WRB MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB the_DT ball_NN MATH_NNP into_IN annuli_JJ MATH_NNP ._.
Partition_VB the_DT set_NN of_IN indeterminates_NNS in_IN MATH_NNP into_IN four_CD quadrants_NNS with_IN respect_NN to_IN MATH_NNP ,_, and_CC let_VB MATH_NNP be_VB the_DT set_NN of_IN indeterminates_NNS in_IN MATH_NNP in_IN the_DT top-left_JJ ,_, top-right_JJ ,_, bottom-left_JJ ,_, and_CC bottom-right_JJ quadrants_NNS respectively_RB ._.
Partition_VB MATH_NNP conformably_RB with_IN the_DT partition_NN in_IN REF_NNP ._.
Partition_VB the_DT index_NN set_VBD MATH_NNP of_IN the_DT product_NN (_( which_WDT is_VBZ just_RB the_DT set_NN of_IN places_NNS of_IN MATH_NNP not_RB in_IN MATH_NNP )_) into_IN MATH_NNP pieces_NNS :_: MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN stacks_NNS MATH_NNP indexed_VBP by_IN MATH_NNP ._.
Partition_VB MATH_NNP conformably_RB with_IN MATH_NNP ,_, to_IN write_VB MATH_NNP ._.
Partition_VB the_DT graph_NN into_IN MATH_NNP subgraphs_FW MATH_NNP ,_, by_IN letting_VBG each_DT vertex_NN independently_RB pick_VB a_DT subgraph_NN uniformly_RB at_IN random_NN ._.
Partition_VB MATH_NNP by_IN dividing_VBG each_DT coordinate_NN axis_NN corresponding_VBG to_IN a_DT component_NN of_IN the_DT MATH_NNP NAME_NNP space_NN MATH_NNP into_IN MATH_NNP intervals_NNS of_IN equal_JJ length_NN ._.
Partition_VB MATH_NNP into_IN subsequences_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP has_VBZ only_RB the_DT first_JJ operation_NN of_IN every_DT distinct_JJ item_NN in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP copies_NNS MATH_NNP of_IN itself_PRP satisfying_VBG the_DT conditions_NNS from_IN REF_NNP ._.
Partition_VB the_DT matrix_NN as_IN MATH_NNP ,_, where_WRB the_DT square_JJ submatrix_NN MATH_NNP contains_VBZ the_DT first_JJ MATH_NNP columns_NNS ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN two_CD graphs_NNS MATH_NNP on_IN the_DT same_JJ vertex_NN set_VBD as_IN MATH_NNP :_: the_DT edge_NN set_NN of_IN MATH_NNP consists_VBZ of_IN all_DT edges_NNS whose_WP$ endpoints_NNS lie_VBP in_IN the_DT same_JJ block_NN of_IN MATH_NNP ,_, while_IN the_DT edge_NN set_NN of_IN MATH_NNP consists_VBZ of_IN all_DT edges_NNS whose_WP$ endpoints_NNS lie_VBP in_IN different_JJ blocks_NNS of_IN MATH_NNP ._.
Partition_VB the_DT NAME_NNP tour_NN MATH_NNP into_IN two_CD or_CC three_CD directed_JJ trails_NNS :_: CASE_NNP :_: MATH_NNP and_CC MATH_NNP if_IN MATH_NNP and_CC MATH_NNP is_VBZ even_RB ,_, CASE_NNP :_: MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP if_IN MATH_NNP and_CC MATH_NNP is_VBZ odd_JJ ,_, and_CC CASE_NNP :_: MATH_NNP and_CC MATH_NNP if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD subsets_NNS MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP randomly_RB into_IN MATH_NNP sets_VBZ MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP randomly_RB into_IN MATH_NNP sets_VBZ MATH_NNP ,_, with_IN each_DT colour_NN ending_VBG up_RP in_IN each_DT set_NN independently_RB with_IN probability_NN MATH_NNP ._.
Partition_VB the_DT colours_NNS independently_RB at_IN random_NN into_IN sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sublattices_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP is_VBZ a_DT translation_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD disjoint_NN sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN REF_NNP the_DT vectors_NNS MATH_NNP are_VBP linearly_JJ independent_JJ ;_: and_CC REF_NNP all_DT vectors_NNS in_IN MATH_NNP are_VBP linear_JJ combinations_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD disjoint_NN subsets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, the_DT encoding_VBG rounds_NNS at_IN NAME_NNP and_CC NAME_NNP side_NN ,_, respectively_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB now_RB MATH_NNP into_IN disjoint_NN subsets_NNS such_JJ that_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC ,_, for_IN every_DT MATH_NNP ,_, all_DT elements_NNS of_IN MATH_NNP are_VBP pairwise_JJ disjoint_NN (_( such_PDT a_DT partitioning_NN corresponds_VBZ to_IN partitioning_VBG the_DT complete_JJ graph_NN MATH_NNP into_IN MATH_NNP perfect_JJ matchings_NNS )_) ._.
Partition_VB MATH_NNP so_IN that_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD subregions_NNS ,_, MATH_NNP as_IN illustrated_VBN in_IN REF_NNP where_WRB MATH_NNP is_VBZ a_DT square_JJ with_IN side-length_JJ MATH_NNP for_IN some_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD groups_NNS :_: CASE_NNP :_: MATH_NNP :_: Clauses_NNS MATH_NNP such_JJ that_IN at_RB least_RBS one_CD clause_NN of_IN MATH_NNP in_IN MATH_NNP is_VBZ not_RB satisfied_VBN by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP of_IN roughly_RB the_DT same_JJ size_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, MATH_NNP ,_, each_DT of_IN MATH_NNP elements_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP many_JJ dyadic_JJ squares_NNS with_IN side_NN length_NN MATH_NNP ,_, and_CC denote_NN by_IN MATH_NNP the_DT collection_NN of_IN these_DT boxes_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP many_JJ dyadic_JJ squares_NNS with_IN side_NN length_NN MATH_NNP ,_, and_CC we_PRP denote_VBP the_DT collection_NN of_IN such_JJ squares_NNS as_IN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subcubes_NNS of_IN side_NN length_NN MATH_NNP in_IN each_DT dimension_NN ._.
Partition_VB the_DT matrix_NN MATH_NNP as_IN MATH_NNP and_CC use_VB the_DT inversion_NN formula_NN MATH_NNP to_TO obtain_VB MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN MATH_NNP parts_NNS MATH_NNP ,_, MATH_NNP ,_, of_IN MATH_NNP vertices_NNS each_DT ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB this_DT square_NN into_IN MATH_NNP congruent_JJ subsquares_NNS of_IN side_NN MATH_NNP ._.
Partition_VB the_DT square_JJ MATH_NNP into_IN four_CD equal_JJ quadrants_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP square_JJ tiles_NNS of_IN side_NN MATH_NNP ._.
Partition_VB matroid_NN MATH_NNP is_VBZ a_DT typical_JJ instance_NN of_IN matroids_NNS ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN for_IN each_DT MATH_NNP and_CC no_DT MATH_NNP we_PRP have_VBP MATH_NNP ._.
Partition_VB MATH_NNP into_IN right_JJ cosets_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP to_IN subsets_NNS as_IN follows_VBZ ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP defined_VBD by_IN MATH_NNP so_IN that_IN MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT stream_NN into_IN consecutive_JJ intervals_NNS of_IN length_NN MATH_NNP ,_, which_WDT we_PRP will_MD draw_VB in_IN batches_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP and_CC let_VB MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ,_, respectively_RB ,_, with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP with_IN a_DT large_JJ constant_JJ MATH_NNP ._.
Partition_VB each_DT MATH_NNP into_IN a_DT forest_NN MATH_NNP and_CC a_DT MATH_NNP matching_NN MATH_NNP according_VBG to_IN REF_NNP in_IN linear_JJ time_NN ._.
Partition_VB the_DT nodes_NNS of_IN MATH_NNP into_IN the_DT following_JJ sets_NNS :_: CASE_NNP :_: the_DT set_VBN MATH_NNP of_IN bad_JJ nodes_NNS ;_: CASE_NNP :_: the_DT set_VBN MATH_NNP of_IN leaves_NNS ;_: CASE_NNP :_: the_DT set_VBN MATH_NNP of_IN nodes_NNS having_VBG degree_NN at_RB least_RBS 3_CD ;_: CASE_NNP :_: the_DT set_VBN MATH_NNP of_IN nodes_NNS having_VBG degree_NN 2_CD that_DT are_VBP not_RB bad_JJ ._.
Partition_VB the_DT numbers_NNS colored_VBN with_IN MATH_NNP into_IN blocks_NNS of_IN MATH_NNP consecutive_JJ numbers_NNS ,_, where_WRB only_RB the_DT last_JJ block_NN may_MD have_VB fewer_JJR than_IN MATH_NNP numbers_NNS ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP ,_, and_CC for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP where_WRB MATH_NNP contains_VBZ all_DT vertices_NNS with_IN degree_JJ MATH_NNP and_CC MATH_NNP contain_VBP all_DT vertices_NNS of_IN degree_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN sets_NNS ,_, MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT indices_NNS MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT edge_NN set_VBD MATH_NNP into_IN two_CD classes_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ all_DT edges_NNS with_IN both_DT endpoints_NNS in_IN the_DT same_JJ vertex_NN set_VBD MATH_NNP or_CC MATH_NNP ,_, and_CC the_DT edges_NNS of_IN MATH_NNP have_VBP one_CD endpoint_NN in_IN MATH_NNP and_CC the_DT other_JJ endpoint_NN in_IN MATH_NNP ._.
Partition_VB the_DT eigenvalues_NNS by_IN the_DT value_NN at_IN MATH_NNP ,_, and_CC call_VB these_DT distinct_JJ values_NNS MATH_NNP ._.
Partition_VB the_DT nodes_NNS of_IN MATH_NNP into_IN paths_NNS such_JJ that_IN each_DT path_NN starts_VBZ at_IN a_DT nonroot_NN leaf_NN ,_, for_IN example_NN ,_, by_IN running_VBG a_DT BFS_NNP from_IN each_DT such_JJ leaf_NN simultaneously_RB following_VBG edges_NNS towards_VBP the_DT root_NN or_CC using_VBG a_DT heavy-path_JJ decomposition_NN ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP is_VBZ a_DT cycle_NN of_IN MATH_NNP and_CC MATH_NNP is_VBZ a_DT crossing_NN ._.
Partition_VB the_DT range_NN of_IN MATH_NNP into_IN infinite_JJ sets_NNS ,_, MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN weights_NNS in_IN blocks_NNS with_IN total_JJ mass_NN at_IN least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT congruences_NNS according_VBG to_IN their_PRP$ moduli_NN obtaining_VBG the_DT equations_NNS MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT basis_NN of_IN MATH_NNP vectors_NNS into_IN three_CD blocks_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB :_: Given_VBN a_DT finite_JJ set_NN MATH_NNP and_CC a_DT size_NN MATH_NNP for_IN each_DT MATH_NNP ,_, is_VBZ there_EX a_DT subset_NN MATH_NNP such_JJ that_IN MATH_NNP ?_.
Partition_VB the_DT cube_NN MATH_NNP into_IN hypercubes_JJ MATH_NNP of_IN side_NN length_NN MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS ,_, MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP is_VBZ the_DT subset_NN of_IN vertices_NNS in_IN MATH_NNP that_DT are_VBP adjacent_JJ to_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP where_WRB MATH_NNP if_IN and_CC only_RB if_IN there_EX is_VBZ a_DT triangle_NN in_IN the_DT common_JJ neighborhood_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP has_VBZ order_NN type_NN MATH_NNP ,_, MATH_NNP has_VBZ order_NN type_NN MATH_NNP ,_, and_CC every_DT element_NN of_IN MATH_NNP is_VBZ MATH_NNP greater_JJR than_IN every_DT element_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT initial_JJ copy_NN of_IN MATH_NNP but_CC without_IN the_DT element_NN MATH_NNP ,_, and_CC MATH_NNP is_VBZ the_DT final_JJ copy_NN of_IN MATH_NNP ,_, with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP are_VBP the_DT vertices_NNS resulting_VBG from_IN the_DT contractions_NNS of_IN non-terminal_JJ non_JJ MATH_NNP vertices_NNS ._.
Partition_VB the_DT feasible_JJ region_NN into_IN MATH_NNP sets_NNS each_DT defined_VBN by_IN which_WDT weights_NNS are_VBP zero_CD ._.
Partition_VB MATH_NNP into_IN cubes_NN of_IN side-length_JJ MATH_NNP ._.
Partition_VB ,_, we_PRP start_VBP by_IN computing_VBG a_DT MATH_NNP packing_NN MATH_NNP ._.
Partition_VB satisfying_VBG MATH_NNP by_IN REF_NNP ._.
Partition_VB the_DT vertices_NNS using_VBG MATH_NNP into_IN MATH_NNP ,_, and_CC MATH_NNP ,_, where_WRB MATH_NNP contains_VBZ vertices_NNS connected_VBD to_IN MATH_NNP or_CC MATH_NNP in_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN two_CD sets_NNS :_: MATH_NNP and_CC MATH_NNP (_( REF_NNP )_) ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP into_IN MATH_NNP copies_NNS of_IN MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB each_DT MATH_NNP is_VBZ the_DT nonempty_JJ intersection_NN of_IN MATH_NNP with_IN some_DT left_JJ coset_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT family_NN of_IN non-empty_JJ intervals_NNS MATH_NNP with_IN the_DT following_JJ properties_NNS :_: CASE_NNP :_: For_IN every_DT odd_JJ MATH_NNP and_CC every_DT MATH_NNP ,_, we_PRP have_VBP MATH_NNP ._.
Partition_VB the_DT strings_NNS MATH_NNP into_IN pairs_JJ MATH_NNP by_IN defining_VBG MATH_NNP to_TO be_VB MATH_NNP with_IN MATH_NNP and_CC MATH_NNP flipped_VBD ._.
Partition_VB the_DT strings_NNS MATH_NNP into_IN pairs_JJ MATH_NNP by_IN defining_VBG MATH_NNP to_TO be_VB MATH_NNP with_IN the_DT MATH_NNP bit_NN of_IN MATH_NNP flipped_VBD ._.
Partition_VB the_DT strings_NNS in_IN MATH_NNP into_IN pairs_JJ MATH_NNP by_IN defining_VBG MATH_NNP to_TO be_VB MATH_NNP with_IN the_DT first_JJ through_IN MATH_NNP bits_NNS in_IN MATH_NNP flipped_VBD ._.
Partition_VB (_( up_RP to_TO measure_VB zero_CD overlap_JJ )_) MATH_NNP into_IN dyadic_JJ cubes_NNS MATH_NNP of_IN side_NN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN consecutive_JJ subintervals_NNS MATH_NNP such_JJ that_IN MATH_NNP ,_, for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ consecutive_JJ small_JJ intervals_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_NNS of_IN MATH_NNP vertices_NNS ,_, and_CC possibly_RB one_CD additional_JJ set_NN of_IN less_JJR than_IN MATH_NNP vertices_NNS ;_: denote_VB these_DT sets_NNS by_IN MATH_NNP where_WRB MATH_NNP ;_: if_IN MATH_NNP then_RB add_VB additional_JJ vertices_NNS to_IN MATH_NNP to_TO make_VB its_PRP$ cardinality_NN equal_JJ to_IN MATH_NNP (_( it_PRP does_VBZ not_RB matter_VB which_WDT vertices_NNS are_VBP added_VBN )_) ._.
Partition_VB these_DT orbits_NNS into_IN two_CD parts_NNS ,_, called_VBD red_JJ and_CC blue_JJ ,_, in_IN any_DT manner_NN ._.
Partition_VB the_DT projective_JJ line_NN into_IN MATH_NNP ,_, and_CC consider_VBP any_DT section_NN MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN cycles_NNS ,_, and_CC consider_VBP each_DT cycle_NN one_CD by_IN one_CD ._.
Partition_VB MATH_NNP into_IN equal_JJ intervals_NNS MATH_NNP of_IN length_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD into_IN sets_NNS MATH_NNP each_DT consisting_VBG of_IN MATH_NNP vertices_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP (_( with_IN MATH_NNP possibly_RB empty_JJ )_) such_JJ that_IN ,_, for_IN all_DT MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP so_IN that_IN the_DT path_NN segment_NN MATH_NNP belongs_VBZ to_IN exactly_RB one_CD MATH_NNP ,_, MATH_NNP ,_, or_CC MATH_NNP ._.
Partition_VB takes_VBZ a_DT tree_NN as_IN the_DT input_NN ,_, then_RB it_PRP partitions_VBZ the_DT tree_NN by_IN calling_VBG itself_PRP for_IN the_DT subtrees_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP each_DT of_IN size_NN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN MATH_NNP coordinates_VBZ into_IN MATH_NNP groups_NNS of_IN size_NN MATH_NNP each_DT (_( we_PRP assume_VBP that_IN MATH_NNP divides_VBZ MATH_NNP )_) ._.
Partition_VB the_DT set_NN of_IN MATH_NNP coordinates_VBZ into_IN MATH_NNP groups_NNS of_IN size_NN MATH_NNP each_DT ._.
Partition_VB REF_NNP (_( with_IN MATH_NNP in_IN placed_NN of_IN MATH_NNP )_) says_VBZ that_IN MATH_NNP is_VBZ a_DT partition_NN of_IN MATH_NNP ._.
Partition_VB REF_NNP implies_VBZ that_IN MATH_NNP and_CC MATH_NNP is_VBZ non-zero_JJ ,_, by_IN REF_NNP ,_, so_IN MATH_NNP for_IN some_DT MATH_NNP in_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN all_DT (_( non-constant_JJ )_) NAME_NNP utilities_NNS MATH_NNP so_RB that_IN two_CD NAME_NNP utilities_NNS within_IN an_DT element_NN of_IN the_DT partition_NN represent_VBP the_DT same_JJ EU-preference_NNP over_IN MATH_NNP and_CC so_RB that_IN distinct_JJ elements_NNS of_IN the_DT partition_NN represent_NN distinct_VBZ EU-preferences_NNS ._.
Partition_VB the_DT segment_NN MATH_NNP into_IN intervals_NNS MATH_NNP ._.
Partition_VB MATH_NNP describes_VBZ the_DT first_JJ application_NN of_IN the_DT procedure_NN (_( this_DT is_VBZ why_WRB MATH_NNP )_) ,_, partition_NN MATH_NNP the_DT second_JJ ,_, and_CC so_RB on_IN ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP parts_NNS ,_, and_CC let_VB MATH_NNP be_VB the_DT restriction_NN of_IN MATH_NNP (_( respectively_RB )_) to_IN the_DT MATH_NNP part_NN ._.
Partition_VB the_DT set_NN of_IN agents_NNS MATH_NNP into_IN two_CD disjoint_NN subsets_NNS :_: MATH_NNP with_IN MATH_NNP agents_NNS and_CC MATH_NNP with_IN MATH_NNP agents_NNS ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS ,_, MATH_NNP and_CC MATH_NNP ,_, such_JJ that_IN ,_, for_IN each_DT fault-free_JJ node_NN MATH_NNP ,_, MATH_NNP ,_, and_CC for_IN each_DT fault-free_JJ node_NN MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT plane_NN into_IN squares_NNS of_IN side_NN MATH_NNP ._.
Partition_VB the_DT numbers_NNS MATH_NNP of_IN knotoid_NN shadows_NNS with_IN MATH_NNP crossings_NNS by_IN geodesic_JJ distance_NN :_: Let_NNP MATH_NNP be_VB the_DT number_NN of_IN MATH_NNP crossing_VBG knotoid_NN shadows_NNS of_IN geodesic_JJ distance_NN MATH_NNP ,_, so_IN that_IN MATH_NNP (_( MATH_NNP is_VBZ an_DT upper_JJ bound_NN on_IN geodesic_JJ distance_NN ;_: MATH_NNP is_VBZ even_RB more_RBR trivial_JJ as_IN it_PRP is_VBZ the_DT number_NN of_IN edges_NNS ,_, and_CC would_MD equally_RB suffice_VB )_) ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN subintervals_NNS MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT rows_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP as_IN follows_VBZ ._.
Partition_VB each_DT MATH_NNP into_IN two_CD intervals_NNS MATH_NNP of_IN length_NN at_RB least_JJS MATH_NNP ,_, centered_VBD respectively_RB in_IN MATH_NNP ._.
Partition_VB blocks_NNS of_IN MATH_NNP into_IN the_DT following_JJ 4_CD types_NNS of_IN blocks_NNS :_: CASE_NNP :_: Full_NN blocks_NNS that_WDT match_NN completely_RB to_IN another_DT full_JJ block_NN in_IN MATH_NNP ._.
Partition_VB the_DT MATH_NNP positive_JJ definite_NN matrix_NN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP ,_, and_CC MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP matrices_NNS with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT set_NN of_IN paths_NNS MATH_NNP ,_, where_WRB MATH_NNP for_IN MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP naturally_RB induces_VBZ a_DT generalised_JJ partition_NN (_( some_DT parts_NNS may_MD be_VB empty_JJ )_) of_IN MATH_NNP whose_WP$ parts_NNS are_VBP denoted_VBN MATH_NNP ,_, with_IN MATH_NNP :_: MATH_NNP is_VBZ the_DT subset_NN of_IN nodes_NNS of_IN MATH_NNP whose_WP$ parent_NN belongs_NNS to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT minimal_JJ number_NN of_IN segments_NNS such_JJ that_IN each_DT segment_NN is_VBZ fully_RB contained_VBN in_IN one_CD of_IN the_DT regions_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS of_IN size_NN MATH_NNP ,_, except_IN for_IN the_DT last_JJ block_NN which_WDT may_MD have_VB size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS of_IN size_NN MATH_NNP ,_, except_IN for_IN some_DT block_NN besides_IN the_DT first_JJ or_CC last_JJ which_WDT may_MD have_VB size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD vectors_NNS ,_, MATH_NNP and_CC MATH_NNP with_IN the_DT former_JJ being_VBG MATH_NNP and_CC the_DT latter_JJ being_VBG MATH_NNP ._.
Partition_VB the_DT vertex_NN set_VBD MATH_NNP into_IN two_CD almost_RB equal_JJ sets_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP of_IN approximately_RB equal_JJ size_NN ,_, and_CC similarly_RB partition_NN MATH_NNP into_IN sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ``_`` cubes_NNS ''_'' MATH_NNP with_IN side_NN length_NN MATH_NNP and_CC centers_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP with_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP each_DT of_IN order_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN subsets_VBZ MATH_NNP 's_POS such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN paths_NNS MATH_NNP that_IN are_VBP MATH_NNP close_NN to_IN the_DT corresponding_JJ paths_NNS MATH_NNP of_IN the_DT HCS_NNP ``_`` splitting_NN ''_'' step_NN ,_, by_IN introducing_VBG split_NN points_NNS as_IN follows_VBZ :_: For_IN each_DT nailed_JJ visit_NN to_IN an_DT obstacle_NN MATH_NNP ,_, we_PRP choose_VBP a_DT split_NN point_NN that_WDT is_VBZ within_IN distance_NN MATH_NNP of_IN MATH_NNP and_CC lies_VBZ on_IN a_DT triangle_NN edge_NN (_( where_WRB the_DT implicit_JJ constant_NN depends_VBZ only_RB on_IN MATH_NNP )_) ._.
Partition_VB the_DT unit_NN interval_JJ MATH_NNP into_IN intervals_NNS MATH_NNP where_WRB MATH_NNP has_VBZ length_VBN MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD subcollections_NNS using_VBG these_DT definitions_NNS ._.
Partition_VB the_DT vertices_NNS of_IN the_DT MATH_NNP graph_NN to_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ,_, where_WRB each_DT MATH_NNP is_VBZ the_DT set_NN of_IN MATH_NNP so_RB that_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP to_IN :_: CASE_NNP :_: MATH_NNP ._.
Partition_VB MATH_NNP in_IN the_DT following_JJ way_NN :_: pick_VB any_DT vertex_NN MATH_NNP and_CC set_VBD MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB the_DT sets_NNS MATH_NNP are_VBP infinite_JJ and_CC disjoint_NN ._.
Partition_VB the_DT vertices_NNS into_IN 8_CD sets_NNS MATH_NNP with_IN the_DT following_JJ sizes_NNS :_: 2_CD CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN MATH_NNP sets_NNS ._.
Partition_VB the_DT users_NNS into_IN sets_NNS of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP by_IN rows_NNS into_IN MATH_NNP submatrices_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP by_IN rows_NNS into_IN MATH_NNP sub-matrices_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT line_NN MATH_NNP into_IN the_DT following_JJ three_CD segments_NNS :_: MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN intervals_NNS MATH_NNP ,_, where_WRB MATH_NNP such_PDT that_IN MATH_NNP comprises_VBZ vertices_NNS MATH_NNP of_IN MATH_NNP satisfying_VBG MATH_NNP ;_: since_IN the_DT length_NN of_IN MATH_NNP is_VBZ smaller_JJR than_IN MATH_NNP ,_, each_DT of_IN the_DT vertices_NNS of_IN MATH_NNP is_VBZ placed_VBN in_IN one_CD of_IN these_DT intervals_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN sets_VBZ MATH_NNP for_IN every_DT MATH_NNP ,_, according_VBG to_IN the_DT subtree_JJ MATH_NNP in_IN which_WDT the_DT requests_NNS are_VBP ._.
Partition_VB the_DT vector_NN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP is_VBZ the_DT first_JJ element_NN of_IN MATH_NNP and_CC MATH_NNP is_VBZ the_DT vector_NN of_IN the_DT remaining_VBG elements_NNS ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP for_IN some_DT MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ MATH_NNP and_CC MATH_NNP is_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ MATH_NNP ,_, MATH_NNP is_VBZ MATH_NNP ,_, MATH_NNP is_VBZ MATH_NNP ,_, and_CC MATH_NNP is_VBZ MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP ,_, MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP ,_, MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP ,_, and_CC MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP ._.
Partition_VB the_DT MATH_NNP into_IN square_JJ plots_NNS of_IN side_NN length_NN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT edge_NN set_VBD MATH_NNP where_WRB MATH_NNP consists_VBZ of_IN the_DT finitely_RB many_JJ cross_VBP edges_NNS between_IN the_DT components_NNS of_IN MATH_NNP ,_, and_CC MATH_NNP consists_VBZ of_IN all_PDT the_DT edges_NNS that_WDT have_VBP both_DT endpoints_NNS attached_VBD to_IN the_DT same_JJ component_NN of_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN smaller_JJR intervals_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT countable_JJ number_NN of_IN NAME_NNP sets_NNS and_CC index_NN these_DT by_IN MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT cells_NNS of_IN MATH_NNP into_IN rows_NNS MATH_NNP counted_VBD from_IN NAME_NNP to_IN South_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN intervals_NNS MATH_NNP with_IN equal_JJ probabilities_NNS ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN axis_JJ parallel_JJ cubes_NNS MATH_NNP of_IN sidelength_NN MATH_NNP ._.
Partition_VB the_DT polynomials_NNS to_IN two_CD sets_NNS ._.
Partition_VB MATH_NNP to_IN three_CD sets_NNS MATH_NNP so_IN that_IN those_DT polynomials_NNS in_IN MATH_NNP satisfy_JJ REF_NNP of_IN REF_NNP with_IN with_IN MATH_NNP ,_, those_DT in_IN MATH_NNP satisfy_JJ REF_NNP of_IN REF_NNP with_IN MATH_NNP and_CC those_DT in_IN MATH_NNP satisfy_JJ REF_NNP of_IN REF_NNP with_IN both_DT MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT polynomials_NNS in_IN each_DT MATH_NNP to_TO two_CD sets_NNS ._.
Partition_VB the_DT set_NN MATH_NNP to_IN three_CD sets_NNS MATH_NNP so_IN that_IN :_: MATH_NNP ._.
Partition_VB each_DT MATH_NNP ,_, MATH_NNP ,_, into_IN NAME_NNP sets_VBZ MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB elements_NNS with_IN color_NN MATH_NNP coalesce_NN instantaneously_RB ._.
Partition_VB MATH_NNP into_IN MATH_NNP consecutive_JJ intervals_NNS MATH_NNP of_IN length_NN MATH_NNP each_DT ._.
Partition_VB the_DT remaining_VBG vertices_NNS into_IN the_DT following_JJ vertex_NN sets_VBZ :_: If_IN MATH_NNP is_VBZ joint_JJ to_IN less_JJR than_IN MATH_NNP vertices_NNS of_IN MATH_NNP and_CC is_VBZ joint_JJ to_IN more_JJR than_IN MATH_NNP vertices_NNS of_IN MATH_NNP ,_, then_RB MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP as_IN follows_VBZ :_: MATH_NNP comprises_VBZ all_DT edges_NNS with_IN one_CD endpoint_NN in_IN MATH_NNP and_CC the_DT other_JJ in_IN MATH_NNP ,_, whereas_IN MATH_NNP comprises_VBZ all_PDT the_DT remaining_VBG edges_NNS ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS ._.
Partition_VB the_DT domain_NN of_IN MATH_NNP into_IN MATH_NNP tuples_NNS which_WDT differ_VBP only_RB in_IN the_DT MATH_NNP and_CC the_DT last_JJ MATH_NNP ternary_JJ digits_NNS ._.
Partition_VB the_DT left_JJ side_NN of_IN the_DT equation_NN into_IN two_CD parts_NNS ._.
Partition_VB MATH_NNP using_VBG cylinders_NNS of_IN length_NN MATH_NNP and_CC denote_VB such_JJ partition_NN by_IN MATH_NNP ._.
Partition_VB first_RB MATH_NNP ._.
Partition_VB MATH_NNP into_IN adjacent_JJ intervals_NNS MATH_NNP (_( the_DT lengths_NNS of_IN which_WDT will_MD be_VB specified_VBN later_RB in_IN the_DT proof_NN )_) ._.
Partition_VB MATH_NNP into_IN three_CD parts_NNS as_IN follows_VBZ :_: MATH_NNP ._.
Partition_VB both_DT MATH_NNP and_CC MATH_NNP arbitrarily_RB into_IN `_`` blocks_NNS '_POS ,_, each_DT of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP consecutive_JJ column-blocks_NNS MATH_NNP ,_, each_DT containing_VBG MATH_NNP columns_NNS ._.
Partition_VB the_DT part_NN MATH_NNP into_IN MATH_NNP equal-sized_JJ subsets_NNS ,_, MATH_NNP ,_, letting_VBG MATH_NNP denote_VB the_DT size_NN of_IN these_DT sets_NNS ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS of_IN certificates_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN both_DT sets_NNS contain_VBP certificates_NNS signed_VBD by_IN at_IN most_JJS MATH_NNP distinct_JJ replicas_NN ._.
Partition_VB MATH_NNP into_IN two_CD subsets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN points_NNS in_IN MATH_NNP that_DT are_VBP either_RB bottom-left_JJ corners_NNS or_CC top-right_JJ corners_NNS of_IN the_DT bounding_NN boxes_NNS ,_, and_CC MATH_NNP is_VBZ the_DT set_NN of_IN points_NNS in_IN MATH_NNP that_DT are_VBP either_RB top-left_JJ corners_NNS or_CC bottom-right_JJ corners_NNS ._.
Partition_VB MATH_NNP into_IN intervals_NNS MATH_NNP of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS :_: searches/updates_NNS MATH_NNP and_CC insertions_NNS MATH_NNP and_CC deletions_NNS MATH_NNP ._.
Partition_VB MATH_NNP such_JJ that_IN MATH_NNP ,_, then_RB MATH_NNP ,_, MATH_NNP ,_, MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN cubes_NNS with_IN side_NN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS ,_, MATH_NNP ,_, of_IN sizes_JJ MATH_NNP ,_, respectively_RB ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP of_IN sizes_NNS MATH_NNP and_CC MATH_NNP ,_, respectively_RB ._.
Partition_VB the_DT paths_NNS MATH_NNP into_IN monochromatic_JJ subpaths_NNS and_CC bichromatic_JJ edges_NNS as_IN in_IN REF_NNP MATH_NNP admits_VBZ a_DT decomposition_NN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ a_DT set_NN of_IN at_IN most_JJS MATH_NNP monochromatic_JJ paths_NNS of_IN distinct_JJ colours_NNS and_CC MATH_NNP is_VBZ a_DT set_NN of_IN bichromatic_JJ edges_NNS such_JJ that_IN ,_, if_IN MATH_NNP are_VBP distinct_JJ ,_, then_RB they_PRP are_VBP coloured_VBN with_IN distinct_JJ pairs_NNS of_IN colours_NNS ._.
Partition_VB the_DT unit_NN interval_NN into_IN contiguous_JJ intervals_NNS MATH_NNP each_DT of_IN length_NN MATH_NNP ,_, using_VBG MATH_NNP such_JJ intervals_NNS (_( possibly_RB leaving_VBG a_DT small_JJ interval_NN near_IN 1_CD not_RB covered_VBN )_) ._.
Partition_VB MATH_NNP using_VBG the_DT balls_NNS MATH_NNP ,_, meaning_VBG let_NN MATH_NNP ,_, MATH_NNP ,_, and_CC so_RB on_IN ,_, so_IN that_DT MATH_NNP ._.
Partition_VB MATH_NNP by_IN the_DT time_NN and_CC position_NN at_IN times_NNS MATH_NNP and_CC MATH_NNP that_DT is_VBZ MATH_NNP ._.
Partition_VB edges_NNS of_IN MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN edges_NNS whose_WP$ weights_NNS are_VBP in_IN the_DT range_NN MATH_NNP ._.
Partition_VB ,_, where_WRB MATH_NNP ,_, we_PRP again_RB set_VBD MATH_NNP for_IN MATH_NNP ,_, and_CC apply_VB the_DT reduction_NN MATH_NNP to_IN MATH_NNP to_TO obtain_VB the_DT set_NN of_IN vectors_NNS MATH_NNP ._.
Partition_VB to_IN Diam-Clustering_NNP produces_VBZ the_DT instance_NN MATH_NNP of_IN Diam-Clustering_NNP ._.
Partition_VB MATH_NNP into_IN equivalence_NN classes_NNS such_JJ that_IN MATH_NNP are_VBP in_IN the_DT same_JJ class_NN if_IN they_PRP are_VBP identical_JJ on_IN all_DT coordinates_NNS except_IN possibly_RB coordinate_JJ MATH_NNP ._.
Partition_VB MATH_NNP in_IN the_DT same_JJ way_NN ._.
Partition_VB arbitrarily_RB the_DT set_NN of_IN the_DT last_JJ MATH_NNP coordinates_NNS MATH_NNP as_RB evenly_RB as_IN possible_JJ to_IN MATH_NNP subsets_NNS MATH_NNP each_DT of_IN size_NN MATH_NNP or_CC MATH_NNP ,_, and_CC define_VB the_DT vector_NN MATH_NNP to_TO be_VB MATH_NNP ._.
Partition_VB the_DT probability_NN space_NN according_VBG to_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB iteration_NN MATH_NNP from_IN left_JJ to_IN right_NN into_IN sub-iterations_NNS ,_, all_DT of_IN length_NN MATH_NNP ,_, except_IN the_DT last_JJ ,_, which_WDT is_VBZ of_IN length_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT blue_JJ edges_NNS of_IN MATH_NNP into_IN two_CD sets_NNS :_: those_DT connected_VBD either_RB to_IN MATH_NNP or_CC to_IN MATH_NNP by_IN a_DT sequence_NN of_IN blue_JJ edges_NNS (_( not_RB passing_VBG through_IN MATH_NNP in_IN REF_NNP that_IN MATH_NNP is_VBZ finite_JJ )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS ,_, where_WRB the_DT MATH_NNP block_NN is_VBZ MATH_NNP ._.
Partition_VB the_DT symbols_NNS into_IN two_CD categories_NNS :_: The_DT symbols_NNS MATH_NNP in_IN our_PRP$ partial_JJ transversal_NN are_VBP called_VBN small_JJ ,_, and_CC the_DT remaining_VBG symbols_NNS MATH_NNP are_VBP called_VBN large_JJ ._.
Partition_VB MATH_NNP ,_, then_RB REF_NNP is_VBZ equivalent_JJ to_IN MATH_NNP for_IN all_DT MATH_NNP ,_, and_CC hence_RB MATH_NNP can_MD be_VB chosen_VBN arbitrarily_RB and_CC every_DT choice_NN preserves_VBZ MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP classes_NNS MATH_NNP of_IN equal_JJ size_NN ,_, so_IN that_DT MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP consist_NN of_IN all_DT MATH_NNP with_IN MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT MATH_NNP with_IN MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN all_DT MATH_NNP with_IN MATH_NNP ,_, and_CC where_WRB MATH_NNP consists_VBZ of_IN all_DT MATH_NNP with_IN MATH_NNP and_CC MATH_NNP both_DT nonempty_NN ._.
Partition_VB MATH_NNP ,_, with_IN MATH_NNP consisting_VBG of_IN all_DT MATH_NNP with_IN MATH_NNP ,_, and_CC MATH_NNP consisting_VBG of_IN all_DT MATH_NNP with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN sets_NNS containing_VBG caps_NNS of_IN MATH_NNP whose_WP$ volumes_NNS differ_VBP by_IN a_DT factor_NN of_IN at_IN most_RBS 2_CD ._.
Partition_VB MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN those_DT atoms_NNS in_IN MATH_NNP that_DT are_VBP not_RB adjacent_JJ to_IN MATH_NNP ,_, and_CC MATH_NNP consists_NNS of_IN those_DT that_DT are_VBP adjacent_JJ to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN a_DT set_NN MATH_NNP of_IN (_( at_RB least_RBS one_CD )_) maximal_NN blocks_NNS of_IN subsequences_NNS of_IN MATH_NNP such_JJ that_IN each_DT subsequence_NN is_VBZ a_DT consecutive_JJ subsequence_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS ,_, collecting_VBG into_IN each_DT one_CD of_IN them_PRP elements_NNS having_VBG the_DT same_JJ value_NN for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS such_JJ that_IN MATH_NNP contains_VBZ vertices_NNS which_WDT gets_VBZ the_DT colors_NNS from_IN MATH_NNP and_CC MATH_NNP contains_VBZ vertices_NNS which_WDT gets_VBZ colors_NNS from_IN the_DT set_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB permutations_NNS in_IN MATH_NNP satisfy_CC REF_NNP and_CC permutations_NNS in_IN MATH_NNP do_VBP not_RB ._.
Partition_VB MATH_NNP with_IN both_DT MATH_NNP and_CC MATH_NNP cofinal_NN ._.
Partition_VB MATH_NNP into_IN two_CD cofinal_JJ subsets_NNS MATH_NNP and_CC MATH_NNP and_CC define_VB MATH_NNP and_CC note_NN that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP does_VBZ not_RB appear_VB in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN blocks_NNS MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP ``_`` excess_JJ buckets_NNS ''_'' as_IN follows_VBZ :_: for_IN each_DT positive_JJ integer_NN MATH_NNP ,_, form_NN a_DT bucket_NN MATH_NNP ._.
Partition_VB Input_NN :_: Positive_JJ integers_NNS MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN :_: MATH_NNP ._.
Partition_VB MATH_NNP conformally_RB with_IN REF_NNP ,_, and_CC write_VB MATH_NNP ,_, in_IN which_WDT MATH_NNP is_VBZ the_DT NAME_NNP matrix_NN norm_NN REF_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN sets_NNS of_IN the_DT form_NN MATH_NNP ,_, where_WRB MATH_NNP and_CC for_IN MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP by_IN sorting_VBG the_DT pre-images_NNS into_IN subsets_NNS of_IN size_NN as_RB close_JJ as_IN possible_JJ to_IN MATH_NNP but_CC no_DT smaller_JJR ,_, and_CC one_CD remainder_NN set_NN of_IN size_NN less_RBR than_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP such_JJ that_IN if_IN MATH_NNP ,_, and_CC MATH_NNP ,_, then_RB there_EX exists_VBZ at_RB least_RBS one_CD index_NN MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS MATH_NNP whose_WP$ sizes_NNS are_VBP all_DT divisible_JJ by_IN MATH_NNP and_CC are_VBP as_RB close_JJ to_IN each_DT other_JJ as_IN possible_JJ ._.
Partition_VB MATH_NNP as_IN MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT set_NN of_IN MATH_NNP such_JJ that_IN MATH_NNP is_VBZ symmetric_JJ ,_, and_CC MATH_NNP is_VBZ the_DT set_NN of_IN MATH_NNP such_JJ that_IN MATH_NNP is_VBZ asymmetric_JJ ,_, and_CC for_IN MATH_NNP there_EX exists_VBZ MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT shortest_JJS path_NN between_IN MATH_NNP and_CC MATH_NNP into_IN MATH_NNP segments_NNS MATH_NNP each_DT of_IN length_NN at_IN most_JJS MATH_NNP ,_, and_CC at_IN most_JJS MATH_NNP edges_NNS MATH_NNP between_IN consecutive_JJ segments_NNS ._.
Partition_VB the_DT lines_NNS in_IN MATH_NNP into_IN two_CD classes_NNS :_: REF_NNP those_DT whose_WP$ defining_VBG points_NNS MATH_NNP form_NN a_DT MATH_NNP edge_NN for_IN MATH_NNP ,_, and_CC REF_NNP those_DT whose_WP$ defining_VBG points_NNS MATH_NNP form_NN a_DT MATH_NNP edge_NN for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN boxes_NNS MATH_NNP ,_, each_DT of_IN side_NN length_NN MATH_NNP ,_, and_CC further_JJ let_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD equal_JJ sets_NNS MATH_NNP and_CC MATH_NNP of_IN size_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN MATH_NNP intervals_NNS MATH_NNP ,_, each_DT of_IN length_NN MATH_NNP ,_, and_CC say_VBP that_IN an_DT interval_JJ MATH_NNP is_VBZ good_JJ if_IN MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB the_DT interval_NN sufficiently_RB small_JJ MATH_NNP ,_, MATH_NNP so_IN that_IN we_PRP can_MD choose_VB MATH_NNP such_JJ that_IN MATH_NNP is_VBZ NAME_NNP on_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP and_CC MATH_NNP defined_VBD by_IN MATH_NNP where_WRB MATH_NNP at_IN MATH_NNP and_CC the_DT root_NN MATH_NNP is_VBZ equal_JJ to_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN those_DT unshared_JJ ,_, those_DT shared_VBN with_IN MATH_NNP ,_, and_CC those_DT shared_VBN with_IN MATH_NNP (_( Addition_NNP is_VBZ mod_JJ 3_CD )_) ._.
Partition_VB MATH_NNP into_IN a_DT set_NN MATH_NNP that_IN contains_VBZ all_DT edges_NNS of_IN the_DT form_NN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN finite_JJ pieces_NNS ,_, in_IN points_NNS denoted_VBD MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP (_( respectively_RB ,_, MATH_NNP )_) is_VBZ a_DT symmetric_JJ MATH_NNP (_( respectively_RB ,_, MATH_NNP )_) matrix_NN ._.
Partition_VB the_DT path_NN MATH_NNP into_IN MATH_NNP consecutive_JJ segments_NNS the_DT following_JJ way_NN :_: denote_NN MATH_NNP and_CC inductively_RB define_JJ MATH_NNP to_TO be_VB the_DT vertex_NN on_IN MATH_NNP at_IN distance_NN MATH_NNP on_IN the_DT segment_NN MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT path_NN MATH_NNP into_IN MATH_NNP consecutive_JJ segments_NNS from_IN MATH_NNP to_IN MATH_NNP in_IN the_DT following_JJ way_NN :_: denote_NN MATH_NNP ,_, and_CC for_IN every_DT MATH_NNP inductively_RB define_JJ MATH_NNP to_TO be_VB the_DT far-most_JJ vertex_NN on_IN MATH_NNP at_IN distance_NN at_IN most_JJS MATH_NNP from_IN MATH_NNP ._.
Partition_VB the_DT path_NN MATH_NNP into_IN consecutive_JJ segments_NNS in_IN the_DT following_JJ way_NN :_: denote_NN MATH_NNP and_CC inductively_RB ,_, given_VBN MATH_NNP define_JJ MATH_NNP to_TO be_VB the_DT furthest_JJS vertex_NN on_IN MATH_NNP at_IN distance_NN at_IN most_JJS MATH_NNP from_IN MATH_NNP ,_, where_WRB :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ;_: both_DT non-empty_JJ by_IN our_PRP$ assumption_NN that_IN MATH_NNP is_VBZ non-constant_JJ ._.
Partition_VB the_DT set_NN of_IN edges_NNS in_IN MATH_NNP into_IN mutually_RB exclusive_JJ sets_NNS MATH_NNP and_CC MATH_NNP based_VBN on_IN positive_JJ and_CC negative_JJ entries_NNS of_IN MATH_NNP ,_, respectively_RB ._.
Partition_VB the_DT set_NN MATH_NNP of_IN double_JJ subscripts_NNS into_IN two_CD disjoint_NN subsets_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN REF_NNP MATH_NNP for_IN each_DT MATH_NNP and_CC REF_NNP MATH_NNP for_IN each_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS ,_, corresponding_VBG to_IN the_DT schedules_NNS of_IN the_DT MATH_NNP crews_NNS in_IN MATH_NNP ,_, as_IN follows_VBZ :_: MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT subset_NN of_IN jobs_NNS in_IN MATH_NNP that_DT appear_NN in_IN the_DT MATH_NNP crew_NN 's_POS schedule_NN ._.
Partition_VB similarly_RB each_DT of_IN the_DT four_CD cartesian_JJ products_NNS in_IN REF_NNP into_IN three_CD classes_NNS ,_, according_VBG to_IN the_DT same_JJ three_CD possible_JJ connection_NN types_NNS for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP ._.
Partition_VB this_DT rectangle_NN into_IN MATH_NNP squares_NNS MATH_NNP of_IN side_NN length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD classes_NNS MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB all_DT MATH_NNP subsets_NNS of_IN MATH_NNP into_IN MATH_NNP classes_NNS MATH_NNP by_IN placing_VBG set_VBN MATH_NNP in_IN class_NN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS of_IN horizontal_JJ and_CC vertical_JJ segments_NNS ,_, say_VBP MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT monomials_NNS of_IN MATH_NNP into_IN three_CD groups_NNS :_: those_DT that_IN appear_VBP only_RB in_IN MATH_NNP ;_: they_PRP are_VBP multiplied_VBN by_IN MATH_NNP on_IN the_DT LHS_NNP and_CC by_IN MATH_NNP on_IN the_DT Right-hand_NNP side_NN Those_DT that_IN appear_VBP only_RB in_IN MATH_NNP ;_: they_PRP are_VBP multiplied_VBN by_IN MATH_NNP on_IN the_DT LHS_NNP and_CC by_IN MATH_NNP on_IN the_DT Right-hand_NNP side_NN For_IN a_DT monomial_JJ MATH_NNP that_IN appears_VBZ in_IN both_DT polynomials_NNS â€”_VBP possibly_RB with_IN different_JJ coefficients_NNS ,_, say_VBP MATH_NNP in_IN MATH_NNP and_CC MATH_NNP in_IN MATH_NNP ,_, we_PRP find_VBP MATH_NNP in_IN the_DT LHS_NNP ,_, and_CC MATH_NNP in_IN the_DT Right-hand_NNP side_NN
Partition_VB MATH_NNP ._.
Partition_VB asks_VBZ whether_IN MATH_NNP ._.
Partition_VB MATH_NNP arbitrarily_RB into_IN two_CD sets_NNS of_IN size_NN MATH_NNP ,_, denoted_VBD by_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD infinite_JJ sets_NNS ,_, and_CC let_VB MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD disjoint_NN sets_NNS MATH_NNP ,_, MATH_NNP and_CC MATH_NNP such_JJ that_IN ,_, MATH_NNP ._.
Partition_VB MATH_NNP as_IN follows_VBZ :_: CASE_NNP :_: MATH_NNP :_: governed_VBN by_IN MATH_NNP ,_, use_NN malloc_NN specification_NN ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP such_JJ that_IN MATH_NNP belong_IN to_IN the_DT same_JJ MATH_NNP if_IN and_CC only_RB if_IN ,_, for_IN any_DT MATH_NNP in_IN the_DT MATH_NNP chain_NN MATH_NNP ,_, MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB the_DT non-center_JJ vertices_NNS of_IN the_DT star_NN into_IN MATH_NNP sectors_NNS of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT unit_NN interval_NN into_IN MATH_NNP intervals_NNS MATH_NNP of_IN size_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN two_CD MATH_NNP cycles_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN adjacent_JJ intervals_NNS MATH_NNP ,_, with_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN nonempty_JJ subsets_NNS MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN disjoint_NN nonempty_JJ subsets_NNS MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT parameter_NN space_NN as_IN MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT parameter_NN space_NN as_IN MATH_NNP with_IN MATH_NNP where_WRB MATH_NNP be_VB the_DT set_NN of_IN values_NNS of_IN MATH_NNP such_JJ that_IN the_DT value_NN of_IN MATH_NNP implied_VBD by_IN MATH_NNP is_VBZ in_IN MATH_NNP ._.
Partition_VB ,_, for_IN dyadic_JJ MATH_NNP the_DT set_NN MATH_NNP of_IN pair-wise_JJ intersections_NNS of_IN lines_NNS in_IN MATH_NNP into_IN sets_NNS MATH_NNP ,_, consisting_VBG of_IN intersection_NN points_NNS where_WRB some_DT number_NN of_IN lines_NNS in_IN the_DT interval_JJ MATH_NNP lines_NNS meet_VBP ._.
Partition_VB every_DT MATH_NNP into_IN MATH_NNP blocks_NNS so_RB that_IN each_DT block_NN has_VBZ length_VBN MATH_NNP ._.
Partition_VB the_DT variable_JJ set_NN into_IN MATH_NNP parts_NNS ,_, each_DT having_VBG at_IN most_JJS MATH_NNP variables_NNS ._.
Partition_VB MATH_NNP into_IN layers_NNS MATH_NNP of_IN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP is_VBZ its_PRP$ complement_NN ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN (_( by_IN relabelling_VBG MATH_NNP if_IN necessary_JJ )_) MATH_NNP for_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD matchings_NNS MATH_NNP such_JJ that_IN for_IN each_DT MATH_NNP ,_, MATH_NNP ._.
Partition_VB Encoding_NNP Scheme_NNP is_VBZ upper_JJ bounded_VBN by_IN MATH_NNP where_WRB the_DT inequality_NN holds_VBZ due_JJ to_IN REF_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP non-overlapping_JJ sub-cubes_JJ MATH_NNP as_IN follows_VBZ :_: MATH_NNP for_IN any_DT index_NN MATH_NNP ._.
Partition_VB the_DT graph_NN into_IN sets_NNS of_IN vertices_NNS that_IN appear_JJ consecutively_RB in_IN the_DT clockwise_NN order_NN around_IN the_DT cycleREF_NN :_: MATH_NNP (_( each_DT of_IN size_NN MATH_NNP )_) ._.
Partition_VB the_DT variables_NNS MATH_NNP into_IN MATH_NNP parts_NNS of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT intervals_NNS of_IN length_NN MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT variables_NNS into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, each_DT containing_VBG MATH_NNP variables_NNS ._.
Partition_VB the_DT event_NN space_NN into_IN pairs_NNS MATH_NNP that_IN partition_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP blocks_NNS MATH_NNP where_WRB MATH_NNP is_VBZ a_DT MATH_NNP binary_JJ matrix_NN ._.
Partition_VB MATH_NNP with_IN respect_NN to_IN MATH_NNP ,_, that_DT is_VBZ ,_, so_IN that_DT MATH_NNP ._.
Partition_VB ,_, then_RB there_EX exists_VBZ a_DT solution_NN with_IN MATH_NNP ._.
Partition_VB MATH_NNP in_IN to_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP if_IN MATH_NNP and_CC otherwise_RB MATH_NNP ._.
Partition_VB MATH_NNP inductively_RB as_IN follows_VBZ :_: CASE_NNP :_: let_NN MATH_NNP for_IN some_DT MATH_NNP ,_, halt_NN if_IN no_DT such_JJ MATH_NNP exists_NNS ,_, CASE_NNP :_: let_NN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP as_IN in_IN the_DT preceding_NN paragraph_NN ,_, then_RB we_PRP have_VBP MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ clopen_JJ sets_NNS MATH_NNP with_IN the_DT property_NN that_IN for_IN each_DT MATH_NNP and_CC for_IN each_DT MATH_NNP ,_, we_PRP either_CC have_VB MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, or_CC MATH_NNP ._.
Partition_VB constructs_VBZ lines_NNS of_IN three_CD nodes_NNS each_DT ,_, where_WRB one_CD endpoint_NN is_VBZ in_IN state_NN MATH_NNP ,_, the_DT other_JJ endpoint_NN in_IN state_NN MATH_NNP ,_, and_CC the_DT center_NN is_VBZ in_IN state_NN MATH_NNP ._.
Partition_VB the_DT p-c_JJ matrix_NN into_IN MATH_NNP submatrices_NNS as_IN follows_VBZ (_( also_RB ,_, see_VBP REF_NNP )_) :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ NAME_NNP sets_NNS MATH_NNP where_WRB MATH_NNP iff_NN MATH_NNP has_VBZ MATH_NNP many_JJ MATH_NNP neighbors_NNS and_CC MATH_NNP many_JJ MATH_NNP neighbors_NNS (_( so_RB MATH_NNP and_CC MATH_NNP )_) ._.
Partition_VB edges_VBZ MATH_NNP into_IN two_CD groups_NNS ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN squares_NNS MATH_NNP of_IN side-length_JJ MATH_NNP ._.
Partition_VB the_DT circle_NN into_IN MATH_NNP atomic_JJ arcs_NN ,_, where_WRB each_DT arc_NN contains_VBZ MATH_NNP endpoints_NNS of_IN intervals_NNS in_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP one-dimensional_JJ intervals_NNS MATH_NNP ,_, MATH_NNP of_IN a_DT cardinality_NN MATH_NNP each_DT ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP ,_, each_DT of_IN size_NN at_IN least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP each_DT of_IN size_NN at_IN least_JJS MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD equal-sized_JJ sets_NNS MATH_NNP and_CC MATH_NNP and_CC build_VB the_DT data_NNS structure_NN for_IN range_JJ sum_NN on_IN each_DT ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, and_CC MATH_NNP ,_, namely_RB the_DT first_JJ MATH_NNP vertices_NNS ,_, the_DT middle_NN ,_, and_CC the_DT last_JJ ,_, respectively_RB ,_, as_IN they_PRP are_VBP ordered_VBN on_IN the_DT unit_NN interval_NN ._.
Partition_VB the_DT finite_JJ set_NN MATH_NNP into_IN the_DT finite_JJ number_NN of_IN disjoint_NN subsets_NNS MATH_NNP of_IN options_NNS MATH_NNP belonging_VBG to_IN the_DT same_JJ affine_JJ space_NN MATH_NNP parallel_NN to_IN MATH_NNP ._.
Partition_VB the_DT vertex_NN set_NN of_IN MATH_NNP as_IN MATH_NNP with_IN MATH_NNP and_CC MATH_NNP so_IN the_DT Laplacian_JJ matrix_NN of_IN MATH_NNP has_VBZ the_DT block_NN form_NN MATH_NNP ._.
Partition_VB the_DT vertex-disjoint_JJ MATH_NNP tuples_VBZ into_IN groups_NNS depending_VBG on_IN which_WDT MATH_NNP element_JJ subset_NN of_IN MATH_NNP is_VBZ the_DT union_NN of_IN their_PRP$ vertices_NNS ._.
Partition_VB MATH_NNP into_IN infinitely_RB many_JJ infinite_JJ subsets_NNS MATH_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP randomly_RB into_IN sets_NNS MATH_NNP by_IN choosing_NN ,_, for_IN each_DT vertex_NN MATH_NNP ,_, a_DT vertex_NN MATH_NNP uniformly_RB at_IN random_NN and_CC independently_RB (_( of_IN the_DT choices_NNS made_VBD for_IN all_DT other_JJ vertices_NNS of_IN MATH_NNP )_) and_CC placing_VBG MATH_NNP in_IN part_NN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN consecutive_JJ intervals_NNS of_IN size_NN MATH_NNP ,_, and_CC distribute_VB the_DT vertices_NNS of_IN MATH_NNP according_VBG to_IN their_PRP$ in-degrees_NNS in_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN segments_NNS of_IN length_NN MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP are_VBP 0-1_JJ column_NN vectors_NNS ._.
Partition_VB MATH_NNP and_CC MATH_NNP as_IN in_IN REF_NNP ._.
Partition_VB the_DT vertices_NNS of_IN MATH_NNP into_IN MATH_NNP parts_NNS MATH_NNP such_JJ that_IN for_IN every_DT MATH_NNP ,_, MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN boxes_NNS of_IN side_NN length_NN MATH_NNP and_CC denote_VB by_IN MATH_NNP the_DT collection_NN of_IN these_DT boxes_NNS ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP according_VBG to_IN these_DT MATH_NNP possibilities_NNS :_: let_NN MATH_NNP be_VB the_DT set_NN of_IN vertices_NNS MATH_NNP which_WDT have_VBP indegree_VBN exactly_RB MATH_NNP in_IN MATH_NNP ._.
Partition_VB to_IN D-OPG_NNP MATH_NNP is_VBZ constructed_VBN by_IN a_DT restriction_NN of_IN D-OPG_NNP MATH_NNP ._.
Partition_VB instance_NN with_IN former_JJ notations_NNS ,_, we_PRP apply_VBP several_JJ restrictions_NNS on_IN D-OPG_NNP MATH_NNP :_: REF_NNP there_EX are_VBP MATH_NNP types_NNS of_IN robot_NN and_CC there_EX is_VBZ a_DT single_JJ robot_NN for_IN each_DT type_NN ,_, that_DT is_VBZ ,_, MATH_NNP for_IN MATH_NNP ,_, so_IN MATH_NNP REF_NNP the_DT MATH_NNP capacities_NNS MATH_NNP are_VBP set_VBN to_TO be_VB equal_JJ to_IN MATH_NNP for_IN each_DT of_IN the_DT MATH_NNP elements_NNS MATH_NNP ,_, and_CC REF_NNP there_EX are_VBP MATH_NNP perimeters_NNS and_CC each_DT perimeter_NN MATH_NNP is_VBZ continuous_JJ and_CC MATH_NNP for_IN all_DT MATH_NNP ._.
Partition_VB instance_NN admits_VBZ a_DT partition_NN of_IN MATH_NNP into_IN MATH_NNP such_JJ that_IN MATH_NNP for_IN all_DT MATH_NNP if_IN and_CC only_RB if_IN a_DT valid_JJ depolyment_NN exists_NNS in_IN the_DT corresponding_NN D-OPG_NNP MATH_NNP instance_NN ._.
Partition_VB to_IN D-OPG_NNP MATH_NNP is_VBZ polynomial_JJ REF_NNP ._.
Partition_VB is_VBZ strongly_RB NP-hard_JJ ,_, so_RB is_VBZ D-OPG_NNP MATH_NNP and_CC OPG_NNP MATH_NNP ._.
Partition_VB into_IN pairs_NNS MATH_NNP in_IN any_DT manner_NN the_DT set_NN of_IN MATH_NNP vectors_NNS of_IN length_NN MATH_NNP whose_WP$ first_JJ component_NN is_VBZ MATH_NNP (_( actually_RB partitioning_VBG into_IN pairs_NNS of_IN any_DT complement-free_JJ set_NN of_IN MATH_NNP vectors_NNS will_MD do_VB )_) ._.
Partition_VB MATH_NNP into_IN three_CD disjoint_NN sets_NNS :_: CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP CASE_NNP :_: MATH_NNP so_IN that_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN its_PRP$ discrete_JJ and_CC continuous_JJ parts_NNS ._.
Partition_VB MATH_NNP in_IN two_CD sets_NNS MATH_NNP ,_, MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP segments_NNS :_: its_PRP$ MATH'th_NNP segment_NN is_VBZ the_DT interval_JJ MATH_NNP (_( note_NN that_IN the_DT segments_NNS overlap_VBP at_IN the_DT critical_JJ points_NNS )_) ._.
Partition_VB MATH_NNP into_IN MATH_NNP segments_NNS :_: its_PRP$ MATH'th_NNP segment_NN is_VBZ the_DT interval_JJ MATH_NNP ._.
Partition_VB MATH_NNP into_IN finitely_RB many_JJ intervals_NNS MATH_NNP ,_, in_IN such_PDT a_DT way_NN that_IN for_IN each_DT MATH_NNP ._.
Partition_VB in_IN polynomial_JJ time_NN to_IN Burning_NNP Number_NNP ._.
Partition_VB as_IN stated_VBN above_IN ,_, we_PRP denote_VBP MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB ,_, we_PRP can_MD assume_VB MATH_NNP to_TO be_VB in_IN MATH_NNP and_CC as_IN MATH_NNP is_VBZ bounded_VBN by_IN MATH_NNP ,_, the_DT caterpillar_JJ MATH_NNP is_VBZ computed_VBN in_IN polynomial_JJ time_NN with_IN regard_NN to_IN the_DT input_NN length_NN ._.
Partition_VB this_DT MATH_NNP time_NN period_NN into_IN subperiods_NNS of_IN equal_JJ length_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP equal_JJ subintervals_NNS ,_, MATH_NNP ,_, each_DT of_IN them_PRP having_VBG length_NN MATH_NNP ._.
Partition_VB this_DT matrix_NN of_IN size_NN MATH_NNP into_IN four_CD block_NN submatrices_NNS of_IN size_NN MATH_NNP ,_, and_CC consider_VBP the_DT 11-submatrix_CD of_IN MATH_NNP ,_, that_DT is_VBZ ,_, the_DT MATH_NNP component_NN in_IN the_DT MATH_NNP array_NN of_IN the_DT four_CD blocks_NNS ._.
Partition_VB the_DT node_NN set_VBD MATH_NNP into_IN subsets_NNS MATH_NNP such_JJ that_IN each_DT MATH_NNP for_IN MATH_NNP includes_VBZ at_IN least_RBS MATH_NNP nodes_NNS and_CC the_DT number_NN of_IN edges_NNS between_IN MATH_NNP s_NN is_VBZ minimized_VBN ._.
Partition_VB an_DT empty_JJ MATH_NNP rectangle_NN ,_, say_VBP MATH_NNP ,_, into_IN MATH_NNP empty_JJ rectangles_NNS of_IN size_NN MATH_NNP ,_, say_VBP MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN classes_NNS by_IN the_DT maximum_JJ value_NN of_IN MATH_NNP ,_, for_IN which_WDT MATH_NNP ._.
Partition_VB the_DT domain_NN of_IN summation_NN MATH_NNP of_IN MATH_NNP into_IN blocks_NNS MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP sets_NNS ,_, where_WRB set_NN MATH_NNP contains_VBZ the_DT four_CD number_NN in_IN the_DT pairs_NNS MATH_NNP and_CC MATH_NNP ,_, and_CC for_IN MATH_NNP the_DT set_NN MATH_NNP contains_VBZ all_DT those_DT numbers_NNS that_WDT appear_VBP in_IN the_DT pairs_NNS MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT curves_NNS of_IN MATH_NNP into_IN two_CD maximal_JJ multicurves_NNS MATH_NNP and_CC MATH_NNP (_( for_IN concreteness_NN ,_, say_VBP MATH_NNP consists_NNS of_IN those_DT curves_NNS labeled_VBD by_IN some_DT MATH_NNP and_CC MATH_NNP consists_NNS of_IN those_DT labeled_VBN by_IN either_DT MATH_NNP or_CC MATH_NNP )_) ._.
Partition_VB the_DT remaining_VBG vertices_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP contains_VBZ all_DT vertices_NNS in_IN parts_NNS having_VBG red_JJ edges_NNS to_IN MATH_NNP and_CC MATH_NNP contains_VBZ all_DT vertices_NNS in_IN parts_NNS having_VBG blue_JJ edges_NNS to_IN MATH_NNP ._.
Partition_VB the_DT collection_NN of_IN inputs_JJ MATH_NNP into_IN classes_NNS as_IN follows_VBZ :_: for_IN every_DT two_CD graphs_NNS MATH_NNP ,_, define_VBP the_DT class_NN MATH_NNP ,_, consisting_VBG of_IN the_DT MATH_NNP dumbbell_NN graphs_NNS constructed_VBD from_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP of_IN equal_JJ measure_NN ._.
Partition_VB each_DT MATH_NNP to_TO MATH_NNP elements_NNS MATH_NNP such_JJ that_IN for_IN every_DT MATH_NNP ,_, MATH_NNP and_CC set_VBD MATH_NNP ,_, MATH_NNP ,_, if_IN there_EX exists_VBZ MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP sets_VBZ MATH_NNP of_IN equal_JJ size_NN ._.
Partition_VB the_DT matrix_NN MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD parts_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT subset_NN of_IN nodes_NNS of_IN MATH_NNP that_DT are_VBP in_IN MATH_NNP ,_, and_CC thus_RB MATH_NNP contains_VBZ the_DT nodes_NNS of_IN MATH_NNP that_DT are_VBP in_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD sets_NNS MATH_NNP and_CC MATH_NNP ,_, where_WRB MATH_NNP is_VBZ a_DT subset_NN of_IN MATH_NNP and_CC MATH_NNP is_VBZ a_DT subset_NN of_IN MATH_NNP ._.
Partition_VB the_DT vertices_NNS into_IN MATH_NNP ,_, such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB the_DT points_NNS of_IN MATH_NNP by_IN rank_NN so_IN that_IN MATH_NNP is_VBZ the_DT set_NN of_IN points_NNS of_IN rank_NN MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN points_NNS with_IN MATH_NNP 's_POS rank_NN as_IN MATH_NNP where_WRB the_DT points_NNS in_IN MATH_NNP lie_NN to_IN the_DT left_NN of_IN MATH_NNP and_CC the_DT points_NNS in_IN MATH_NNP lie_NN to_IN the_DT right_NN of_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN four_CD disjoint_NN sets_NNS of_IN equal_JJ size_NN ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, such_JJ that_IN MATH_NNP ._.
Partition_VB MATH_NNP based_VBN on_IN the_DT assigned_VBN MATH_NNP values_NNS into_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB the_DT vertices_NNS in_IN MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP such_JJ that_IN MATH_NNP for_IN each_DT MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT sets_NNS MATH_NNP and_CC partition_NN MATH_NNP into_IN the_DT sets_NNS MATH_NNP ._.
Partition_VB MATH_NNP so_IN that_IN MATH_NNP ,_, MATH_NNP and_CC MATH_NNP are_VBP MATH_NNP random_NN ._.
Partition_VB MATH_NNP with_IN MATH_NNP random_NN and_CC MATH_NNP random_NN ._.
Partition_VB colors_NNS MATH_NNP as_IN MATH_NNP so_IN that_DT ,_, for_IN each_DT MATH_NNP and_CC MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ,_, and_CC then_RB REF_NNP can_MD be_VB equivalently_RB rewritten_VBN into_IN MATH_NNP ._.
Partition_VB the_DT set_NN of_IN typical_JJ sequences_NNS MATH_NNP into_IN disjoint_NN subsets_NNS MATH_NNP of_IN size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP each_DT of_IN size_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT rows_NNS of_IN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP such_JJ that_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP for_IN MATH_NNP and_CC MATH_NNP for_IN MATH_NNP ._.
Partition_VB the_DT positive_JJ even_RB roots_NNS MATH_NNP into_IN three_CD subsets_NNS :_: MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB for_IN MATH_NNP ,_, MATH_NNP is_VBZ defined_VBN as_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC select_VB any_DT value_NN MATH_NNP for_IN which_WDT MATH_NNP ._.
Partition_VB MATH_NNP does_VBZ the_DT following_NN ._.
Partition_VB MATH_NNP find_VBP MATH_NNP for_IN MATH_NNP and_CC MATHd_NNP REF_NNP MATH_NNP ._.
Partition_VB the_DT indices_NNS of_IN the_DT nonzero_NN labels_VBZ MATH_NNP into_IN MATH_NNP subsets_NNS MATH_NNP (_( ``_`` batches_NNS ''_'' )_) ,_, each_DT of_IN cardinality_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT indices_NNS of_IN the_DT nonzero_NN labels_VBZ MATH_NNP into_IN subsets_NNS MATH_NNP (_( ``_`` batches_NNS ''_'' )_) so_RB that_IN MATH_NNP ._.
Partition_VB the_DT edge_NN set_VBD MATH_NNP as_IN follows_VBZ ,_, for_IN every_DT MATH_NNP let_NN MATH_NNP ._.
Partition_VB the_DT optimal_JJ solution_NN in_IN REF_NNP such_JJ that_IN MATH_NNP ,_, MATH_NNP ,_, and_CC MATH_NNP ._.
Partition_VB it_PRP into_IN falls_NNS ._.
Partition_VB instances_NNS MATH_NNP ,_, each_DT with_IN at_IN most_JJS MATH_NNP integers_NNS and_CC target_NN at_IN most_JJS MATH_NNP ,_, our_PRP$ reduction_NN constructs_VBZ MATH_NNP jobs_NNS with_IN maximum_JJ processing_VBG time_NN MATH_NNP ._.
Partition_VB the_DT padded_JJ matrices_NNS MATH_NNP and_CC MATH_NNP into_IN MATH_NNP block_NN matrices_NNS where_WRB each_DT block_NN has_VBZ size_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP disjoint_NN events_NNS MATH_NNP ,_, where_WRB MATH_NNP is_VBZ the_DT event_NN that_IN all_DT MATH_NNP occur_NN for_IN MATH_NNP in_IN MATH_NNP and_CC no_DT MATH_NNP occurs_VBZ for_IN MATH_NNP not_RB in_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB each_DT set_NN MATH_NNP into_IN non-empty_JJ sets_NNS MATH_NNP ,_, where_WRB each_DT vertex_NN MATH_NNP is_VBZ classified_JJ according_VBG to_IN its_PRP$ color_NN by_IN MATH_NNP and_CC the_DT component_NN it_PRP belongs_VBZ to_IN ._.
Partition_VB MATH_NNP into_IN MATH_NNP so_IN that_IN each_DT MATH_NNP has_VBZ size_NN MATH_NNP ._.
Partition_VB the_DT MATH_NNP parties_NNS into_IN sets_NNS MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP ,_, and_CC consider_VBP the_DT following_JJ experiment_NN :_: CASE_NNP :_: Choose_JJ uniform_JJ MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP disjoint_NN sub-intervals_NNS of_IN equal_JJ length_NN ,_, and_CC define_VB the_DT sequence_NN of_IN end_NN points_NNS as_IN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB the_DT sides_NNS MATH_NNP of_IN MATH_NNP into_IN MATH_NNP disjoint_NN pairs_VBZ MATH_NNP ,_, discarding_VBG the_DT last_JJ side_NN MATH_NNP ._.
Partition_VB the_DT area_NN around_RP MATH_NNP with_IN squares_NNS of_IN edge_NN length_NN MATH_NNP with_IN edges_NNS parallel_VBP or_CC perpendicular_JJ to_IN MATH_NNP ._.
Partition_VB MATH_NNP where_WRB MATH_NNP is_VBZ the_DT disjoint_NN union_NN :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN frames_NNS of_IN MATH_NNP bits_NNS each_DT ._.
Partition_VB MATH_NNP into_IN MATH_NNP regions_NNS where_WRB each_DT region_NN MATH_NNP REF_NNP consists_VBZ of_IN MATH_NNP different_JJ numbers_NNS ._.
Partition_VB MATH_NNP into_IN subsets_NNS of_IN edges_NNS MATH_NNP ,_, such_JJ that_IN if_IN MATH_NNP ,_, then_RB MATH_NNP is_VBZ an_DT endpoint_NN of_IN MATH_NNP ._.
Partition_VB both_DT set_VBP MATH_NNP for_IN MATH_NNP into_IN sets_NNS MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB the_DT MATH_NNP are_VBP disjoint_JJ subsets_NNS of_IN MATH_NNP each_DT with_IN the_DT same_JJ cardinality_NN as_IN MATH_NNP and_CC define_JJ bijections_NNS MATH_NNP ._.
Partition_VB MATH_NNP into_IN the_DT MATH_NNP blocks_NNS MATH_NNP and_CC MATH_NNP :_: MATH_NNP ,_, and_CC compare_VB REF_NNP in_IN order_NN to_IN see_VB that_IN in_IN the_DT points_NNS of_IN invertibility_NN of_IN MATH_NNP (_( for_IN MATH_NNP satisfying_VBG MATH_NNP )_) the_DT NAME_NNP function_NN MATH_NNP has_VBZ the_DT form_NN MATH_NNP ._.
Partition_VB MATH_NNP into_IN three_CD sets_NNS MATH_NNP according_VBG to_IN the_DT distance_NN to_IN MATH_NNP and_CC MATH_NNP :_: MATH_NNP ._.
Partition_VB the_DT set_NN of_IN leaves_NNS into_IN bags_NNS so_IN that_IN leaves_NNS arising_VBG out_IN of_IN different_JJ actions_NNS from_IN a_DT common_JJ MATH_NNP node_NN are_VBP placed_VBN in_IN different_JJ bags_NNS ._.
Partition_VB of_IN the_DT circuit_NN error_NN :_: Denote_NNP MATH_NNP ._.
Partition_VB the_DT edge_NN set_NN of_IN the_DT copy_NN of_IN MATH_NNP with_IN vertex_NN set_VBN MATH_NNP into_IN three_CD edge-disjoint_JJ matchings_NNS MATH_NNP ._.
Partition_VB the_DT edges_NNS of_IN the_DT copy_NN of_IN MATH_NNP on_IN MATH_NNP into_IN three_CD edge-disjoint_JJ matchings_NNS MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN MATH_NNP equally_RB sized_VBD (_( sorted_VBD )_) subsets_NNS MATH_NNP (_( MATH_NNP )_) ._.
Partition_VB each_DT MATH_NNP arbitrarily_RB into_IN five_CD parts_NNS of_IN nearly_RB equal_JJ size_NN (_( differing_VBG by_IN at_IN most_RBS 1_CD )_) ,_, MATH_NNP ._.
Partition_VB all_DT strings_NNS in_IN MATH_NNP using_VBG the_DT relation_NN MATH_NNP defined_VBD as_IN :_: MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP and_CC MATH_NNP so_RB that_IN MATH_NNP if_IN MATH_NNP with_IN MATH_NNP ,_, MATH_NNP ._.
Partition_VB MATH_NNP into_IN MATH_NNP ,_, where_WRB MATH_NNP consists_VBZ of_IN the_DT vertices_NNS of_IN degree_NN two_CD introduced_VBN by_IN the_DT MATH_NNP subdivisions_NNS ._.
Partition_VB the_DT lift_NN of_IN MATH_NNP into_IN MATH_NNP ,_, MATH_NNP ,_, into_IN MATH_NNP ,_, where_WRB MATH_NNP and_CC MATH_NNP ._.
Partition_VB refinement_NN is_VBZ now_RB performed_VBN on_IN the_DT following_JJ MATH_NNP coalgebra_NN :_: MATH_NNP where_WRB MATH_NNP and_CC MATH_NNP are_VBP the_DT canonical_JJ injections_NNS ._.
Partition_VB MATH_NNP into_IN antichains_NNS MATH_NNP by_IN successively_RB removing_VBG the_DT minimal_JJ elements_NNS ._.
Partition_VB the_DT set_NN MATH_NNP into_IN disjoint_NN intervals_NNS MATH_NNP ,_, MATH_NNP ,_, of_IN mesh_NN MATH_NNP (_( with_IN the_DT interval_NN containing_VBG zero_CD having_VBG length_NN equal_JJ to_IN the_DT mesh_NN )_) ._.
Partition_VB MATH_NNP in_IN MATH_NNP equal_JJ intervals_NNS MATH_NNP and_CC let_VB MATH_NNP be_VB the_DT centers_NNS of_IN those_DT intervals_NNS ._.
Partition_VB MATH_NNP into_IN MATH_NNP parts_NNS ,_, MATH_NNP ._.
Partition_VB MATH_NNP with_IN MATH_NNP ._.
Partition_VB the_DT set_NN MATH_NNP into_IN subsets_NNS between_IN multiples_NNS of_IN MATH_NNP as_IN MATH_NNP where_WRB the_DT MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP such_JJ that_IN each_DT MATH_NNP is_VBZ a_DT subset_NN of_IN some_DT ball_NN MATH_NNP of_IN radius_NN one_CD with_IN center_NN MATH_NNP ,_, and_CC let_VB MATH_NNP (_( respectively_RB ,_, MATH_NNP )_) be_VB the_DT set_NN of_IN points_NNS MATH_NNP in_IN MATH_NNP with_IN MATH_NNP (_( respectively_RB ,_, fREF_NN =_$ 0_-NONE- )_) ._.
Partition_VB the_DT string_NN MATH_NNP into_IN MATH_NNP blocks_NNS MATH_NNP of_IN length_NN less_JJR than_IN MATH_NNP each_DT ,_, where_WRB the_DT MATH_NNP block_NN starts_VBZ at_IN position_NN MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB the_DT string_NN MATH_NNP into_IN MATH_NNP blocks_NNS MATH_NNP of_IN length_NN at_IN most_JJS MATH_NNP each_DT ,_, where_WRB the_DT MATH_NNP block_NN starts_VBZ at_IN position_NN MATH_NNP ,_, that_DT is_VBZ ,_, MATH_NNP ._.
Partition_VB the_DT indices_NNS MATH_NNP into_IN MATH_NNP such_JJ that_IN for_IN MATH_NNP ,_, MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP and_CC MATH_NNP if_IN and_CC on_IN if_IN MATH_NNP ._.
Partition_VB the_DT space_NN MATH_NNP into_IN small_JJ boxes_NNS of_IN side_NN length_NN MATH_NNP (_( and_CC hence_NN of_IN volume_NN between_IN MATH_NNP and_CC MATH_NNP )_) ,_, and_CC denote_VB these_DT by_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN at_IN most_JJS MATH_NNP intervals_NNS of_IN length_NN at_IN most_JJS MATH_NNP ._.
Partition_VB the_DT 3-NAME_CD with_IN common_JJ difference_NN MATH_NNP in_IN MATH_NNP into_IN different_JJ classes_NNS according_VBG to_IN the_DT congruence_NN class_NN modulo_NN MATH_NNP of_IN the_DT 3-AP_NNP (_( so_RB the_DT class_NN a_DT 3-AP_JJ belongs_NN to_IN is_VBZ determined_VBN by_IN the_DT congruence_NN class_NN modulo_NN MATH_NNP of_IN the_DT first_JJ element_NN of_IN the_DT 3-AP_CD )_) ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN MATH_NNP equal-sized_JJ closed_VBD intervals_NNS MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB the_DT real_JJ line_NN according_VBG to_IN the_DT increasing_VBG sequence_NN MATH_NNP where_WRB MATH_NNP ._.
Partition_VB MATH_NNP in_IN an_DT arbitrary_JJ way_NN into_IN MATH_NNP so_IN that_IN MATH_NNP if_IN and_CC only_RB if_IN MATH_NNP ._.
Partition_VB MATH_NNP into_IN sets_NNS MATH_NNP such_JJ that_IN for_IN each_DT MATH_NNP and_CC MATH_NNP there_EX is_VBZ a_DT MATH_NNP such_JJ that_IN MATH_NNP and_CC for_IN all_DT MATH_NNP and_CC MATH_NNP are_VBP incomparable_JJ ._.
Partition_VB the_DT first_JJ MATH_NNP nodes_NNS of_IN MATH_NNP into_IN disjoint_JJ consecutive_JJ regions_NNS :_: starting_VBG with_IN node_NN 1_CD ,_, region_NN MATH_NNP consists_VBZ of_IN the_DT next_JJ block_NN of_IN MATH_NNP nodes_NNS ,_, for_IN MATH_NNP ._.
Partition_VB the_DT interval_NN MATH_NNP into_IN dyadic_JJ intervals_NNS in_IN the_DT usual_JJ manner_NN ._.
Partition_VB MATH_NNP into_IN three_CD components_NNS MATH_NNP ,_, for_IN MATH_NNP ;_: and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN subsets_NNS MATH_NNP for_IN MATH_NNP and_CC MATH_NNP ._.
Partition_VB MATH_NNP into_IN two_CD blocks_NNS ,_, MATH_NNP ,_, where_WRB MATH_NNP corresponds_VBZ to_IN the_DT relators_NNS MATH_NNP ,_, and_CC MATH_NNP corresponds_NNS to_IN the_DT basic_JJ commutators_NNS ._.
Partition_VB MATH_NNP into_IN about_IN MATH_NNP refinements_NNS MATH_NNP ,_, each_DT of_IN which_WDT is_VBZ MATH_NNP separated_JJ ._.
Partition_VB MATH_NNP into_IN a_DT collection_NN of_IN pairwise_NN disjoint_NN subfamilies_NNS MATH_NNP ,_, MATH_NNP in_IN such_JJ a_DT way_NN that_WDT for_IN every_DT MATH_NNP ,_, MATH_NNP ,_, where_WRB MATH_NNP ._.
Partition_VB MATH_NNP as_IN MATH_NNP where_WRB MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ,_, MATH_NNP ._.
Partition_VB the_DT rounds_NNS into_IN meta-rounds_NNS ,_, each_DT containing_VBG MATH_NNP rounds_NNS ._.
